language: swift
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n  \
    \      i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpajmrbx9r/tmpajmrbx9r.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9161d10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9161a07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9161a07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9161a067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpajmrbx9r                        0x000055671217e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9161efc460 __libc_start_main +
    245

    6    tmpajmrbx9r                        0x000055671217e079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let fib = fibs[i - 1] + fibs[i - 2]\n    \
    \    if is_prime(n: fib) {\n            fibs.append(fib)\n            i += 1\n\
    \        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp07pjlzpv.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n   \
    \ var prime = prime_numbers()\n    var i = 0\n    var result = 0\n    while i\
    \ < n {\n        let f = fib.next()!\n        let p = prime.next()!\n        if\
    \ f == p {\n            result = f\n            i += 1\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp4a4y8ry5.swift:14:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmp4a4y8ry5.swift:15:17:\
    \ error: cannot find 'prime_numbers' in scope\n    var prime = prime_numbers()\n\
    \                ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n   \
    \ var i = 2\n    while i < n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n\
    \        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp6wob9uo3/tmp6wob9uo3.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac15a463c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac15a15ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac15a15a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac15a1597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6wob9uo3                        0x0000555df4d694d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac15a64f460 __libc_start_main +
    245

    6    tmp6wob9uo3                        0x0000555df4d69019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpglg2ht01/tmpglg2ht01.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8a5267c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8a4f5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8a4f5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8a4f5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpglg2ht01                        0x0000558b71bf54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ad8a5453460 __libc_start_main +
    245

    6    tmpglg2ht01                        0x0000558b71bf5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n   \
    \ var prime = prime_numbers()\n    var i = 0\n    var result = 0\n    while i\
    \ < n {\n        if fib.next() == prime.next() {\n            result = fib.next()\n\
    \            i += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpzfhrbe1_.swift:14:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmpzfhrbe1_.swift:15:17:\
    \ error: cannot find 'prime_numbers' in scope\n    var prime = prime_numbers()\n\
    \                ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(n: i)\n        if is_prime(n: fib)\
    \ {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcliakh9i.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(n: i)\n              ^~~~~~~~~\n/tmp/tmpcliakh9i.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(n: fib) {\n    \
    \       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpglg2ht01/tmpglg2ht01.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8a5267c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8a4f5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8a4f5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8a4f5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpglg2ht01                        0x0000558b71bf54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ad8a5453460 __libc_start_main +
    245

    6    tmpglg2ht01                        0x0000558b71bf5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    var j = 0\n    while i < n {\n        j = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: j) {\n            fib.append(j)\n            i += 1\n\
    \        }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcs03sz3f.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: j) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    var\
    \ i = 0\n    while fib.count < n {\n        if i == 0 || i == 1 {\n          \
    \  fib.append(i)\n        } else {\n            fib.append(fib[i-1] + fib[i-2])\n\
    \        }\n        i += 1\n    }\n    return fib.last!\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmp730oml0v/tmp730oml0v.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af276bbbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2768b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2768b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2768b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp730oml0v                        0x00005630edfcc488 <unavailable> + 5256

    5    libc.so.6                          0x00002af276da7460 __libc_start_main +
    245

    6    tmp730oml0v                        0x00005630edfcc139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = next_prime_fib(fib)\n        i += 1\n    }\n\
    \    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpzsnxxcjb.swift:17:15: error: cannot find 'next_prime_fib' in scope\n\
    \        fib = next_prime_fib(fib)\n              ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    var prev = 0\n    while i < n {\n        if is_prime(fib) {\n           \
    \ i += 1\n        }\n        let temp = fib\n        fib += prev\n        prev\
    \ = temp\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmps3z8cz82.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n\
    \    var k = 1\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        if is_prime(n: k) {\n            count += 1\n        }\n        i = j\n\
    \        j = k\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpipp6bk4j.swift:20:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n  \
    \      i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpajmrbx9r/tmpajmrbx9r.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9161d10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9161a07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9161a07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9161a067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpajmrbx9r                        0x000055671217e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9161efc460 __libc_start_main +
    245

    6    tmpajmrbx9r                        0x000055671217e079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(n: i)\n        if is_prime(n: fib)\
    \ {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcliakh9i.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(n: i)\n              ^~~~~~~~~\n/tmp/tmpcliakh9i.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(n: fib) {\n    \
    \       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n  \
    \      i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpajmrbx9r/tmpajmrbx9r.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9161d10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9161a07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9161a07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9161a067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpajmrbx9r                        0x000055671217e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9161efc460 __libc_start_main +
    245

    6    tmpajmrbx9r                        0x000055671217e079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var n = n\n    var fib = [2,\
    \ 3]\n    var i = 2\n    while n > fib.count {\n        fib.append(fib[i-1] +\
    \ fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmppdj6enqk/tmppdj6enqk.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b55d6ea2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b55d6b99b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b55d6b99988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55d6b987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdj6enqk                        0x000055ce47df6539 <unavailable> + 5433

    5    libc.so.6                          0x00002b55d708e460 __libc_start_main +
    245

    6    tmppdj6enqk                        0x000055ce47df6079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n\
    \    var f1 = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n    \
    \    f1 = f2\n        f2 = f\n        if is_prime(n: f) {\n            i += 1\n\
    \        }\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpit1pna2l.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpglg2ht01/tmpglg2ht01.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8a5267c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8a4f5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8a4f5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8a4f5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpglg2ht01                        0x0000558b71bf54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ad8a5453460 __libc_start_main +
    245

    6    tmpglg2ht01                        0x0000558b71bf5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n\
    \    var c = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(n: c) {\n            i += 1\n      \
    \  }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnihlw2h5.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var fib = 2\n\
    \    while i < n {\n        fib = fibonacci(n: fib)\n        if is_prime(n: fib)\
    \ {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnyn7m9to.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(n: fib)\n              ^~~~~~~~~\n/tmp/tmpnyn7m9to.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(n: fib) {\n    \
    \       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n   \
    \ var i = 2\n    while i < n {\n        let next_fib = fib_nums[i - 1] + fib_nums[i\
    \ - 2]\n        if is_prime(n: next_fib) {\n            fib_nums.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fgbknek.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var prime_fib_numbers = [2,\
    \ 3]\n    var i = 2\n    var fib_number = 0\n    while i < n {\n        fib_number\
    \ = prime_fib_numbers[i - 1] + prime_fib_numbers[i - 2]\n        if is_prime(number:\
    \ fib_number) {\n            prime_fib_numbers.append(fib_number)\n          \
    \  i += 1\n        }\n    }\n    return prime_fib_numbers[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6g644ke0.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(number: fib_number) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib: [Int] = [2, 3]\n \
    \   var i = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n  \
    \      if is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return\
    \ fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\n\
    assert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjmq8cf3x.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n\
    \    var k = 1\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        if is_prime(k) {\n            count += 1\n        }\n        i = j\n\
    \        j = k\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqp67dlh4.swift:20:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    var fib_1 = 1\n    var fib_2 = 1\n    while i < n {\n        fib = fib_1\
    \ + fib_2\n        fib_2 = fib_1\n        fib_1 = fib\n        if is_prime(n:\
    \ fib) {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpe94nb6op.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let fib = fibs[i - 1] + fibs[i - 2]\n    \
    \    if is_prime(n: fib) {\n            fibs.append(fib)\n            i += 1\n\
    \        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp07pjlzpv.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var prime_fib_numbers = [Int]()\n\
    \    var fib_numbers = fib(n: n)\n    for i in fib_numbers {\n        if is_prime(n:\
    \ i) {\n            prime_fib_numbers.append(i)\n        }\n    }\n    return\
    \ prime_fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp3_muwz4f.swift:15:23: error: cannot find 'fib' in scope\n    var\
    \ fib_numbers = fib(n: n)\n                      ^~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    if n == 1 {\n        return\
    \ 2\n    }\n    if n == 2 {\n        return 3\n    }\n    var a = 2\n    var b\
    \ = 3\n    var c = 0\n    var i = 2\n    while i < n {\n        c = a + b\n  \
    \      a = b\n        b = c\n        if is_prime(n: c) {\n            i += 1\n\
    \        }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpp79bj_em.swift:28:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(n: c) {\n            i += 1\n      \
    \  }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6x8ax4d6.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n   \
    \ var i = 2\n    while i < n {\n        let next_fib = fib_nums[i - 1] + fib_nums[i\
    \ - 2]\n        if is_prime(n: next_fib) {\n            fib_nums.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fgbknek.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuamqglqm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n\
    \        c = a + b\n        if is_prime(n: c) {\n            i += 1\n        }\n\
    \    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpnttv0_4o.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let new_fib = fibs[i - 1] + fibs[i - 2]\n\
    \        if is_prime(new_fib) {\n            fibs.append(new_fib)\n          \
    \  i += 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwp2eigjv.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(new_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] +\
    \ fib_numbers[i - 2]\n        if is_prime(n: next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz1eecn3w.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        let next = fib[i - 1] + fib[i - 2]\n\
    \        if is_prime(n: next) {\n            fib.append(next)\n        }\n   \
    \     i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmph2yrsjzs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        if is_prime(n: fib_numbers[i]) {\n            i\
    \ += 1\n        }\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmprp7ahqmk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib_numbers[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n\
    \    var k = 0\n    var count = 0\n    while count < n {\n        k = i + j\n\
    \        i = j\n        j = k\n        if is_prime(n: k) {\n            count\
    \ += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj1u4nk4v.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    var fib_n_1 = 1\n    var fib_n_2 = 0\n    while i < n {\n        fib = fib_n_1\
    \ + fib_n_2\n        fib_n_2 = fib_n_1\n        fib_n_1 = fib\n        if is_prime(n:\
    \ fib) {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpg76rphx7.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n\
    \    while i < n {\n        fib = fibonacci(n: i)\n        if is_prime(n: fib)\
    \ {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcliakh9i.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(n: i)\n              ^~~~~~~~~\n/tmp/tmpcliakh9i.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(n: fib) {\n    \
    \       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        let fib_number = fib_numbers[i - 1]\
    \ + fib_numbers[i - 2]\n        if is_prime(n: fib_number) {\n            fib_numbers.append(fib_number)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpa8r0ot0m.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib_number) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpglg2ht01/tmpglg2ht01.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8a5267c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8a4f5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8a4f5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8a4f5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpglg2ht01                        0x0000558b71bf54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ad8a5453460 __libc_start_main +
    245

    6    tmpglg2ht01                        0x0000558b71bf5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n  \
    \      i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpajmrbx9r/tmpajmrbx9r.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9161d10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9161a07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9161a07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9161a067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpajmrbx9r                        0x000055671217e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9161efc460 __libc_start_main +
    245

    6    tmpajmrbx9r                        0x000055671217e079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(n: c) {\n            i += 1\n      \
    \  }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6x8ax4d6.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let fib = fibs[i - 1] + fibs[i - 2]\n    \
    \    if is_prime(n: fib) {\n            fibs.append(fib)\n            i += 1\n\
    \        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp07pjlzpv.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n\
    \    var i = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1]\
    \ + fib_numbers[i-2])\n        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpglg2ht01/tmpglg2ht01.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8a5267c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8a4f5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8a4f5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8a4f5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpglg2ht01                        0x0000558b71bf54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ad8a5453460 __libc_start_main +
    245

    6    tmpglg2ht01                        0x0000558b71bf5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n\
    \    var c = 0\n    var i = 2\n    while i < n {\n        c = a + b\n        a\
    \ = b\n        b = c\n        if is_prime(n: c) {\n            i += 1\n      \
    \  }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpo9arkgji.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 2\n    var f2 = 3\n\
    \    var f3 = 5\n    var i = 3\n    while i < n {\n        f1 = f2\n        f2\
    \ = f3\n        f3 = f1 + f2\n        if is_prime(n: f3) {\n            i += 1\n\
    \        }\n    }\n    return f3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpv6s17sji.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: f3) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs: [Int] = [2, 3]\n\
    \    var i = 0\n    while fibs.count < n {\n        let next = fibs[i] + fibs[i+1]\n\
    \        if is_prime(n: next) {\n            fibs.append(next)\n        }\n  \
    \      i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6c31ugp7.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var fib = 2\n\
    \    while i < n {\n        fib = fibonacci(n: i)\n        if is_prime(n: fib)\
    \ {\n            i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp8r0ld93e.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(n: i)\n              ^~~~~~~~~\n/tmp/tmp8r0ld93e.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(n: fib) {\n    \
    \       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n     \
    \   i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp4f1a2fte/tmp4f1a2fte.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5438dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5435d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5435d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5435d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4f1a2fte                        0x000055d3299894d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ac543ac7460 __libc_start_main +
    245

    6    tmp4f1a2fte                        0x000055d329989019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n   \
    \ var i = 2\n    while fib_nums.count < n {\n        let next_fib = fib_nums[i\
    \ - 1] + fib_nums[i - 2]\n        if is_prime(n: next_fib) {\n            fib_nums.append(next_fib)\n\
    \        }\n        i += 1\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpz8qy2tmr.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmprrhcsewo/tmprrhcsewo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae017eb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae017ba9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae017ba9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae017ba87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrhcsewo                        0x0000564089b46368 <unavailable> + 4968

    5    libc.so.6                          0x00002ae01809e460 __libc_start_main +
    245

    6    tmprrhcsewo                        0x0000564089b46019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n   \
    \ var prime_fib_nums = [2, 3]\n    var i = 2\n    while prime_fib_nums.count <\
    \ n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n        if is_prime(n:\
    \ fib_nums[i]) {\n            prime_fib_nums.append(fib_nums[i])\n        }\n\
    \        i += 1\n    }\n    return prime_fib_nums[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpiirkle2_.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib_nums[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmps5k9la1d/tmps5k9la1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afca0215c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc9ff0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc9ff0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc9ff0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps5k9la1d                        0x000055f999006429 <unavailable> + 5161

    5    libc.so.6                          0x00002afca0401460 __libc_start_main +
    245

    6    tmps5k9la1d                        0x000055f999005f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(n: fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpu974zcsk.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while fib.count < n {\n        let next\
    \ = fib[i-1] + fib[i-2]\n        if is_prime(n: next) {\n            fib.append(next)\n\
    \        }\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp8lpc7jtz.swift:20:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i\
    \ = 2\n    var j = 0\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n\
    \        if is_prime(n: fib[i]) {\n            j += 1\n        }\n        i +=\
    \ 1\n    }\n    return fib[j]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpxnwrhv6b.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013603
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var\
    \ i = 2\n    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n   \
    \     if is_prime(n: next) {\n            fibs.append(next)\n            i +=\
    \ 1\n        }\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmplc68942g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n\
    \    var f1 = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n    \
    \    f1 = f2\n        f2 = f\n        if is_prime(n: f) {\n            i += 1\n\
    \        }\n    }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpit1pna2l.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if\
    \ is_prime(fib[i]) {\n            i += 1\n        }\n    }\n    return fib[n-1]\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp6yizg7np.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpmunsdgbe/tmpmunsdgbe.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb64a95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb6478cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb6478c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb6478b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmunsdgbe                        0x0000559d07dc54d9 <unavailable> + 5337

    5    libc.so.6                          0x00002afb64c81460 __libc_start_main +
    245

    6    tmpmunsdgbe                        0x0000559d07dc5019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n\
    \    var k = 1\n    var count = 1\n    while count < n {\n        k = i + j\n\
    \        if is_prime(n: k) {\n            count += 1\n        }\n        i = j\n\
    \        j = k\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwa3qqleu.swift:20:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013538
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n\
    /// >>> prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
    \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n       \
    \ if is_prime(n: next) {\n            fib.append(next)\n            i += 1\n \
    \       }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7pyeu5hs.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(n: next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013537

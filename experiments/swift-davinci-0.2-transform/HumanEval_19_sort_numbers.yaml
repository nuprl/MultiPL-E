name: HumanEval_19_sort_numbers
language: swift
prompt: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest to\
  \ largest\n/// >>> sort_numbers(numbers: \"three one five\")\n/// \"one three five\"\
  \nfunc sort_numbers(numbers: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
  \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") ==\
  \ \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine\
  \ eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
  \ \"six five four three two one zero\") == \"zero one two three four five six\")"
completions: ["    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_array = numbers.split(separator: \" \")\n    let numeral_int_array\
    \ = numeral_array.map { numeral_map[String($0)]! }\n    let numeral_int_array_sorted\
    \ = numeral_int_array.sorted()\n    let numeral_array_sorted = numeral_int_array_sorted.map\
    \ { String($0) }\n    return numeral_array_sorted.joined(separator: \" \")", " \
    \   let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let nums_int =\
    \ nums.map { Int(number_to_numeral(number: String($0))!) }\n    let sorted_nums\
    \ = nums_int.sorted()\n    let sorted_nums_str = sorted_nums.map { numeral_to_number(numeral:\
    \ String($0)) }\n    return sorted_nums_str.joined(separator: \" \")", "    let\
    \ words = numbers.split(separator: \" \")\n    let sorted = words.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted(by:\
    \ {\n        let num1 = Int(number_to_digit(number: String($0)))\n        let\
    \ num2 = Int(number_to_digit(number: String($1)))\n        return num1! < num2!\n\
    \    })\n    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ numeral_to_int(numeral: String(lhs)) < numeral_to_int(numeral: String(rhs))\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = numbers.sorted {\n        switch $0 {\n        case\
    \ \"zero\":\n            return true\n        case \"one\":\n            return\
    \ $1 != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\"\n        case \"three\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1\
    \ != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numberals =\
    \ numbers.split(separator: \" \")\n    let sortedNumberals = numberals.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sortedNumberals.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sortedNums\
    \ = nums.sorted(by: { (a, b) -> Bool in\n        let numA = Int(a) ?? 0\n    \
    \    let numB = Int(b) ?? 0\n        return numA < numB\n    })\n    return sortedNums.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let input = numbers.split(separator:\
    \ \" \")\n    let sorted = input.sorted { numberals.firstIndex(of: String($0))!\
    \ < numberals.firstIndex(of: String($1))! }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        switch $0 {\n        case \"zero\":\n            return true\n  \
    \      case \"one\":\n            return $1 != \"zero\"\n        case \"two\"\
    :\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"three\"\
    :\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n     \
    \   case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 !=\
    \ \"two\" && $1 != \"three\"\n        case \"five\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \n        case \"six\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\n     \
    \   case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"\
    six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1 != \"\
    one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \ && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1 != \"eight\"\
    \n        default:\n            return false\n        }\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        let lhsNum = Int(lhs)!\n        let rhsNum\
    \ = Int(rhs)!\n        return lhsNum < rhsNum\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let num1 = Int(String($0)) ?? 0\n        let num2 = Int(String($1))\
    \ ?? 0\n        return num1 < num2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sortedNums\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sortedNums.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let numbersArray\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbersArray.sorted\
    \ { (first, second) -> Bool in\n        return first < second\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted(by: { (a, b) -> Bool in\n        return\
    \ number_to_int(number: a) < number_to_int(number: b)\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numbers = numbers.split(separator: \" \")\n    let sorted = numbers.sorted\
    \ {\n        return number_to_int(number: String($0)) < number_to_int(number:\
    \ String($1))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let\
    \ sortedNumbers = numbers.sorted { (a, b) -> Bool in\n        return Int(a)! <\
    \ Int(b)!\n    }\n    return sortedNumbers.joined(separator: \" \")", "    let\
    \ number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4,\
    \ \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ lhs < rhs\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let numsInt = nums.map { numeralToInt(numeral: $0) }\n    let sortedNums\
    \ = numsInt.sorted()\n    let sortedNumsStr = sortedNums.map { intToNumeral(int:\
    \ $0) }\n    return sortedNumsStr.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted {\n        switch $0 {\n        case\
    \ \"zero\":\n            return true\n        case \"one\":\n            if $1\
    \ == \"zero\" {\n                return false\n            }\n            return\
    \ true\n        case \"two\":\n            if $1 == \"zero\" || $1 == \"one\"\
    \ {\n                return false\n            }\n            return true\n  \
    \      case \"three\":\n            if $1 == \"zero\" || $1 == \"one\" || $1 ==\
    \ \"two\" {\n                return false\n            }\n            return true\n\
    \        case \"four\":\n            if $1 == \"zero\" || $1 == \"one\" || $1\
    \ == \"two\" || $1 == \"three\" {\n                return false\n            }\n\
    \            return true\n        case \"five\":\n            if $1 == \"zero\"\
    \ || $1 == \"one\" || $1 == \"two\" || $1 == \"three\" || $1 == \"four\" {\n \
    \               return false\n            }\n            return true\n       \
    \ case \"six\":\n            if $1 == \"zero\" || $1 == \"one\" || $1 == \"two\"\
    \ || $1 == \"three\" || $1 == \"four\" || $1 == \"five\" {\n                return\
    \ false\n            }\n            return true\n        case \"seven\":\n   \
    \         if $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" || $1 == \"three\"\
    \ || $1 == \"four\" || $1 == \"five\" || $1 == \"six\" {\n                return\
    \ false\n            }\n            return true\n        case \"eight\":\n   \
    \         if $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" || $1 == \"three\"\
    \ || $1 == \"four\" || $1 == \"five\" || $1 == \"six\" || $1 == \"seven\" {\n\
    \                return false\n            }\n            return true\n      \
    \  case \"nine\":\n            if $1 == \"zero\" || $1 == \"one\" || $1 == \"\
    two\" || $1 == \"three\" || $1 == \"four\" || $1 == \"five\" || $1", "    let\
    \ numberals = numbers.split(separator: \" \")\n    let sorted = numberals.sorted\
    \ { (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: String(a)) < numeral_to_int(numeral:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return a < b\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        switch $0 {\n        case \"zero\":\n            return true\n  \
    \      case \"one\":\n            return $1 != \"zero\"\n        case \"two\"\
    :\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"three\"\
    :\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n     \
    \   case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 !=\
    \ \"two\" && $1 != \"three\"\n        case \"five\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \n        case \"six\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\n     \
    \   case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"\
    six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1 != \"\
    one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \ && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1 != \"eight\"\
    \n        default:\n            return false\n        }\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let number_array = numbers.split(separator: \" \")\n    let sorted_array\
    \ = number_array.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_array.joined(separator: \"\
    \ \")", "    let numberals = numbers.split(separator: \" \")\n    let sorted =\
    \ numberals.sorted { (lhs, rhs) -> Bool in\n        return numberal_to_int(numberal:\
    \ String(lhs)) < numberal_to_int(numberal: String(rhs))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = numbers.split(separator: \" \")\n    let sortedNumberals = numberals.sorted\
    \ { (lhs, rhs) -> Bool in\n        let lhsNumber = numberal(numberal: String(lhs))\n\
    \        let rhsNumber = numberal(numberal: String(rhs))\n        return lhsNumber\
    \ < rhsNumber\n    }\n    return sortedNumberals.joined(separator: \" \")", " \
    \   let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = numbers.components(separatedBy: \" \")\n    let\
    \ sorted = numberals.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let numsInt\
    \ = nums.map { number_to_int(number: $0) }\n    let sorted = numsInt.sorted()\n\
    \    let sortedNums = sorted.map { int_to_number(int: $0) }\n    return sortedNums.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_to_int(number: a)\
    \ < number_to_int(number: b)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return Int(lhs)! < Int(rhs)!\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let a = Int(String($0))!\n\
    \        let b = Int(String($1))!\n        return a < b\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (num1, num2) -> Bool in\n        return num1 < num2\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let numsSorted = nums.sorted {\n        switch $0 {\n        case\
    \ \"zero\":\n            return true\n        case \"one\":\n            return\
    \ $1 != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\"\n        case \"three\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1\
    \ != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return numsSorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").map { String($0) }.sorted { numberals.firstIndex(of: $0)! < numberals.firstIndex(of:\
    \ $1)! }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted { (a, b) -> Bool in\n        return\
    \ Int(a)! < Int(b)!\n    }\n    return nums_sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ { Int($0)! < Int($1)! })\n    return sorted.joined(separator: \" \")", "   \
    \ let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (s1,\
    \ s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { (a, b) -> Bool in\n        return numberals.firstIndex(of: String(a))!\
    \ < numberals.firstIndex(of: String(b))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) -> Bool\
    \ in\n        return numeral_to_int(numeral: String(a)) < numeral_to_int(numeral:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map\
    \ { numberToInt(number: $0) }\n    let sortedNums = numsInt.sorted()\n    let\
    \ sortedNumsStr = sortedNums.map { intToNumber(int: $0) }\n    return sortedNumsStr.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\"\
    : 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let\
    \ number_array = numbers.split(separator: \" \")\n    let sorted_numbers = number_array.sorted\
    \ {\n        number_map[String($0)]! < number_map[String($1)]!\n    }\n    return\
    \ sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let numsInt = nums.map { Int(numeral_to_int(numeral: String($0))!)\
    \ }\n    let sortedNums = numsInt.sorted()\n    let sortedNumsStr = sortedNums.map\
    \ { int_to_numeral(number: $0) }\n    return sortedNumsStr.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        return Int($0)! < Int($1)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sorted\
    \ = numbers.sorted(by: {\n        let a = Int(String($0))!\n        let b = Int(String($1))!\n\
    \        return a < b\n    })\n    return sorted.joined(separator: \" \")", " \
    \   let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers = numbers.split(separator: \" \")\n    let sorted_numbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let numbers = numbers.split(separator: \" \")\n  \
    \  let sortedNumbers = numbers.sorted { (lhs, rhs) -> Bool in\n        let lhsIndex\
    \ = numberals.firstIndex(of: String(lhs))!\n        let rhsIndex = numberals.firstIndex(of:\
    \ String(rhs))!\n        return lhsIndex < rhsIndex\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let number_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let number_list = numbers.split(separator: \"\
    \ \").map { String($0) }\n    let sorted_numbers = number_list.sorted { number_map[$0]!\
    \ < number_map[$1]! }\n    return sorted_numbers.joined(separator: \" \")", " \
    \   let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let num1 = Int(String($0))!\n        let num2 = Int(String($1))!\n\
    \        return num1 < num2\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numbers_to_int(number: a) < numbers_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let numsInt = nums.map { Int(number_to_int(number:\
    \ String($0))!) }\n    let sorted = numsInt.sorted()\n    let sortedStr = sorted.map\
    \ { int_to_number(int: String($0)) }\n    return sortedStr.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let numberals = [\"zero\",\
    \ \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted { (a, b)\
    \ -> Bool in\n        return numberals.firstIndex(of: String(a))! < numberals.firstIndex(of:\
    \ String(b))!\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers\
    \ = numbers.split(separator: \" \").map { String($0) }.map { number_map[$0]! }.sorted()\n\
    \    return sorted_numbers.map { String($0) }.joined(separator: \" \")", "   \
    \ let nums = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map\
    \ { (num) -> Int in\n        switch num {\n        case \"zero\":\n          \
    \  return 0\n        case \"one\":\n            return 1\n        case \"two\"\
    :\n            return 2\n        case \"three\":\n            return 3\n     \
    \   case \"four\":\n            return 4\n        case \"five\":\n           \
    \ return 5\n        case \"six\":\n            return 6\n        case \"seven\"\
    :\n            return 7\n        case \"eight\":\n            return 8\n     \
    \   case \"nine\":\n            return 9\n        default:\n            return\
    \ 0\n        }\n    }\n    let sortedNums = numsInt.sorted()\n    let sortedNumsStr\
    \ = sortedNums.map { (num) -> String in\n        switch num {\n        case 0:\n\
    \            return \"zero\"\n        case 1:\n            return \"one\"\n  \
    \      case 2:\n            return \"two\"\n        case 3:\n            return\
    \ \"three\"\n        case 4:\n            return \"four\"\n        case 5:\n \
    \           return \"five\"\n        case 6:\n            return \"six\"\n   \
    \     case 7:\n            return \"seven\"\n        case 8:\n            return\
    \ \"eight\"\n        case 9:\n            return \"nine\"\n        default:\n\
    \            return \"zero\"\n        }\n    }\n    return sortedNumsStr.joined(separator:\
    \ \" \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let\
    \ sortedNumbers = numbers.sorted { (a, b) -> Bool in\n        return numberToInt(number:\
    \ a) < numberToInt(number: b)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let words = numbers.split(separator: \" \")\n    let sorted =\
    \ words.sorted { (a, b) -> Bool in\n        return number_to_int(number: String(a))\
    \ < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let nums = numbers.split(separator: \" \").map\
    \ { String($0) }\n    let sorted_nums = nums.sorted { numeral_map[$0]! < numeral_map[$1]!\
    \ }\n    return sorted_nums.joined(separator: \" \")", "    let numbersArray =\
    \ numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbersArray.sorted\
    \ { (first, second) -> Bool in\n        return number_to_int(number: first) <\
    \ number_to_int(number: second)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map\
    \ { number_to_int(number: $0) }\n    let sorted = numsInt.sorted()\n    let sortedNums\
    \ = sorted.map { int_to_number(number: $0) }\n    return sortedNums.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.split(separator: \"\
    \ \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_array\
    \ = numbers.split(separator: \" \")\n    let sorted_numbers = number_array.sorted\
    \ { number_map[String($0)]! < number_map[String($1)]! }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (first, second) -> Bool in\n        return numberToInt(number:\
    \ first) < numberToInt(number: second)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (a, b) -> Bool in\n        return numberToInt(number: a) < numberToInt(number:\
    \ b)\n    }\n    return sortedNumbers.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return a < b\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n   \
    \ }\n    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let numsInt = nums.map { Int(number_to_int(number: String($0))!)\
    \ }\n    let sorted = numsInt.sorted()\n    let sortedStr = sorted.map { int_to_number(number:\
    \ String($0)) }\n    return sortedStr.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted {\n\
    \        switch ($0, $1) {\n        case (\"zero\", \"zero\"): return false\n\
    \        case (\"zero\", _): return true\n        case (_, \"zero\"): return false\n\
    \        case (\"one\", \"one\"): return false\n        case (\"one\", _): return\
    \ true\n        case (_, \"one\"): return false\n        case (\"two\", \"two\"\
    ): return false\n        case (\"two\", _): return true\n        case (_, \"two\"\
    ): return false\n        case (\"three\", \"three\"): return false\n        case\
    \ (\"three\", _): return true\n        case (_, \"three\"): return false\n   \
    \     case (\"four\", \"four\"): return false\n        case (\"four\", _): return\
    \ true\n        case (_, \"four\"): return false\n        case (\"five\", \"five\"\
    ): return false\n        case (\"five\", _): return true\n        case (_, \"\
    five\"): return false\n        case (\"six\", \"six\"): return false\n       \
    \ case (\"six\", _): return true\n        case (_, \"six\"): return false\n  \
    \      case (\"seven\", \"seven\"): return false\n        case (\"seven\", _):\
    \ return true\n        case (_, \"seven\"): return false\n        case (\"eight\"\
    , \"eight\"): return false\n        case (\"eight\", _): return true\n       \
    \ case (_, \"eight\"): return false\n        case (\"nine\", \"nine\"): return\
    \ false\n        case (\"nine\", _): return true\n        case (_, \"nine\"):\
    \ return false\n        default: return false\n        }\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(String($0)) ?? 0\n        let b = Int(String($1)) ??\
    \ 0\n        return a < b\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return number_to_int(number: s1)\
    \ < number_to_int(number: s2)\n    }\n    return sorted.joined(separator: \" \"\
    )", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (num1, num2) -> Bool in\n        return num1 < num2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let a = Int(numbers_to_digits[String($0)]!)\n\
    \        let b = Int(numbers_to_digits[String($1)]!)\n        return a < b\n \
    \   })\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (a, b) -> Bool in\n       \
    \ return Int(a)! < Int(b)!\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = numbers.sorted {\
    \ (first, second) -> Bool in\n        return first < second\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (a, b) -> Bool in\n       \
    \ return Int(a)! < Int(b)!\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return number_to_int(number: s1)\
    \ < number_to_int(number: s2)\n    }\n    return sorted.joined(separator: \" \"\
    )", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.split(separator: \" \")\n    let sorted = nums.sorted {\n        let\
    \ a = Int(String($0)) ?? 0\n        let b = Int(String($1)) ?? 0\n        return\
    \ a < b\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let numsInt = nums.map\
    \ { Int(wordToNumber($0)) }\n    let sorted = numsInt.sorted()\n    let sortedString\
    \ = sorted.map { numberToWord(String($0)) }\n    return sortedString.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        let a = Int($0)!\n        let b = Int($1)!\n        return a < b\n\
    \    })\n    return sorted.joined(separator: \" \")", "    let numberals = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted {\
    \ numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")", "    let numberals = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted { (lhs, rhs)\
    \ -> Bool in\n        return numberals.firstIndex(of: String(lhs))! < numberals.firstIndex(of:\
    \ String(rhs))!\n    }\n    return sorted.joined(separator: \" \")", "    let\
    \ numeralDict: [String: Int] = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let nums = numbers.split(separator: \" \")\n    var numsInt: [Int] =\
    \ []\n    for num in nums {\n        numsInt.append(numeralDict[String(num)]!)\n\
    \    }\n    let sorted = numsInt.sorted()\n    var sortedStr: [String] = []\n\
    \    for num in sorted {\n        sortedStr.append(String(num))\n    }\n    return\
    \ sortedStr.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.split(separator: \" \")\n    let sorted = nums.sorted { (s1, s2) ->\
    \ Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        let num1 = Int(word_to_numeral(word: String($0)))\n        let num2\
    \ = Int(word_to_numeral(word: String($1)))\n        return num1! < num2!\n   \
    \ })\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: String(a)) < numeral_to_int(numeral:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sorted = numbers.sorted { (lhs, rhs)\
    \ -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(number_to_numeral(number: String($0)) ?? \"0\")\n   \
    \     let b = Int(number_to_numeral(number: String($1)) ?? \"0\")\n        return\
    \ a! < b!\n    }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a, b)\
    \ -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        let num1\
    \ = number_to_int(number: s1)\n        let num2 = number_to_int(number: s2)\n\
    \        return num1 < num2\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let nums = numbers.split(separator: \" \")\n    let sorted_nums = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_map[String(a)]! < numeral_map[String(b)]!\n\
    \    }\n    return sorted_nums.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        let a = Int(String($0))!\n        let b = Int(String($1))!\n    \
    \    return a < b\n    })\n    return sorted.joined(separator: \" \")", "    let\
    \ numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"seven\", \"eight\", \"nine\"]\n    let sortedNumbers = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sortedNumbers.joined(separator: \" \")", "    let\
    \ number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4,\
    \ \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_array = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_array.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = numbers.components(separatedBy: \" \")\n    let\
    \ sorted = numberals.sorted { (lhs, rhs) -> Bool in\n        return word_to_number(word:\
    \ lhs) < word_to_number(word: rhs)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return number_to_int(number: String(lhs)) <\
    \ number_to_int(number: String(rhs))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let numbers = numbers.split(separator: \" \")\n  \
    \  let sortedNumbers = numbers.sorted { numberals.firstIndex(of: String($0))!\
    \ < numberals.firstIndex(of: String($1))! }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let numeralToNumber: [String: Int] =\
    \ [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"\
    three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n\
    \        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ]\n  \
    \  let numbers = numbers.split(separator: \" \").map { String($0) }\n    let sortedNumbers\
    \ = numbers.sorted { numeralToNumber[$0]! < numeralToNumber[$1]! }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let numeralDict = [\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeralArray = numbers.components(separatedBy:\
    \ \" \")\n    let sortedArray = numeralArray.sorted { numeralDict[$0]! < numeralDict[$1]!\
    \ }\n    return sortedArray.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (first, second) -> Bool in\n        return number_map[first]! < number_map[second]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sortedNums\
    \ = nums.sorted { (a, b) -> Bool in\n        return a.count < b.count\n    }\n\
    \    return sortedNums.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return convert(a) < convert(b)\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.split(separator: \"\
    \ \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ String(a)) < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = numbers.split(separator: \" \")\n    let sorted\
    \ = numberals.sorted { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let numsInt = nums.map { Int(word_to_numeral($0))\
    \ }\n    let sorted = numsInt.sorted()\n    let sortedStr = sorted.map { numeral_to_word($0)\
    \ }\n    return sortedStr.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch ($0, $1) {\n        case\
    \ (\"zero\", \"zero\"): return false\n        case (\"zero\", _): return true\n\
    \        case (_, \"zero\"): return false\n        case (\"one\", \"one\"): return\
    \ false\n        case (\"one\", _): return true\n        case (_, \"one\"): return\
    \ false\n        case (\"two\", \"two\"): return false\n        case (\"two\"\
    , _): return true\n        case (_, \"two\"): return false\n        case (\"three\"\
    , \"three\"): return false\n        case (\"three\", _): return true\n       \
    \ case (_, \"three\"): return false\n        case (\"four\", \"four\"): return\
    \ false\n        case (\"four\", _): return true\n        case (_, \"four\"):\
    \ return false\n        case (\"five\", \"five\"): return false\n        case\
    \ (\"five\", _): return true\n        case (_, \"five\"): return false\n     \
    \   case (\"six\", \"six\"): return false\n        case (\"six\", _): return true\n\
    \        case (_, \"six\"): return false\n        case (\"seven\", \"seven\"):\
    \ return false\n        case (\"seven\", _): return true\n        case (_, \"\
    seven\"): return false\n        case (\"eight\", \"eight\"): return false\n  \
    \      case (\"eight\", _): return true\n        case (_, \"eight\"): return false\n\
    \        case (\"nine\", \"nine\"): return false\n        case (\"nine\", _):\
    \ return true\n        case (_, \"nine\"): return false\n        default: return\
    \ false\n        }\n    }\n    return sorted.joined(separator: \" \")", "    let\
    \ numberals = numbers.split(separator: \" \")\n    let sorted = numberals.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.split(separator: \"\
    \ \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return Int(lhs)!\
    \ < Int(rhs)!\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sorted = numbers.sorted { (lhs, rhs)\
    \ -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted(by: { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n  \
    \  })\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    var nums_int = [Int]()\n\
    \    for num in nums {\n        switch num {\n        case \"zero\":\n       \
    \     nums_int.append(0)\n        case \"one\":\n            nums_int.append(1)\n\
    \        case \"two\":\n            nums_int.append(2)\n        case \"three\"\
    :\n            nums_int.append(3)\n        case \"four\":\n            nums_int.append(4)\n\
    \        case \"five\":\n            nums_int.append(5)\n        case \"six\"\
    :\n            nums_int.append(6)\n        case \"seven\":\n            nums_int.append(7)\n\
    \        case \"eight\":\n            nums_int.append(8)\n        case \"nine\"\
    :\n            nums_int.append(9)\n        default:\n            print(\"Invalid\
    \ input\")\n        }\n    }\n    nums_int.sort()\n    var nums_str = [String]()\n\
    \    for num in nums_int {\n        switch num {\n        case 0:\n          \
    \  nums_str.append(\"zero\")\n        case 1:\n            nums_str.append(\"\
    one\")\n        case 2:\n            nums_str.append(\"two\")\n        case 3:\n\
    \            nums_str.append(\"three\")\n        case 4:\n            nums_str.append(\"\
    four\")\n        case 5:\n            nums_str.append(\"five\")\n        case\
    \ 6:\n            nums_str.append(\"six\")\n        case 7:\n            nums_str.append(\"\
    seven\")\n        case 8:\n            nums_str.append(\"eight\")\n        case\
    \ 9:\n            nums_str.append(\"nine\")\n        default:\n            print(\"\
    Invalid input\")\n        }\n    }\n    return nums_str.joined(separator: \" \"\
    )", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        switch $0 {\n        case \"zero\":\n            return true\n  \
    \      case \"one\":\n            return $1 != \"zero\"\n        case \"two\"\
    :\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"three\"\
    :\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n     \
    \   case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 !=\
    \ \"two\" && $1 != \"three\"\n        case \"five\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \n        case \"six\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\n     \
    \   case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"\
    six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1 != \"\
    one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \ && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1 != \"eight\"\
    \n        default:\n            return false\n        }\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\n\
    \        switch ($0, $1) {\n        case (\"zero\", \"zero\"): return false\n\
    \        case (\"zero\", _): return true\n        case (_, \"zero\"): return false\n\
    \        case (\"one\", \"one\"): return false\n        case (\"one\", _): return\
    \ true\n        case (_, \"one\"): return false\n        case (\"two\", \"two\"\
    ): return false\n        case (\"two\", _): return true\n        case (_, \"two\"\
    ): return false\n        case (\"three\", \"three\"): return false\n        case\
    \ (\"three\", _): return true\n        case (_, \"three\"): return false\n   \
    \     case (\"four\", \"four\"): return false\n        case (\"four\", _): return\
    \ true\n        case (_, \"four\"): return false\n        case (\"five\", \"five\"\
    ): return false\n        case (\"five\", _): return true\n        case (_, \"\
    five\"): return false\n        case (\"six\", \"six\"): return false\n       \
    \ case (\"six\", _): return true\n        case (_, \"six\"): return false\n  \
    \      case (\"seven\", \"seven\"): return false\n        case (\"seven\", _):\
    \ return true\n        case (_, \"seven\"): return false\n        case (\"eight\"\
    , \"eight\"): return false\n        case (\"eight\", _): return true\n       \
    \ case (_, \"eight\"): return false\n        case (\"nine\", \"nine\"): return\
    \ false\n        case (\"nine\", _): return true\n        case (_, \"nine\"):\
    \ return false\n        default: return false\n        }\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sortedNums\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: String(a))\
    \ < number_to_int(number: String(b))\n    }\n    return sortedNums.joined(separator:\
    \ \" \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let\
    \ sortedNumbers = numbers.sorted { (num1, num2) -> Bool in\n        return number_to_int(number:\
    \ num1) < number_to_int(number: num2)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return convert(a) < convert(b)\n    }\n    return\
    \ sorted.joined(separator: \" \")"]
stop_tokens:
- "\n}"

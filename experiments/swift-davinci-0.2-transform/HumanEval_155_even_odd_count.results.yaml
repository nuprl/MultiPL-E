language: swift
name: HumanEval_155_even_odd_count
results:
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let last_digit = num % 10\n        if last_digit % 2 == 0 {\n       \
    \     even_count += 1\n        } else {\n            odd_count += 1\n        }\n\
    \        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9jekwx64/tmp9jekwx64.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b932bf25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b932bc1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b932bc1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b932bc1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9jekwx64                        0x000055bad99238ed <unavailable> + 6381

    5    libc.so.6                          0x00002b932c111460 __libc_start_main +
    245

    6    tmp9jekwx64                        0x000055bad9922f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var number\
    \ = num\n    while number != 0 {\n        let digit = number % 10\n        if\
    \ digit % 2 == 0 {\n            evenCount += 1\n        } else {\n           \
    \ oddCount += 1\n        }\n        number /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9dh2jlmb/tmp9dh2jlmb.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac4c1f57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac4c1c4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac4c1c4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac4c1c4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9dh2jlmb                        0x000055c6305c88ed <unavailable> + 6381

    5    libc.so.6                          0x00002ac4c2143460 __libc_start_main +
    245

    6    tmp9dh2jlmb                        0x000055c6305c7f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        if num % 2 == 0 {\n            even_count += 1\n        } else {\n  \
    \          odd_count += 1\n        }\n        num /= 10\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpg8f73iyt/tmpg8f73iyt.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae82e8eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae82e5e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae82e5e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae82e5e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8f73iyt                        0x00005582036258ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae82ead6460 __libc_start_main +
    245

    6    tmpg8f73iyt                        0x0000558203624f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        if num % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp3lsoqn66/tmp3lsoqn66.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d80b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d8087eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d8087e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d8087d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3lsoqn66                        0x000055e0abcdd8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b2d80d73460 __libc_start_main +
    245

    6    tmp3lsoqn66                        0x000055e0abcdcf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpz6lxxp7u.swift:11:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var n = num\n \
    \   while n != 0 {\n        if n % 2 == 0 {\n            even += 1\n        }\
    \ else {\n            odd += 1\n        }\n        n /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8oi9fxl_/tmp8oi9fxl_.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac770a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac770730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac770730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac77072f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8oi9fxl_                        0x000055bd6892c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ac770c25460 __libc_start_main +
    245

    6    tmp8oi9fxl_                        0x000055bd6892bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        if num % 2 == 0 {\n            even_count += 1\n        } else {\n  \
    \          odd_count += 1\n        }\n        num /= 10\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpg8f73iyt/tmpg8f73iyt.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae82e8eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae82e5e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae82e5e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae82e5e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8f73iyt                        0x00005582036258ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae82ead6460 __libc_start_main +
    245

    6    tmpg8f73iyt                        0x0000558203624f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evens = 0\n    var odds = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            evens += 1\n        } else {\n            odds += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evens, odds)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqic2o8up/tmpqic2o8up.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba733d5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba733a56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba733a56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba733a557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqic2o8up                        0x000055847419a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ba733f4b460 __libc_start_main +
    245

    6    tmpqic2o8up                        0x0000558474199f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        if num % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp3lsoqn66/tmp3lsoqn66.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d80b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d8087eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d8087e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d8087d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3lsoqn66                        0x000055e0abcdd8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b2d80d73460 __libc_start_main +
    245

    6    tmp3lsoqn66                        0x000055e0abcdcf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit\
    \ in String(num).characters {\n        if Int(String(digit))! % 2 == 0 {\n   \
    \         evenCount += 1\n        } else {\n            oddCount += 1\n      \
    \  }\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpy5tc8x_w.swift:11:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        if\
    \ num % 2 == 0 {\n            even += 1\n        } else {\n            odd +=\
    \ 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9yv9e6od/tmp9yv9e6od.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af56477cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af564473b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af564473988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5644727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9yv9e6od                        0x0000556f90b8d8ed <unavailable> + 6381

    5    libc.so.6                          0x00002af564968460 __libc_start_main +
    245

    6    tmp9yv9e6od                        0x0000556f90b8cf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    for digit\
    \ in String(num).characters {\n        if Int(String(digit))! % 2 == 0 {\n   \
    \         evenCount += 1\n        } else {\n            oddCount += 1\n      \
    \  }\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpy5tc8x_w.swift:11:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var n = num\n \
    \   while n != 0 {\n        let digit = n % 10\n        if digit % 2 == 0 {\n\
    \            even += 1\n        } else {\n            odd += 1\n        }\n  \
    \      n /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppdrg8mcg/tmppdrg8mcg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b198c4cdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b198c1c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b198c1c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b198c1c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdrg8mcg                        0x000055cfbdf538ed <unavailable> + 6381

    5    libc.so.6                          0x00002b198c6b9460 __libc_start_main +
    245

    6    tmppdrg8mcg                        0x000055cfbdf52f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    let num_str = String(num)\n    var even_count = 0\n\
    \    var odd_count = 0\n    for char in num_str {\n        if Int(String(char))!\
    \ % 2 == 0 {\n            even_count += 1\n        } else {\n            odd_count\
    \ += 1\n        }\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9zdgwyw2/tmp9zdgwyw2.swift:13: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b289c642c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b289c339561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b289c339286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b289c33913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b289c338bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9zdgwyw2                        0x0000555e7cfaad84 <unavailable> + 7556

    6    tmp9zdgwyw2                        0x0000555e7cfaa584 <unavailable> + 5508

    7    libc.so.6                          0x00002b289c82e460 __libc_start_main +
    245

    8    tmp9zdgwyw2                        0x0000555e7cfaa1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    let num_str = String(num)\n    var even_count = 0\n\
    \    var odd_count = 0\n    for char in num_str {\n        if char == \"-\" {\n\
    \            continue\n        }\n        let digit = Int(String(char))!\n   \
    \     if digit % 2 == 0 {\n            even_count += 1\n        } else {\n   \
    \         odd_count += 1\n        }\n    }\n    return (even_count, odd_count)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        if\
    \ num % 2 == 0 {\n            even += 1\n        } else {\n            odd +=\
    \ 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9yv9e6od/tmp9yv9e6od.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af56477cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af564473b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af564473988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5644727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9yv9e6od                        0x0000556f90b8d8ed <unavailable> + 6381

    5    libc.so.6                          0x00002af564968460 __libc_start_main +
    245

    6    tmp9yv9e6od                        0x0000556f90b8cf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        if num % 2 == 0 {\n            even_count += 1\n        } else {\n  \
    \          odd_count += 1\n        }\n        num /= 10\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpg8f73iyt/tmpg8f73iyt.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae82e8eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae82e5e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae82e5e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae82e5e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8f73iyt                        0x00005582036258ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae82ead6460 __libc_start_main +
    245

    6    tmpg8f73iyt                        0x0000558203624f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            even_count += 1\n        } else {\n            odd_count\
    \ += 1\n        }\n        num /= 10\n    }\n    return (even_count, odd_count)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppnd34t_v/tmppnd34t_v.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70c520dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70c4f04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70c4f04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70c4f037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnd34t_v                        0x00005576874ab8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b70c53f9460 __libc_start_main +
    245

    6    tmppnd34t_v                        0x00005576874aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        if num % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp3lsoqn66/tmp3lsoqn66.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d80b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d8087eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d8087e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d8087d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3lsoqn66                        0x000055e0abcdd8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b2d80d73460 __libc_start_main +
    245

    6    tmp3lsoqn66                        0x000055e0abcdcf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            even_count += 1\n        } else {\n            odd_count\
    \ += 1\n        }\n        num /= 10\n    }\n    return (even_count, odd_count)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppnd34t_v/tmppnd34t_v.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70c520dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70c4f04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70c4f04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70c4f037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnd34t_v                        0x00005576874ab8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b70c53f9460 __libc_start_main +
    245

    6    tmppnd34t_v                        0x00005576874aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        if num % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp3lsoqn66/tmp3lsoqn66.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d80b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d8087eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d8087e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d8087d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3lsoqn66                        0x000055e0abcdd8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b2d80d73460 __libc_start_main +
    245

    6    tmp3lsoqn66                        0x000055e0abcdcf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = num * -1\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num =\
    \ num / 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpb5s1uf5o/tmpb5s1uf5o.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae171bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1718d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1718d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1718d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb5s1uf5o                        0x000055b804af48ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae171dc6460 __libc_start_main +
    245

    6    tmpb5s1uf5o                        0x000055b804af3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        if num % 2 == 0 {\n            even_count += 1\n        } else {\n  \
    \          odd_count += 1\n        }\n        num /= 10\n    }\n    return (even_count,\
    \ odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpg8f73iyt/tmpg8f73iyt.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae82e8eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae82e5e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae82e5e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae82e5e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8f73iyt                        0x00005582036258ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae82ead6460 __libc_start_main +
    245

    6    tmpg8f73iyt                        0x0000558203624f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var n = num\n \
    \   while n != 0 {\n        if n % 2 == 0 {\n            even += 1\n        }\
    \ else {\n            odd += 1\n        }\n        n /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp8oi9fxl_/tmp8oi9fxl_.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac770a39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac770730b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac770730988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac77072f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8oi9fxl_                        0x000055bd6892c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ac770c25460 __libc_start_main +
    245

    6    tmp8oi9fxl_                        0x000055bd6892bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = num * -1\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num =\
    \ num / 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpb5s1uf5o/tmpb5s1uf5o.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae171bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1718d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1718d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1718d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb5s1uf5o                        0x000055b804af48ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae171dc6460 __libc_start_main +
    245

    6    tmpb5s1uf5o                        0x000055b804af3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpz6lxxp7u.swift:11:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var n\
    \ = num\n    while n != 0 {\n        if n % 2 == 0 {\n            evenCount +=\
    \ 1\n        } else {\n            oddCount += 1\n        }\n        n /= 10\n\
    \    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpqsjhvx03/tmpqsjhvx03.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d1415ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d13e51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d13e51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d13e507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqsjhvx03                        0x000055b4743078ed <unavailable> + 6381

    5    libc.so.6                          0x00002b8d14346460 __libc_start_main +
    245

    6    tmpqsjhvx03                        0x000055b474306f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var number\
    \ = num\n    while number != 0 {\n        if number % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        number\
    \ /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpznm5sjrd/tmpznm5sjrd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b083fbb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b083f8a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b083f8a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b083f8a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpznm5sjrd                        0x000055d6f4d7b8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b083fd9e460 __libc_start_main +
    245

    6    tmpznm5sjrd                        0x000055d6f4d7af69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var n = num\n \
    \   while n != 0 {\n        let digit = n % 10\n        if digit % 2 == 0 {\n\
    \            even += 1\n        } else {\n            odd += 1\n        }\n  \
    \      n /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppdrg8mcg/tmppdrg8mcg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b198c4cdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b198c1c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b198c1c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b198c1c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdrg8mcg                        0x000055cfbdf538ed <unavailable> + 6381

    5    libc.so.6                          0x00002b198c6b9460 __libc_start_main +
    245

    6    tmppdrg8mcg                        0x000055cfbdf52f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            even_count += 1\n        } else {\n            odd_count\
    \ += 1\n        }\n        num /= 10\n    }\n    return (even_count, odd_count)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppnd34t_v/tmppnd34t_v.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70c520dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70c4f04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70c4f04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70c4f037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnd34t_v                        0x00005576874ab8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b70c53f9460 __libc_start_main +
    245

    6    tmppnd34t_v                        0x00005576874aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            even_count += 1\n        } else {\n            odd_count\
    \ += 1\n        }\n        num /= 10\n    }\n    return (even_count, odd_count)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppnd34t_v/tmppnd34t_v.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70c520dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70c4f04b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70c4f04988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70c4f037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnd34t_v                        0x00005576874ab8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b70c53f9460 __libc_start_main +
    245

    6    tmppnd34t_v                        0x00005576874aaf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = num * -1\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num =\
    \ num / 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpb5s1uf5o/tmpb5s1uf5o.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae171bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1718d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1718d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1718d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb5s1uf5o                        0x000055b804af48ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae171dc6460 __libc_start_main +
    245

    6    tmpb5s1uf5o                        0x000055b804af3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        if num % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp3lsoqn66/tmp3lsoqn66.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d80b87c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d8087eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d8087e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d8087d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3lsoqn66                        0x000055e0abcdd8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b2d80d73460 __libc_start_main +
    245

    6    tmp3lsoqn66                        0x000055e0abcdcf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var n = num\n \
    \   while n != 0 {\n        let digit = n % 10\n        if digit % 2 == 0 {\n\
    \            even += 1\n        } else {\n            odd += 1\n        }\n  \
    \      n /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmppdrg8mcg/tmppdrg8mcg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b198c4cdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b198c1c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b198c1c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b198c1c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdrg8mcg                        0x000055cfbdf538ed <unavailable> + 6381

    5    libc.so.6                          0x00002b198c6b9460 __libc_start_main +
    245

    6    tmppdrg8mcg                        0x000055cfbdf52f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        if\
    \ num % 2 == 0 {\n            even += 1\n        } else {\n            odd +=\
    \ 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9yv9e6od/tmp9yv9e6od.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af56477cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af564473b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af564473988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5644727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9yv9e6od                        0x0000556f90b8d8ed <unavailable> + 6381

    5    libc.so.6                          0x00002af564968460 __libc_start_main +
    245

    6    tmp9yv9e6od                        0x0000556f90b8cf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    for char in String(num)\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even += 1\n       \
    \ } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnejnrawe/tmpnejnrawe.swift:12: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b05eee35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05eeb2c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b05eeb2c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b05eeb2c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b05eeb2bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpnejnrawe                        0x000055f882201d42 <unavailable> + 7490

    6    tmpnejnrawe                        0x000055f882201584 <unavailable> + 5508

    7    libc.so.6                          0x00002b05ef021460 __libc_start_main +
    245

    8    tmpnejnrawe                        0x000055f8822011d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013562
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      if num % 2 == 0 {\n            evenCount += 1\n        } else {\n     \
    \       oddCount += 1\n        }\n        num /= 10\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp7kfq_4n6/tmp7kfq_4n6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde7651c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde7348b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde7348988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde73477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kfq_4n6                        0x0000555801da98ed <unavailable> + 6381

    5    libc.so.6                          0x00002abde783d460 __libc_start_main +
    245

    6    tmp7kfq_4n6                        0x0000555801da8f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        let\
    \ digit = num % 10\n        if digit % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n        num /= 10\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5oljxme6/tmp5oljxme6.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3c87c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3c84beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3c84be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3c84bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5oljxme6                        0x000056487c7a18ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae3c89b3460 __libc_start_main +
    245

    6    tmp5oljxme6                        0x000056487c7a0f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even_count = 0\n    var odd_count = 0\n    var\
    \ num = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n\
    \        let digit = num % 10\n        if digit % 2 == 0 {\n            even_count\
    \ += 1\n        } else {\n            odd_count += 1\n        }\n        num /=\
    \ 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxvt4sahh/tmpxvt4sahh.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4ee778c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4ee46fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4ee46f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4ee46e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvt4sahh                        0x000055e9a27ad8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae4ee964460 __libc_start_main +
    245

    6    tmpxvt4sahh                        0x000055e9a27acf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n        if\
    \ num % 2 == 0 {\n            even += 1\n        } else {\n            odd +=\
    \ 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp9yv9e6od/tmp9yv9e6od.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af56477cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af564473b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af564473988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5644727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9yv9e6od                        0x0000556f90b8d8ed <unavailable> + 6381

    5    libc.so.6                          0x00002af564968460 __libc_start_main +
    245

    6    tmp9yv9e6od                        0x0000556f90b8cf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    while num != 0 {\n        let digit = num % 10\n        if digit\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp1w90hpee/tmp1w90hpee.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea84fcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea84cc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea84cc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea84cc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1w90hpee                        0x000055d6c15b58ed <unavailable> + 6381

    5    libc.so.6                          0x00002aea851b6460 __libc_start_main +
    245

    6    tmp1w90hpee                        0x000055d6c15b4f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var evenCount = 0\n    var oddCount = 0\n    var num\
    \ = num\n    if num < 0 {\n        num = -num\n    }\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        num /=\
    \ 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpe6zfgdbx/tmpe6zfgdbx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b44d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b44a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b44a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b44a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6zfgdbx                        0x00005620665908ed <unavailable> + 6381

    5    libc.so.6                          0x00002b9b44f51460 __libc_start_main +
    245

    6    tmpe6zfgdbx                        0x000056206658ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        if num % 2 == 0 {\n            even += 1\n    \
    \    } else {\n            odd += 1\n        }\n        num /= 10\n    }\n   \
    \ return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpnalrttde/tmpnalrttde.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21e4394c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21e408bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21e408b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21e408a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnalrttde                        0x00005559da5038ed <unavailable> + 6381

    5    libc.so.6                          0x00002b21e4580460 __libc_start_main +
    245

    6    tmpnalrttde                        0x00005559da502f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// >>> even_odd_count(num: -12)\n///\
    \ (1, 1)\n/// >>> even_odd_count(num: 123)\n/// (1, 2)\nfunc even_odd_count(num:\
    \ Int) -> (Int, Int) {\n    var even = 0\n    var odd = 0\n    var num = num\n\
    \    while num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0\
    \ {\n            even += 1\n        } else {\n            odd += 1\n        }\n\
    \        num /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmptf9piehq/tmptf9piehq.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b371a45cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b371a153b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b371a153988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b371a1527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptf9piehq                        0x0000555ccf0868ed <unavailable> + 6381

    5    libc.so.6                          0x00002b371a648460 __libc_start_main +
    245

    6    tmptf9piehq                        0x0000555ccf085f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013486

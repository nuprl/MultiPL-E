language: swift
name: HumanEval_26_remove_duplicates
results:
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbers_set.contains(number) {\n            numbers_set.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpwscv2p0c/tmpwscv2p0c.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b249e303c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b249dffab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b249dffa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b249dff97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwscv2p0c                        0x000055d3990ea981 <unavailable> + 6529

    5    libc.so.6                          0x00002b249e4ef460 __libc_start_main +
    245

    6    tmpwscv2p0c                        0x000055d3990ea339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for i in numbers {\n        if !result.contains(i)\
    \ {\n            result.append(i)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpwzcmfqpk/tmpwzcmfqpk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e0a07ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e09d71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e09d71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e09d707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwzcmfqpk                        0x000055f2c2c8c841 <unavailable> + 6209

    5    libc.so.6                          0x00002b1e0a266460 __libc_start_main +
    245

    6    tmpwzcmfqpk                        0x000055f2c2c8c1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var index = 0\n    while index < numbers.count\
    \ {\n        let number = numbers[index]\n        let occurrences = numbers.filter\
    \ { $0 == number }.count\n        if occurrences > 1 {\n            numbers.remove(at:\
    \ index)\n        } else {\n            index += 1\n        }\n    }\n    return\
    \ numbers\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmp3_ntw8b0/tmp3_ntw8b0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace3fa34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace3f72bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace3f72b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace3f72a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3_ntw8b0                        0x00005632457197e1 <unavailable> + 6113

    5    libc.so.6                          0x00002ace3fc20460 __libc_start_main +
    245

    6    tmp3_ntw8b0                        0x0000563245719199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: 0
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return numbers.filter { (number) -> Bool in\n        return numbers.filter({$0\
    \ == number}).count == 1\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824667
- exit_code: 0
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result = [Int]()\n    var index = 0\n\
    \    while index < numbers.count {\n        let number = numbers[index]\n    \
    \    if numbers.filter({ $0 == number }).count == 1 {\n            result.append(number)\n\
    \        }\n        index += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjbt8lev8/tmpjbt8lev8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d7cebbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d7cbb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d7cbb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d7cbb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjbt8lev8                        0x000055f359875981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7d7d0a7460 __libc_start_main +
    245

    6    tmpjbt8lev8                        0x000055f359875339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjbt8lev8/tmpjbt8lev8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d7cebbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d7cbb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d7cbb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d7cbb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjbt8lev8                        0x000055f359875981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7d7d0a7460 __libc_start_main +
    245

    6    tmpjbt8lev8                        0x000055f359875339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp97cekqdc/tmp97cekqdc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c3ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c0d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c0d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97cekqdc                        0x000055ee90d48941 <unavailable> + 6465

    5    libc.so.6                          0x00002b608c5c9460 __libc_start_main +
    245

    6    tmp97cekqdc                        0x000055ee90d482f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp97cekqdc/tmp97cekqdc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c3ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c0d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c0d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97cekqdc                        0x000055ee90d48941 <unavailable> + 6465

    5    libc.so.6                          0x00002b608c5c9460 __libc_start_main +
    245

    6    tmp97cekqdc                        0x000055ee90d482f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var uniqueNumbers: Set<Int> = []\n    for\
    \ number in numbers {\n        if !uniqueNumbers.contains(number) {\n        \
    \    uniqueNumbers.insert(number)\n            result.append(number)\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpgyhcr2m8/tmpgyhcr2m8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aca73bf1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aca738e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aca738e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aca738e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgyhcr2m8                        0x000055ed1b817941 <unavailable> + 6465

    5    libc.so.6                          0x00002aca73ddd460 __libc_start_main +
    245

    6    tmpgyhcr2m8                        0x000055ed1b8172f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpsqjpzm06/tmpsqjpzm06.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac0274f2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac0271e9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac0271e9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac0271e87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsqjpzm06                        0x0000555a4a3b94ad <unavailable> + 5293

    5    libc.so.6                          0x00002ac0276de460 __libc_start_main +
    245

    6    tmpsqjpzm06                        0x0000555a4a3b8fc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpsqjpzm06/tmpsqjpzm06.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac0274f2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac0271e9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac0271e9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac0271e87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsqjpzm06                        0x0000555a4a3b94ad <unavailable> + 5293

    5    libc.so.6                          0x00002ac0276de460 __libc_start_main +
    245

    6    tmpsqjpzm06                        0x0000555a4a3b8fc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var dict = [Int: Int]()\n    for number in\
    \ numbers {\n        if dict[number] == nil {\n            dict[number] = 1\n\
    \            result.append(number)\n        } else {\n            dict[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi5rwhceo/tmpi5rwhceo.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9593b66c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b959385db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b959385d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b959385c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi5rwhceo                        0x000055e95a91ca41 <unavailable> + 6721

    5    libc.so.6                          0x00002b9593d52460 __libc_start_main +
    245

    6    tmpi5rwhceo                        0x000055e95a91c3f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers: [Int] = []\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbwmhv3tc/tmpbwmhv3tc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b4dd9ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b4da91b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b4da91988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b4da907b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbwmhv3tc                        0x000055ea68e4e841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5b4df86460 __libc_start_main +
    245

    6    tmpbwmhv3tc                        0x000055ea68e4e1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpnhtn_5vo/tmpnhtn_5vo.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8cf0d3bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8cf0a32b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8cf0a32988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8cf0a317b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnhtn_5vo                        0x000056276272f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b8cf0f27460 __libc_start_main +
    245

    6    tmpnhtn_5vo                        0x000056276272f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpsqjpzm06/tmpsqjpzm06.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac0274f2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac0271e9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac0271e9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac0271e87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsqjpzm06                        0x0000555a4a3b94ad <unavailable> + 5293

    5    libc.so.6                          0x00002ac0276de460 __libc_start_main +
    245

    6    tmpsqjpzm06                        0x0000555a4a3b8fc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp97cekqdc/tmp97cekqdc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c3ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c0d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c0d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97cekqdc                        0x000055ee90d48941 <unavailable> + 6465

    5    libc.so.6                          0x00002b608c5c9460 __libc_start_main +
    245

    6    tmp97cekqdc                        0x000055ee90d482f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpfq7ayjuo/tmpfq7ayjuo.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aced16d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aced13c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aced13c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aced13c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfq7ayjuo                        0x000055603d93260d <unavailable> + 5645

    5    libc.so.6                          0x00002aced18bd460 __libc_start_main +
    245

    6    tmpfq7ayjuo                        0x000055603d932129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var set = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            set.insert(number)\n    \
    \        result.append(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpaxkq6ma8/tmpaxkq6ma8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f58cf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f589efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f589ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f589ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxkq6ma8                        0x00005639c71db981 <unavailable> + 6529

    5    libc.so.6                          0x00002b8f58ee4460 __libc_start_main +
    245

    6    tmpaxkq6ma8                        0x00005639c71db339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for number in\
    \ numbers {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxx93skv2/tmpxx93skv2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8138cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8135c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae8135c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8135c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxx93skv2                        0x00005591babeb841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae813aba460 __libc_start_main +
    245

    6    tmpxx93skv2                        0x00005591babeb1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var set = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            set.insert(number)\n    \
    \        result.append(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpaxkq6ma8/tmpaxkq6ma8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f58cf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f589efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f589ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f589ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxkq6ma8                        0x00005639c71db981 <unavailable> + 6529

    5    libc.so.6                          0x00002b8f58ee4460 __libc_start_main +
    245

    6    tmpaxkq6ma8                        0x00005639c71db339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpfq7ayjuo/tmpfq7ayjuo.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aced16d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aced13c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aced13c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aced13c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfq7ayjuo                        0x000055603d93260d <unavailable> + 5645

    5    libc.so.6                          0x00002aced18bd460 __libc_start_main +
    245

    6    tmpfq7ayjuo                        0x000055603d932129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int] = []\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.append(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpra7x95_j/tmpra7x95_j.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b186fdd7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b186faceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b186face988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b186facd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpra7x95_j                        0x0000564bafb55841 <unavailable> + 6209

    5    libc.so.6                          0x00002b186ffc3460 __libc_start_main +
    245

    6    tmpra7x95_j                        0x0000564bafb551f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result = [Int]()\n    while !numbers.isEmpty\
    \ {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmplr1tnht3/tmplr1tnht3.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d907acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d904a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d904a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d904a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplr1tnht3                        0x000055632f7e8861 <unavailable> + 6241

    5    libc.so.6                          0x00002b3d90998460 __libc_start_main +
    245

    6    tmplr1tnht3                        0x000055632f7e8219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen: [Int: Bool] = [:]\n    return numbers.filter { seen.updateValue(true,\
    \ forKey: $0) == nil }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmp2h2n4blj/tmp2h2n4blj.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7992882c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7992579b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7992579988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b79925787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2h2n4blj                        0x000055c030b66821 <unavailable> + 6177

    5    libc.so.6                          0x00002b7992a6e460 __libc_start_main +
    245

    6    tmp2h2n4blj                        0x000055c030b661d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            seen.insert(number)\n  \
    \          result.append(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_0fd3lle/tmp_0fd3lle.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39108f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39105eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39105ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39105e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_0fd3lle                        0x000055730bc98981 <unavailable> + 6529

    5    libc.so.6                          0x00002b3910adf460 __libc_start_main +
    245

    6    tmp_0fd3lle                        0x000055730bc98339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp97cekqdc/tmp97cekqdc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c3ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c0d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c0d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97cekqdc                        0x000055ee90d48941 <unavailable> + 6465

    5    libc.so.6                          0x00002b608c5c9460 __libc_start_main +
    245

    6    tmp97cekqdc                        0x000055ee90d482f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers_set = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbers_set.contains(number) {\n            numbers_set.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpwscv2p0c/tmpwscv2p0c.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b249e303c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b249dffab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b249dffa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b249dff97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwscv2p0c                        0x000055d3990ea981 <unavailable> + 6529

    5    libc.so.6                          0x00002b249e4ef460 __libc_start_main +
    245

    6    tmpwscv2p0c                        0x000055d3990ea339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjbt8lev8/tmpjbt8lev8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d7cebbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d7cbb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d7cbb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d7cbb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjbt8lev8                        0x000055f359875981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7d7d0a7460 __libc_start_main +
    245

    6    tmpjbt8lev8                        0x000055f359875339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp97cekqdc/tmp97cekqdc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c3ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c0d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c0d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp97cekqdc                        0x000055ee90d48941 <unavailable> + 6465

    5    libc.so.6                          0x00002b608c5c9460 __libc_start_main +
    245

    6    tmp97cekqdc                        0x000055ee90d482f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var numbersArray = [Int]()\n    for\
    \ number in numbers {\n        if !numbersSet.contains(number) {\n           \
    \ numbersSet.insert(number)\n            numbersArray.append(number)\n       \
    \ }\n    }\n    return numbersArray\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpdh3tkkir/tmpdh3tkkir.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab340712c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab340409b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab340409988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3404087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdh3tkkir                        0x0000559ec5c44981 <unavailable> + 6529

    5    libc.so.6                          0x00002ab3408fe460 __libc_start_main +
    245

    6    tmpdh3tkkir                        0x0000559ec5c44339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppmlkk2qt/tmppmlkk2qt.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c45d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c42cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c42cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmlkk2qt                        0x000055cfe3a00981 <unavailable> + 6529

    5    libc.so.6                          0x00002af7c47c4460 __libc_start_main +
    245

    6    tmppmlkk2qt                        0x000055cfe3a00339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers: [Int] = []\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbwmhv3tc/tmpbwmhv3tc.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b4dd9ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b4da91b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b4da91988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b4da907b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbwmhv3tc                        0x000055ea68e4e841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5b4df86460 __libc_start_main +
    245

    6    tmpbwmhv3tc                        0x000055ea68e4e1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbz119qhh/tmpbz119qhh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b644a831c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b644a528b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b644a528988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b644a5277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbz119qhh                        0x00005582636e4891 <unavailable> + 6289

    5    libc.so.6                          0x00002b644aa1d460 __libc_start_main +
    245

    6    tmpbz119qhh                        0x00005582636e4249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp78j26pof/tmp78j26pof.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16efb60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16ef857b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16ef857988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16ef8567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78j26pof                        0x000055c4ce704891 <unavailable> + 6289

    5    libc.so.6                          0x00002b16efd4c460 __libc_start_main +
    245

    6    tmp78j26pof                        0x000055c4ce704249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var set = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            set.insert(number)\n    \
    \        result.append(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpaxkq6ma8/tmpaxkq6ma8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f58cf8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f589efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f589ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f589ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxkq6ma8                        0x00005639c71db981 <unavailable> + 6529

    5    libc.so.6                          0x00002b8f58ee4460 __libc_start_main +
    245

    6    tmpaxkq6ma8                        0x00005639c71db339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result = [Int]()\n    while numbers.count\
    \ > 0 {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp3nx9bxxc/tmp3nx9bxxc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39d82b1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39d7fa8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39d7fa8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39d7fa77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3nx9bxxc                        0x00005602d4ab3821 <unavailable> + 6177

    5    libc.so.6                          0x00002b39d849d460 __libc_start_main +
    245

    6    tmp3nx9bxxc                        0x00005602d4ab31d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjbt8lev8/tmpjbt8lev8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d7cebbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d7cbb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d7cbb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d7cbb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjbt8lev8                        0x000055f359875981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7d7d0a7460 __libc_start_main +
    245

    6    tmpjbt8lev8                        0x000055f359875339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu4d_k_0z/tmpu4d_k_0z.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70896a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b708939db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b708939d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b708939c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu4d_k_0z                        0x000055617911e981 <unavailable> + 6529

    5    libc.so.6                          0x00002b7089892460 __libc_start_main +
    245

    6    tmpu4d_k_0z                        0x000055617911e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmppdioby73/tmppdioby73.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1bac3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1ba934b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1ba934988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1ba9337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdioby73                        0x00005575773af961 <unavailable> + 6497

    5    libc.so.6                          0x00002af1bae29460 __libc_start_main +
    245

    6    tmppdioby73                        0x00005575773af319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824667
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpv8n9yg0i/tmpv8n9yg0i.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0df49ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0df195b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0df195988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0df1947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n9yg0i                        0x000055672c77d841 <unavailable> + 6209

    5    libc.so.6                          0x00002ae0df68a460 __libc_start_main +
    245

    6    tmpv8n9yg0i                        0x000055672c77d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824667

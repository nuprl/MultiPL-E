name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given a list of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// >>> skjkasdkd(lst:\
  \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n///\
  \ 10\n/// >>> skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
  \ 5, 1])\n/// 25\n/// >>> skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
  \ 23, 2323, 32, 30, 1, 9, 3])\n/// 13\n/// >>> skjkasdkd(lst: [0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6])\n/// 11\n/// >>> skjkasdkd(lst: [0, 81, 12, 3,\
  \ 1, 21])\n/// 3\n/// >>> skjkasdkd(lst: [0, 8, 1, 2, 1, 7])\n/// 7\nfunc skjkasdkd(lst:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var lst = lst\n    var max = 0\n    for i in 0..<lst.count {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var\
    \ primes = [Int]()\n    for i in 2...max {\n        var isPrime = true\n     \
    \   for j in 2..<i {\n            if i % j == 0 {\n                isPrime = false\n\
    \            }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in 0..<primes.count {\n   \
    \     if primes[i] > maxPrime {\n            maxPrime = primes[i]\n        }\n\
    \    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n\
    \        maxPrime /= 10\n    }\n    return sum", "    var primes = [Int]()\n \
    \   for num in lst {\n        if isPrime(num) {\n            primes.append(num)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ for digit in String(largestPrime) {\n        sum += Int(String(digit))!\n  \
    \  }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n       \
    \ if isPrime(num: i) {\n            if i > largestPrime {\n                largestPrime\
    \ = i\n            }\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    let primes =\
    \ lst.filter { $0.isPrime() }\n    let maxPrime = primes.max() ?? 0\n    return\
    \ maxPrime.digits.reduce(0, +)", "    var primes = [Int]()\n    for num in lst\
    \ {\n        if isPrime(num) {\n            primes.append(num)\n        }\n  \
    \  }\n    let max = primes.max()!\n    var sum = 0\n    for digit in String(max)\
    \ {\n        sum += Int(String(digit))!\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) && i > largestPrime\
    \ {\n            largestPrime = i\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) {\n       \
    \     if i > largestPrime {\n                largestPrime = i\n            }\n\
    \        }\n    }\n    var sum = 0\n    for i in String(largestPrime) {\n    \
    \    sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n    var\
    \ largestPrime = 0\n    for i in 0..<lst.count {\n        if lst[i] > largestPrime\
    \ && isPrime(lst[i]) {\n            largestPrime = lst[i]\n        }\n    }\n\
    \    var sum = 0\n    while largestPrime > 0 {\n        sum += largestPrime %\
    \ 10\n        largestPrime /= 10\n    }\n    return sum", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ var num = largestPrime\n    while num > 0 {\n        sum += num % 10\n     \
    \   num /= 10\n    }\n    return sum", "    var primes = [Int]()\n    for i in\
    \ lst {\n        if isPrime(num: i) {\n            primes.append(i)\n        }\n\
    \    }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var largest\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largest {\n    \
    \        largest = num\n        }\n    }\n    return sumDigits(largest)", "  \
    \  let prime = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    var lst = lst\n    lst.sort()\n    var largestPrime = 0\n    for i\
    \ in lst {\n        if isPrime(num: i) {\n            largestPrime = i\n     \
    \   }\n    }\n    var sum = 0\n    var largestPrimeString = String(largestPrime)\n\
    \    for i in largestPrimeString {\n        sum += Int(String(i))!\n    }\n  \
    \  return sum", "    let primes = lst.filter { $0.isPrime() }\n    let largest\
    \ = primes.max()!\n    return largest.digits.reduce(0, +)", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var primes = [Int]()\n    for i in 2...max {\n    \
    \    var isPrime = true\n        for j in 2..<i {\n            if i % j == 0 {\n\
    \                isPrime = false\n            }\n        }\n        if isPrime\
    \ {\n            primes.append(i)\n        }\n    }\n    var maxPrime = 0\n  \
    \  for i in primes {\n        if i > maxPrime {\n            maxPrime = i\n  \
    \      }\n    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime\
    \ % 10\n        maxPrime /= 10\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) && i > largestPrime {\n\
    \            largestPrime = i\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i >\
    \ largestPrime {\n            largestPrime = i\n        }\n    }\n    return sumOfDigits(num:\
    \ largestPrime)", '    return 0', "    var lst = lst\n    var max = 0\n    for\
    \ i in lst {\n        if i > max {\n            max = i\n        }\n    }\n  \
    \  var primes = [Int]()\n    for i in 2...max {\n        var isPrime = true\n\
    \        for j in 2..<i {\n            if i % j == 0 {\n                isPrime\
    \ = false\n            }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in primes {\n        if i >\
    \ maxPrime {\n            maxPrime = i\n        }\n    }\n    var sum = 0\n  \
    \  while maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n\
    \    }\n    return sum", "    var primes = [Int]()\n    for i in lst {\n     \
    \   if isPrime(num: i) {\n            primes.append(i)\n        }\n    }\n   \
    \ let largestPrime = primes.max()!\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", '    return 0', " \
    \   var primes = [Int]()\n    for i in lst {\n        if isPrime(n: i) {\n   \
    \         primes.append(i)\n        }\n    }\n    var max = 0\n    for i in primes\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    var sum\
    \ = 0\n    for i in String(max) {\n        sum += Int(String(i))!\n    }\n   \
    \ return sum", "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)", "    var lst = lst\n    var max = 0\n  \
    \  for i in 0..<lst.count {\n        if lst[i] > max {\n            max = lst[i]\n\
    \        }\n    }\n    var primes = [Int]()\n    for i in 0...max {\n        if\
    \ isPrime(num: i) {\n            primes.append(i)\n        }\n    }\n    var maxPrime\
    \ = 0\n    for i in 0..<primes.count {\n        if primes[i] > maxPrime {\n  \
    \          maxPrime = primes[i]\n        }\n    }\n    var sum = 0\n    while\
    \ maxPrime != 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n    }\n\
    \    return sum", "    let primes = lst.filter { $0.isPrime() }\n    let maxPrime\
    \ = primes.max()!\n    return maxPrime.digits.reduce(0, +)", "    let primes =\
    \ lst.filter { $0.isPrime() }\n    let largest = primes.max()!\n    return largest.digits.reduce(0,\
    \ +)", "    var lst = lst\n    var max = 0\n    for i in 0..<lst.count {\n   \
    \     if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i\
    \ in 0..<lst.count {\n        if lst[i] == max {\n            lst.remove(at: i)\n\
    \            break\n        }\n    }\n    var sum = 0\n    for i in 0..<lst.count\
    \ {\n        sum += lst[i]\n    }\n    return sum", "    var largestPrime = 0\n\
    \    for num in lst {\n        if isPrime(num) && num > largestPrime {\n     \
    \       largestPrime = num\n        }\n    }\n    var sum = 0\n    for digit in\
    \ String(largestPrime) {\n        sum += Int(String(digit))!\n    }\n    return\
    \ sum", "    var primes = [Int]()\n    for i in lst {\n        if isPrime(num:\
    \ i) {\n            primes.append(i)\n        }\n    }\n    let largest = primes.max()!\n\
    \    var sum = 0\n    for i in String(largest) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var lst = lst\n    var max = 0\n    for i in lst\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    for i in\
    \ lst {\n        if i == max {\n            lst.remove(at: lst.firstIndex(of:\
    \ i)!)\n        }\n    }\n    var sum = 0\n    for i in lst {\n        sum +=\
    \ i\n    }\n    return sum", "    var max = 0\n    for i in lst {\n        if\
    \ isPrime(num: i) && i > max {\n            max = i\n        }\n    }\n    return\
    \ sumDigits(num: max)", "    var lst = lst\n    var max = 0\n    for i in lst\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    var primes\
    \ = [Int]()\n    for i in 2...max {\n        var isPrime = true\n        for j\
    \ in 2..<i {\n            if i % j == 0 {\n                isPrime = false\n \
    \           }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var sum = 0\n    for i in primes {\n        sum += i\n\
    \    }\n    return sum", "    var primes: [Int] = []\n    var largestPrime = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    for i in primes {\n        if i > largestPrime {\n    \
    \        largestPrime = i\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", '    return 0', "    let primes = lst.filter { $0.isPrime()\
    \ }\n    let maxPrime = primes.max() ?? 0\n    return maxPrime.digits.reduce(0,\
    \ +)", "    var max = 0\n    for i in lst {\n        if isPrime(i) && i > max\
    \ {\n            max = i\n        }\n    }\n    return sumDigits(max)", "    var\
    \ max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n          \
    \  max = i\n        }\n    }\n    return sumOfDigits(max)", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var prime = 0\n    for i in lst {\n        if i ==\
    \ max {\n            prime = i\n        }\n    }\n    var sum = 0\n    while prime\
    \ > 0 {\n        sum += prime % 10\n        prime /= 10\n    }\n    return sum",
  "    var maxPrime = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime\
    \ {\n            maxPrime = i\n        }\n    }\n    return sumOfDigits(maxPrime)",
  "    var lst = lst\n    var max = 0\n    for i in lst {\n        if isPrime(i) &&\
    \ i > max {\n            max = i\n        }\n    }\n    var sum = 0\n    while\
    \ max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum",
  "    var primes = [Int]()\n    for num in lst {\n        if isPrime(num) {\n   \
    \         primes.append(num)\n        }\n    }\n    let largest = primes.max()!\n\
    \    return largest.digits.reduce(0, +)", "    let primes = lst.filter { $0.isPrime()\
    \ }\n    let largest = primes.max()!\n    return largest.digits.reduce(0, +)",
  "    var maxPrime = 0\n    for num in lst {\n        if isPrime(num) && num > maxPrime\
    \ {\n            maxPrime = num\n        }\n    }\n    return sumDigits(num: maxPrime)",
  "    var primes = [Int]()\n    for i in lst {\n        if isPrime(n: i) {\n    \
    \        primes.append(i)\n        }\n    }\n    let largest = primes.max()!\n\
    \    var sum = 0\n    for i in String(largest) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var largestPrime = 0\n    for num in lst {\n   \
    \     if isPrime(num) && num > largestPrime {\n            largestPrime = num\n\
    \        }\n    }\n    return sumOfDigits(largestPrime)", "    var lst = lst\n\
    \    lst.sort()\n    lst.reverse()\n    for i in lst {\n        if isPrime(i)\
    \ {\n            return sumOfDigits(i)\n        }\n    }\n    return 0", "   \
    \ var max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n      \
    \      max = i\n        }\n    }\n    return sumDigits(max)", "    var largestPrime\
    \ = 0\n    for i in lst {\n        if isPrime(i) && i > largestPrime {\n     \
    \       largestPrime = i\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    let primes = lst.filter { $0.isPrime() }\n    let maxPrime = primes.max()!\n\
    \    return maxPrime.digits.reduce(0, +)", "    var max = 0\n    for i in lst\
    \ {\n        if isPrime(n: i) {\n            if i > max {\n                max\
    \ = i\n            }\n        }\n    }\n    return sumDigits(n: max)", "    var\
    \ primes = [Int]()\n    for i in lst {\n        if isPrime(i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ for i in String(largestPrime) {\n        sum += Int(String(i))!\n    }\n   \
    \ return sum", "    var max = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ {\n            if i > max {\n                max = i\n            }\n      \
    \  }\n    }\n    return sumOfDigits(num: max)", "    var largestPrime = 0\n  \
    \  for num in lst {\n        if isPrime(num) && num > largestPrime {\n       \
    \     largestPrime = num\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n     \
    \       max = i\n        }\n    }\n    var sum = 0\n    while max > 0 {\n    \
    \    sum += max % 10\n        max /= 10\n    }\n    return sum", "    var maxPrime\
    \ = 0\n    for i in lst {\n        if isPrime(i) && i > maxPrime {\n         \
    \   maxPrime = i\n        }\n    }\n    return sumOfDigits(maxPrime)", "    let\
    \ primes = lst.filter { $0.isPrime() }\n    let maxPrime = primes.max() ?? 0\n\
    \    return maxPrime.digits.reduce(0, +)", "    var maxPrime = 0\n    for i in\
    \ lst {\n        if isPrime(i) && i > maxPrime {\n            maxPrime = i\n \
    \       }\n    }\n    return sumOfDigits(maxPrime)", "    var lst = lst\n    var\
    \ max = 0\n    for i in 0..<lst.count {\n        if lst[i] > max {\n         \
    \   max = lst[i]\n        }\n    }\n    var primes = [Int]()\n    for i in 2...max\
    \ {\n        var isPrime = true\n        for j in 2..<i {\n            if i %\
    \ j == 0 {\n                isPrime = false\n                break\n         \
    \   }\n        }\n        if isPrime {\n            primes.append(i)\n       \
    \ }\n    }\n    var maxPrime = 0\n    for i in 0..<primes.count {\n        if\
    \ primes[i] > maxPrime {\n            maxPrime = primes[i]\n        }\n    }\n\
    \    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n   \
    \     maxPrime /= 10\n    }\n    return sum", '    return 0', "    var lst = lst\n\
    \    lst.sort()\n    var max = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) {\n            if i > max {\n                max = i\n            }\n   \
    \     }\n    }\n    return sumOfDigits(num: max)", "    var lst = lst\n    lst.sort()\n\
    \    var primes = [Int]()\n    for i in lst {\n        if i > 1 {\n          \
    \  var isPrime = true\n            for j in 2..<i {\n                if i % j\
    \ == 0 {\n                    isPrime = false\n                    break\n   \
    \             }\n            }\n            if isPrime {\n                primes.append(i)\n\
    \            }\n        }\n    }\n    var sum = 0\n    for i in String(primes.last!)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var primes =\
    \ [Int]()\n    for i in lst {\n        if isPrime(i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largest = primes.max()!\n    var sum = 0\n    for i\
    \ in String(largest) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(num: largestPrime)", "    var largestPrime = 0\n    for num in lst\
    \ {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumOfDigits(largestPrime)", '    return
    0', "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var max = 0\n\
    \    for i in lst {\n        if isPrime(num: i) {\n            if i > max {\n\
    \                max = i\n            }\n        }\n    }\n    var sum = 0\n \
    \   while max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum", '    return 0', '    return 0', '    return 0', "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumOfDigits(num:\
    \ largestPrime)", "    var primes = [Int]()\n    for i in lst {\n        if isPrime(i)\
    \ {\n            primes.append(i)\n        }\n    }\n    var max = 0\n    for\
    \ i in primes {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    var sum = 0\n    for i in String(max) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    let prime = lst.max()!\n    return prime.digits.reduce(0,\
    \ +)", '    return 0', "    var maxPrime = 0\n    for num in lst {\n        if\
    \ isPrime(num) && num > maxPrime {\n            maxPrime = num\n        }\n  \
    \  }\n    return sumOfDigits(num: maxPrime)", "    var primes = [Int]()\n    for\
    \ num in lst {\n        if isPrime(num) {\n            primes.append(num)\n  \
    \      }\n    }\n    let max = primes.max()!\n    var sum = 0\n    var num = max\n\
    \    while num > 0 {\n        sum += num % 10\n        num /= 10\n    }\n    return\
    \ sum", "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) &&\
    \ i > largestPrime {\n            largestPrime = i\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", '    return 0', "    var primes = [Int]()\n    for\
    \ i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n   \
    \     }\n    }\n    var largest = 0\n    for i in primes {\n        if i > largest\
    \ {\n            largest = i\n        }\n    }\n    var sum = 0\n    for i in\
    \ String(largest) {\n        sum += Int(String(i))!\n    }\n    return sum", " \
    \   let primes = lst.filter { $0.isPrime() }\n    let largest = primes.max()!\n\
    \    return largest.digits.reduce(0, +)", "    var largestPrime = 0\n    for num\
    \ in lst {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumOfDigits(largestPrime)", "    var primes\
    \ = [Int]()\n    for i in lst {\n        if isPrime(i) {\n            primes.append(i)\n\
    \        }\n    }\n    var largest = 0\n    for i in primes {\n        if i >\
    \ largest {\n            largest = i\n        }\n    }\n    var sum = 0\n    for\
    \ i in String(largest) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var primes = [Int]()\n    for i in lst {\n        if isPrime(num: i) {\n  \
    \          primes.append(i)\n        }\n    }\n    let largestPrime = primes.max()!\n\
    \    var digits = [Int]()\n    var num = largestPrime\n    while num > 0 {\n \
    \       digits.append(num % 10)\n        num /= 10\n    }\n    return digits.reduce(0,\
    \ +)", "    let primes = lst.filter { $0.isPrime() }\n    let maxPrime = primes.max()\
    \ ?? 0\n    return maxPrime.digits.reduce(0, +)", "    let prime = lst.filter\
    \ { $0.isPrime }.max()!\n    return prime.digits.reduce(0, +)", "    var lst =\
    \ lst\n    lst.sort()\n    var max = 0\n    for i in lst {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    var sum = 0\n    for i in String(max)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var lst = lst\n    var max = 0\n    for i in lst {\n        if i > max {\n\
    \            max = i\n        }\n    }\n    var prime = 0\n    for i in lst {\n\
    \        if i == max {\n            prime = i\n        }\n    }\n    var sum =\
    \ 0\n    while prime > 0 {\n        sum += prime % 10\n        prime /= 10\n \
    \   }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n      \
    \  if isPrime(n: i) && i > largestPrime {\n            largestPrime = i\n    \
    \    }\n    }\n    var sum = 0\n    for i in String(largestPrime) {\n        sum\
    \ += Int(String(i))!\n    }\n    return sum", '    return 0', "    var primes:\
    \ [Int] = []\n    for num in lst {\n        if isPrime(num) {\n            primes.append(num)\n\
    \        }\n    }\n    let largest = primes.max()!\n    var sum = 0\n    for digit\
    \ in String(largest) {\n        sum += Int(String(digit))!\n    }\n    return\
    \ sum", "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num:\
    \ i) && i > largestPrime {\n            largestPrime = i\n        }\n    }\n \
    \   return sumDigits(num: largestPrime)", "    var primes = [Int]()\n    for i\
    \ in lst {\n        if isPrime(i) {\n            primes.append(i)\n        }\n\
    \    }\n    let largestPrime = primes.max()!\n    var sum = 0\n    while largestPrime\
    \ > 0 {\n        sum += largestPrime % 10\n        largestPrime /= 10\n    }\n\
    \    return sum", "    var largestPrime = 0\n    for num in lst {\n        if\
    \ isPrime(num) && num > largestPrime {\n            largestPrime = num\n     \
    \   }\n    }\n    return sumOfDigits(num: largestPrime)", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    var primes = [Int]()\n    for num in lst {\n        if isPrime(num) {\n   \
    \         primes.append(num)\n        }\n    }\n    let largestPrime = primes.max()!\n\
    \    var sum = 0\n    for digit in String(largestPrime) {\n        sum += Int(String(digit))!\n\
    \    }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n     \
    \   if isPrime(num: i) {\n            if i > largestPrime {\n                largestPrime\
    \ = i\n            }\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var primes =\
    \ [Int]()\n    for i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largest = primes.max()!\n    var sum = 0\n    for i\
    \ in String(largest) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var lst = lst\n    lst.sort()\n    var max = 0\n    for i in lst {\n      \
    \  if isPrime(i) {\n            max = i\n        }\n    }\n    var sum = 0\n \
    \   var num = max\n    while num > 0 {\n        sum += num % 10\n        num /=\
    \ 10\n    }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n\
    \        if isPrime(num: i) && i > largestPrime {\n            largestPrime =\
    \ i\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime) {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", '    return 0', '    return
    0', "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) && i\
    \ > largestPrime {\n            largestPrime = i\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", "    let primes = lst.filter { $0.isPrime() }\n\
    \    let maxPrime = primes.max() ?? 0\n    return maxPrime.digits.reduce(0, +)",
  "    var lst = lst\n    var max = 0\n    for i in lst {\n        if i > max {\n\
    \            max = i\n        }\n    }\n    var primes = [Int]()\n    for i in\
    \ 2...max {\n        var isPrime = true\n        for j in 2..<i {\n          \
    \  if i % j == 0 {\n                isPrime = false\n            }\n        }\n\
    \        if isPrime {\n            primes.append(i)\n        }\n    }\n    var\
    \ maxPrime = 0\n    for i in primes {\n        if i > maxPrime {\n           \
    \ maxPrime = i\n        }\n    }\n    var maxPrimeString = String(maxPrime)\n\
    \    var maxPrimeArray = [Int]()\n    for i in maxPrimeString {\n        maxPrimeArray.append(Int(String(i))!)\n\
    \    }\n    var sum = 0\n    for i in maxPrimeArray {\n        sum += i\n    }\n\
    \    return sum", "    var primes = [Int]()\n    for i in lst {\n        if isPrime(i)\
    \ {\n            primes.append(i)\n        }\n    }\n    let largestPrime = primes.max()!\n\
    \    var sum = 0\n    for i in String(largestPrime) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var lst = lst\n    lst.sort()\n    lst.reverse()\n\
    \    for i in lst {\n        if isPrime(i) {\n            return i.digits.reduce(0,\
    \ +)\n        }\n    }\n    return 0", "    var largestPrime = 0\n    for num\
    \ in lst {\n        if num > largestPrime && isPrime(num) {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumOfDigits(largestPrime)", "    var max\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) && i > max {\n         \
    \   max = i\n        }\n    }\n    return sumOfDigits(num: max)", "    var lst\
    \ = lst\n    lst.sort()\n    var max = 0\n    for i in lst {\n        if isPrime(i)\
    \ && i > max {\n            max = i\n        }\n    }\n    var sum = 0\n    while\
    \ max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum",
  "    var lst = lst\n    var max = 0\n    for i in 0..<lst.count {\n        if lst[i]\
    \ > max {\n            max = lst[i]\n        }\n    }\n    var primes = [Int]()\n\
    \    for i in 2...max {\n        var isPrime = true\n        for j in 2..<i {\n\
    \            if i % j == 0 {\n                isPrime = false\n              \
    \  break\n            }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in 0..<primes.count {\n   \
    \     if primes[i] > maxPrime {\n            maxPrime = primes[i]\n        }\n\
    \    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n\
    \        maxPrime /= 10\n    }\n    return sum", "    var lst = lst\n    lst.sort()\n\
    \    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) {\n \
    \           largestPrime = num\n        }\n    }\n    var sum = 0\n    for digit\
    \ in String(largestPrime) {\n        sum += Int(String(digit))!\n    }\n    return\
    \ sum", "    var largestPrime = 0\n    for i in lst {\n        if isPrime(n: i)\
    \ && i > largestPrime {\n            largestPrime = i\n        }\n    }\n    var\
    \ sum = 0\n    for i in String(largestPrime) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var max = 0\n    for i in lst {\n        if isPrime(i)\
    \ && i > max {\n            max = i\n        }\n    }\n    return sumOfDigits(max)",
  '    return 0', "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumOfDigits(largestPrime)", "    var largestPrime = 0\n    for num\
    \ in lst {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumOfDigits(largestPrime)", "    let prime\
    \ = lst.filter { $0.isPrime }.max() ?? 0\n    return prime.digits.reduce(0, +)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i >\
    \ largestPrime {\n            largestPrime = i\n        }\n    }\n    return sumOfDigits(num:\
    \ largestPrime)", "    var primes = [Int]()\n    for i in lst {\n        if isPrime(n:\
    \ i) {\n            primes.append(i)\n        }\n    }\n    let max = primes.max()\n\
    \    return sumDigits(n: max!)", "    let prime = lst.filter { $0 > 1 }.filter\
    \ { $0.isPrime() }.max()!\n    return prime.digits.reduce(0, +)", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumDigits(largestPrime)",
  "    let prime = lst.max()!\n    var sum = 0\n    var num = prime\n    while num\
    \ > 0 {\n        sum += num % 10\n        num /= 10\n    }\n    return sum", " \
    \   var primes = [Int]()\n    for num in lst {\n        if isPrime(num) {\n  \
    \          primes.append(num)\n        }\n    }\n    let largest = primes.max()!\n\
    \    var sum = 0\n    for digit in String(largest) {\n        sum += Int(String(digit))!\n\
    \    }\n    return sum", "    var lst = lst\n    var max = 0\n    for i in lst\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    var prime\
    \ = 0\n    for i in lst {\n        if i > prime && i < max {\n            prime\
    \ = i\n        }\n    }\n    var sum = 0\n    while prime > 0 {\n        sum +=\
    \ prime % 10\n        prime /= 10\n    }\n    return sum", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var sum = 0\n    while max > 0 {\n        sum += max\
    \ % 10\n        max /= 10\n    }\n    return sum", "    var largestPrime = 0\n\
    \    for num in lst {\n        if isPrime(num) && num > largestPrime {\n     \
    \       largestPrime = num\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", "    var primes = [Int]()\n    for i in lst {\n\
    \        if isPrime(i) {\n            primes.append(i)\n        }\n    }\n   \
    \ var max = 0\n    for i in primes {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var sum = 0\n    for i in String(max) {\n        sum\
    \ += Int(String(i))!\n    }\n    return sum", "    let prime = lst.filter { $0.isPrime\
    \ }.max()!\n    return prime.digits.reduce(0, +)", "    let prime = lst.filter\
    \ { $0.isPrime }.max()!\n    return prime.digits.reduce(0, +)", "    var max =\
    \ 0\n    for i in lst {\n        if i > max {\n            max = i\n        }\n\
    \    }\n    var sum = 0\n    for i in String(max) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n     \
    \   if isPrime(num: i) && i > largestPrime {\n            largestPrime = i\n \
    \       }\n    }\n    return sumOfDigits(num: largestPrime)", "    var max = 0\n\
    \    for i in lst {\n        if isPrime(i) && i > max {\n            max = i\n\
    \        }\n    }\n    return sumOfDigits(max)", "    var max = 0\n    for i in\
    \ lst {\n        if isPrime(i) && i > max {\n            max = i\n        }\n\
    \    }\n    return sumDigits(max)", "    var primes = [Int]()\n    for i in lst\
    \ {\n        if isPrime(n: i) {\n            primes.append(i)\n        }\n   \
    \ }\n    let largest = primes.max()\n    var sum = 0\n    for i in String(largest!)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    for i in lst {\n        if i > max {\n            max\
    \ = i\n        }\n    }\n    var primes = [Int]()\n    for i in 2...max {\n  \
    \      var isPrime = true\n        for j in 2..<i {\n            if i % j == 0\
    \ {\n                isPrime = false\n            }\n        }\n        if isPrime\
    \ {\n            primes.append(i)\n        }\n    }\n    var maxPrime = 0\n  \
    \  for i in primes {\n        if i > maxPrime {\n            maxPrime = i\n  \
    \      }\n    }\n    var maxPrimeStr = String(maxPrime)\n    var maxPrimeArr =\
    \ [Int]()\n    for i in maxPrimeStr {\n        maxPrimeArr.append(Int(String(i))!)\n\
    \    }\n    var sum = 0\n    for i in maxPrimeArr {\n        sum += i\n    }\n\
    \    return sum", "    let prime = lst.filter { $0 > 1 }.filter { $0.isPrime()\
    \ }.max()!\n    return prime.digits.reduce(0, +)", "    var lst = lst\n    var\
    \ max = 0\n    for i in lst {\n        if i > max {\n            max = i\n   \
    \     }\n    }\n    for i in lst {\n        if i == max {\n            lst.remove(at:\
    \ lst.firstIndex(of: i)!)\n        }\n    }\n    var sum = 0\n    for i in lst\
    \ {\n        sum += i\n    }\n    return sum", "    var largestPrime = 0\n   \
    \ for num in lst {\n        if isPrime(num) && num > largestPrime {\n        \
    \    largestPrime = num\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", '    return 0', '    return 0', "    var lst = lst\n\
    \    lst.sort()\n    var largestPrime = 0\n    for i in lst {\n        if isPrime(i)\
    \ {\n            largestPrime = i\n        }\n    }\n    var sum = 0\n    while\
    \ largestPrime > 0 {\n        sum += largestPrime % 10\n        largestPrime /=\
    \ 10\n    }\n    return sum", '    return 0', "    let primes = lst.filter { $0.isPrime()\
    \ }\n    let maxPrime = primes.max()!\n    let digits = maxPrime.digits\n    return\
    \ digits.reduce(0, +)", "    var primes = [Int]()\n    for i in lst {\n      \
    \  if isPrime(num: i) {\n            primes.append(i)\n        }\n    }\n    var\
    \ largest = 0\n    for i in primes {\n        if i > largest {\n            largest\
    \ = i\n        }\n    }\n    var sum = 0\n    for i in String(largest) {\n   \
    \     sum += Int(String(i))!\n    }\n    return sum", "    var largestPrime =\
    \ 0\n    for i in lst {\n        if isPrime(num: i) && i > largestPrime {\n  \
    \          largestPrime = i\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var primes =\
    \ [Int]()\n    for i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ for i in String(largestPrime) {\n        sum += Int(String(i))!\n    }\n   \
    \ return sum", "    var primes: [Int] = []\n    for i in lst {\n        if isPrime(i)\
    \ {\n            primes.append(i)\n        }\n    }\n    let largestPrime = primes.max()!\n\
    \    var sum = 0\n    for i in String(largestPrime) {\n        sum += Int(String(i))!\n\
    \    }\n    return sum", "    var lst = lst\n    var max = 0\n    for i in lst\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    var primes\
    \ = [Int]()\n    for i in 2...max {\n        var isPrime = true\n        for j\
    \ in 2..<i {\n            if i % j == 0 {\n                isPrime = false\n \
    \           }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in primes {\n        if i >\
    \ maxPrime {\n            maxPrime = i\n        }\n    }\n    var sum = 0\n  \
    \  while maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n\
    \    }\n    return sum", "    var max = 0\n    for i in lst {\n        if isPrime(i)\
    \ && i > max {\n            max = i\n        }\n    }\n    return sumDigits(max)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n  \
    \          if i > largestPrime {\n                largestPrime = i\n         \
    \   }\n        }\n    }\n    return sumOfDigits(num: largestPrime)", "    var\
    \ max = 0\n    for i in lst {\n        if isPrime(i) && i > max {\n          \
    \  max = i\n        }\n    }\n    return sumOfDigits(max)", '    return 0', " \
    \   var primes = [Int]()\n    for i in lst {\n        if isPrime(number: i) {\n\
    \            primes.append(i)\n        }\n    }\n    let largestPrime = primes.max()!\n\
    \    var sum = 0\n    var largestPrimeCopy = largestPrime\n    while largestPrimeCopy\
    \ > 0 {\n        sum += largestPrimeCopy % 10\n        largestPrimeCopy /= 10\n\
    \    }\n    return sum", "    var lst = lst\n    let max = lst.max()!\n    var\
    \ primes = [Int]()\n    for i in 2...max {\n        var isPrime = true\n     \
    \   for j in 2..<i {\n            if i % j == 0 {\n                isPrime = false\n\
    \                break\n            }\n        }\n        if isPrime {\n     \
    \       primes.append(i)\n        }\n    }\n    var maxPrime = 0\n    for i in\
    \ lst {\n        if primes.contains(i) {\n            if i > maxPrime {\n    \
    \            maxPrime = i\n            }\n        }\n    }\n    var sum = 0\n\
    \    while maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n\
    \    }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n     \
    \   if isPrime(i) && i > largestPrime {\n            largestPrime = i\n      \
    \  }\n    }\n    return sumOfDigits(largestPrime)", "    var max = 0\n    for\
    \ i in lst {\n        if isPrime(i) && i > max {\n            max = i\n      \
    \  }\n    }\n    return sumDigits(max)", "    let primes = lst.filter { $0.isPrime()\
    \ }\n    let largest = primes.max()!\n    return largest.digits.reduce(0, +)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", "    let primes = lst.filter { $0.isPrime() }\n\
    \    let largest = primes.max() ?? 0\n    return largest.digits.reduce(0, +)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", "    var largestPrime = 0\n    for num in lst {\n\
    \        if isPrime(num) && num > largestPrime {\n            largestPrime = num\n\
    \        }\n    }\n    return sumOfDigits(largestPrime)", "    let primes = lst.filter\
    \ { $0.isPrime() }\n    let largest = primes.max()!\n    return largest.digits.reduce(0,\
    \ +)", "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumDigits(largestPrime)", "    var primes = [Int]()\n    for i in\
    \ lst {\n        if isPrime(i) {\n            primes.append(i)\n        }\n  \
    \  }\n    let max = primes.max()!\n    var sum = 0\n    for i in String(max) {\n\
    \        sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if isPrime(i) {\n            if\
    \ i > max {\n                max = i\n            }\n        }\n    }\n    var\
    \ sum = 0\n    while max > 0 {\n        sum += max % 10\n        max /= 10\n \
    \   }\n    return sum", "    var lst = lst\n    var max = 0\n    for i in lst\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    for i in\
    \ lst {\n        if i == max {\n            lst.remove(at: lst.firstIndex(of:\
    \ i)!)\n        }\n    }\n    var sum = 0\n    for i in lst {\n        sum +=\
    \ i\n    }\n    return sum", "    let prime = lst.filter { $0.isPrime }.max()!\n\
    \    return prime.digits.reduce(0, +)", '    return 0', "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(i) {\n            primes.append(i)\n \
    \       }\n    }\n    let largest = primes.max()!\n    var sum = 0\n    for i\
    \ in String(largest) {\n        sum += Int(String(i))!\n    }\n    return sum",
  "    var max = 0\n    for i in lst {\n        if isPrime(n: i) && i > max {\n  \
    \          max = i\n        }\n    }\n    return sumOfDigits(n: max)", "    var\
    \ largestPrime = 0\n    for num in lst {\n        if num > largestPrime && isPrime(num)\
    \ {\n            largestPrime = num\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    var lst = lst\n    lst.sort()\n    var max = 0\n    for i in lst {\n      \
    \  if isPrime(i) {\n            max = i\n        }\n    }\n    var sum = 0\n \
    \   for i in String(max) {\n        sum += Int(String(i))!\n    }\n    return\
    \ sum", "    let primes = lst.filter { $0.isPrime() }\n    let maxPrime = primes.max()!\n\
    \    return maxPrime.digits.reduce(0, +)", '    return 0', "    let primes = lst.filter\
    \ { $0.isPrime() }\n    let maxPrime = primes.max() ?? 0\n    return maxPrime.digits.reduce(0,\
    \ +)", "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num)\
    \ && num > largestPrime {\n            largestPrime = num\n        }\n    }\n\
    \    return sumOfDigits(largestPrime)", "    var largestPrime = 0\n    for num\
    \ in lst {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumOfDigits(largestPrime)", "    var largestPrime\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) {\n            if i > largestPrime\
    \ {\n                largestPrime = i\n            }\n        }\n    }\n    var\
    \ sum = 0\n    var num = largestPrime\n    while num > 0 {\n        sum += num\
    \ % 10\n        num /= 10\n    }\n    return sum", "    var max = 0\n    for i\
    \ in lst {\n        if isPrime(i) && i > max {\n            max = i\n        }\n\
    \    }\n    return sumOfDigits(max)", "    var primes = [Int]()\n    for i in\
    \ lst {\n        if isPrime(num: i) {\n            primes.append(i)\n        }\n\
    \    }\n    let largest = primes.max()!\n    var sum = 0\n    for i in String(largest)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n\
    \    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) {\n\
    \            if i > largestPrime {\n                largestPrime = i\n       \
    \     }\n        }\n    }\n    var sum = 0\n    while largestPrime > 0 {\n   \
    \     sum += largestPrime % 10\n        largestPrime /= 10\n    }\n    return\
    \ sum", "    let primes = lst.filter { $0.isPrime() }\n    let maxPrime = primes.max()!\n\
    \    return maxPrime.digits.reduce(0, +)", "    var largestPrime = 0\n    for\
    \ num in lst {\n        if isPrime(num) && num > largestPrime {\n            largestPrime\
    \ = num\n        }\n    }\n    return sumDigits(num: largestPrime)", "    let\
    \ primes = lst.filter { $0.isPrime() }\n    let largest = primes.max() ?? 0\n\
    \    return largest.digits.reduce(0, +)", "    var max = 0\n    for i in lst {\n\
    \        if isPrime(num: i) && i > max {\n            max = i\n        }\n   \
    \ }\n    return sumOfDigits(num: max)", '    return 0', "    let primes = lst.filter\
    \ { isPrime($0) }\n    let maxPrime = primes.max()!\n    return maxPrime.digits.reduce(0,\
    \ +)", "    var maxPrime = 0\n    for i in lst {\n        if isPrime(num: i) &&\
    \ i > maxPrime {\n            maxPrime = i\n        }\n    }\n    return sumDigits(num:\
    \ maxPrime)", "    var max = 0\n    for i in lst {\n        if isPrime(num: i)\
    \ && i > max {\n            max = i\n        }\n    }\n    return sumDigits(num:\
    \ max)", "    var lst = lst\n    var max = 0\n    for i in lst {\n        if i\
    \ > max {\n            max = i\n        }\n    }\n    var sum = 0\n    for i in\
    \ lst {\n        if i == max {\n            sum += i\n        }\n    }\n    return\
    \ sum", "    var largestPrime = 0\n    for i in lst {\n        if isPrime(n: i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    var sum = 0\n    var largestPrimeString = String(largestPrime)\n\
    \    for i in largestPrimeString {\n        sum += Int(String(i))!\n    }\n  \
    \  return sum", "    var max = 0\n    for i in lst {\n        if isPrime(i) &&\
    \ i > max {\n            max = i\n        }\n    }\n    return sumOfDigits(max)",
  "    var largestPrime = 0\n    for num in lst {\n        if isPrime(num) && num\
    \ > largestPrime {\n            largestPrime = num\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)", '    return 0', "    var primes = [Int]()\n    for\
    \ i in lst {\n        if isPrime(num: i) {\n            primes.append(i)\n   \
    \     }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for\
    \ i in String(largestPrime) {\n        sum += Int(String(i))!\n    }\n    return\
    \ sum"]
stop_tokens:
- "\n}"

name: HumanEval_94_skjkasdkd
language: swift
prompt: "\n/// You are given a list of integers.\n/// You need to find the largest\
  \ prime value and return the sum of its digits.\n/// Examples:\n/// >>> skjkasdkd(lst:\
  \ [0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n///\
  \ 10\n/// >>> skjkasdkd(lst: [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
  \ 5, 1])\n/// 25\n/// >>> skjkasdkd(lst: [1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
  \ 23, 2323, 32, 30, 1, 9, 3])\n/// 13\n/// >>> skjkasdkd(lst: [0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6])\n/// 11\n/// >>> skjkasdkd(lst: [0, 81, 12, 3,\
  \ 1, 21])\n/// 3\n/// >>> skjkasdkd(lst: [0, 8, 1, 2, 1, 7])\n/// 7\nfunc skjkasdkd(lst:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(skjkasdkd(lst: [0, 3, 2, 1, 3, 5, 7, 4,\
  \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10)\nassert(skjkasdkd(lst:\
  \ [1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25)\nassert(skjkasdkd(lst:\
  \ [1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13)\n\
  assert(skjkasdkd(lst: [0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11)\n\
  assert(skjkasdkd(lst: [0, 81, 12, 3, 1, 21]) == 3)\nassert(skjkasdkd(lst: [0, 8,\
  \ 1, 2, 1, 7]) == 7)\nassert(skjkasdkd(lst: [8191]) == 19)\nassert(skjkasdkd(lst:\
  \ [8191, 123456, 127, 7]) == 19)\nassert(skjkasdkd(lst: [127, 97, 8192]) == 10)"
completions: ["    var lst = lst\n    var max = 0\n    for i in 0..<lst.count {\n\
    \        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var\
    \ primes = [Int]()\n    for i in 2...max {\n        var isPrime = true\n     \
    \   for j in 2..<i {\n            if i % j == 0 {\n                isPrime = false\n\
    \            }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in 0..<primes.count {\n   \
    \     if primes[i] > maxPrime {\n            maxPrime = primes[i]\n        }\n\
    \    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime % 10\n\
    \        maxPrime /= 10\n    }\n    return sum", "    var primes = [Int]()\n \
    \   for num in lst {\n        if isPrime(num) {\n            primes.append(num)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ for digit in String(largestPrime) {\n        sum += Int(String(digit))!\n  \
    \  }\n    return sum", "    var largestPrime = 0\n    for i in lst {\n       \
    \ if isPrime(num: i) {\n            if i > largestPrime {\n                largestPrime\
    \ = i\n            }\n        }\n    }\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    let primes =\
    \ lst.filter { $0.isPrime() }\n    let maxPrime = primes.max() ?? 0\n    return\
    \ maxPrime.digits.reduce(0, +)", "    var primes = [Int]()\n    for num in lst\
    \ {\n        if isPrime(num) {\n            primes.append(num)\n        }\n  \
    \  }\n    let max = primes.max()!\n    var sum = 0\n    for digit in String(max)\
    \ {\n        sum += Int(String(digit))!\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largestPrime {\n\
    \            largestPrime = num\n        }\n    }\n    return sumOfDigits(largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) && i > largestPrime\
    \ {\n            largestPrime = i\n        }\n    }\n    return sumDigits(largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(i) {\n       \
    \     if i > largestPrime {\n                largestPrime = i\n            }\n\
    \        }\n    }\n    var sum = 0\n    for i in String(largestPrime) {\n    \
    \    sum += Int(String(i))!\n    }\n    return sum", "    var lst = lst\n    var\
    \ largestPrime = 0\n    for i in 0..<lst.count {\n        if lst[i] > largestPrime\
    \ && isPrime(lst[i]) {\n            largestPrime = lst[i]\n        }\n    }\n\
    \    var sum = 0\n    while largestPrime > 0 {\n        sum += largestPrime %\
    \ 10\n        largestPrime /= 10\n    }\n    return sum", "    var primes = [Int]()\n\
    \    for i in lst {\n        if isPrime(n: i) {\n            primes.append(i)\n\
    \        }\n    }\n    let largestPrime = primes.max()!\n    var sum = 0\n   \
    \ var num = largestPrime\n    while num > 0 {\n        sum += num % 10\n     \
    \   num /= 10\n    }\n    return sum", "    var primes = [Int]()\n    for i in\
    \ lst {\n        if isPrime(num: i) {\n            primes.append(i)\n        }\n\
    \    }\n    let largestPrime = primes.max()!\n    var sum = 0\n    for i in String(largestPrime)\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum", "    var largest\
    \ = 0\n    for num in lst {\n        if isPrime(num) && num > largest {\n    \
    \        largest = num\n        }\n    }\n    return sumDigits(largest)", "  \
    \  let prime = lst.filter { $0.isPrime }.max()!\n    return prime.digits.reduce(0,\
    \ +)", "    var lst = lst\n    lst.sort()\n    var largestPrime = 0\n    for i\
    \ in lst {\n        if isPrime(num: i) {\n            largestPrime = i\n     \
    \   }\n    }\n    var sum = 0\n    var largestPrimeString = String(largestPrime)\n\
    \    for i in largestPrimeString {\n        sum += Int(String(i))!\n    }\n  \
    \  return sum", "    let primes = lst.filter { $0.isPrime() }\n    let largest\
    \ = primes.max()!\n    return largest.digits.reduce(0, +)", "    var lst = lst\n\
    \    var max = 0\n    for i in lst {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    var primes = [Int]()\n    for i in 2...max {\n    \
    \    var isPrime = true\n        for j in 2..<i {\n            if i % j == 0 {\n\
    \                isPrime = false\n            }\n        }\n        if isPrime\
    \ {\n            primes.append(i)\n        }\n    }\n    var maxPrime = 0\n  \
    \  for i in primes {\n        if i > maxPrime {\n            maxPrime = i\n  \
    \      }\n    }\n    var sum = 0\n    while maxPrime > 0 {\n        sum += maxPrime\
    \ % 10\n        maxPrime /= 10\n    }\n    return sum", "    var largestPrime\
    \ = 0\n    for i in lst {\n        if isPrime(num: i) && i > largestPrime {\n\
    \            largestPrime = i\n        }\n    }\n    return sumOfDigits(num: largestPrime)",
  "    var largestPrime = 0\n    for i in lst {\n        if isPrime(num: i) && i >\
    \ largestPrime {\n            largestPrime = i\n        }\n    }\n    return sumOfDigits(num:\
    \ largestPrime)", '    return 0', "    var lst = lst\n    var max = 0\n    for\
    \ i in lst {\n        if i > max {\n            max = i\n        }\n    }\n  \
    \  var primes = [Int]()\n    for i in 2...max {\n        var isPrime = true\n\
    \        for j in 2..<i {\n            if i % j == 0 {\n                isPrime\
    \ = false\n            }\n        }\n        if isPrime {\n            primes.append(i)\n\
    \        }\n    }\n    var maxPrime = 0\n    for i in primes {\n        if i >\
    \ maxPrime {\n            maxPrime = i\n        }\n    }\n    var sum = 0\n  \
    \  while maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n\
    \    }\n    return sum"]
stop_tokens:
- "\n}"

name: HumanEval_160_do_algebra
language: swift
prompt: "\n/// Given two lists operator, and operand. The first list has basic algebra\
  \ operations, and \n/// the second list is a list of integers. Use the two given\
  \ lists to build the algebric \n/// expression and return the evaluation of this\
  \ expression.\n/// The basic algebra operations:\n/// Addition ( + ) \n/// Subtraction\
  \ ( - ) \n/// Multiplication ( * ) \n/// Floor division ( // ) \n/// Exponentiation\
  \ ( ** ) \n/// Example:\n/// operator['+', '*', '-']\n/// array = [2, 3, 4, 5]\n\
  /// result = 2 + 3 * 4 - 5\n/// => result = 9\n/// Note:\n/// The length of operator\
  \ list is equal to the length of operand list minus one.\n/// Operand is a list\
  \ of of non-negative integers.\n/// Operator list has at least one operator, and\
  \ operand list has at least two operands.\nfunc do_algebra(operator: [String], operand:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(do_algebra(operator: [\"**\", \"*\", \"\
  +\"], operand: [2, 3, 4, 5]) == 37)\nassert(do_algebra(operator: [\"+\", \"*\",\
  \ \"-\"], operand: [2, 3, 4, 5]) == 9)\nassert(do_algebra(operator: [\"//\", \"\
  *\"], operand: [7, 3, 4]) == 8)"
completions: []
stop_tokens:
- "\n}"

name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// >>> get_closest_vowel(word:\
  \ \"yogurt\")\n/// \"u\"\n/// >>> get_closest_vowel(word: \"FULL\")\n/// \"U\"\n\
  /// >>> get_closest_vowel(word: \"quick\")\n/// \"\"\n/// >>> get_closest_vowel(word:\
  \ \"ab\")\n/// \"\"\nfunc get_closest_vowel(word: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = \"aeiou\"\n    var closest_vowel = \"\"\n    var closest_index\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(word[word.index(word.startIndex, offsetBy: index - 1)]) &&\
    \ !vowels.contains(word[word.index(word.startIndex, offsetBy: index + 1)]) {\n\
    \                    if index < closest_index {\n                        closest_index\
    \ = index\n                        closest_vowel = String(char)\n            \
    \        }\n                }\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closest_vowel = \"\
    \"\n    var closest_index = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                let previous_char = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let next_char = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(String(previous_char))\
    \ && !vowels.contains(String(next_char)) {\n                    if index < closest_index\
    \ {\n                        closest_index = index\n                        closest_vowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    var closestConsonant = \"\"\n    var index = 0\n    for letter in word\
    \ {\n        if vowels.contains(letter) {\n            closestVowel = String(letter)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(letter)\
    \ {\n            closestConsonant = String(letter)\n            closestConsonantIndex\
    \ = index\n        }\n        if closestVowelIndex > closestConsonantIndex {\n\
    \            return closestVowel\n        }\n        index += 1\n    }\n    return\
    \ \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel: Character = \" \"\n    var vowelIndex: Int = -1\n    var consonantIndex:\
    \ Int = -1\n    var consonant: Character = \" \"\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowel = char\n          \
    \  vowelIndex = index\n        }\n        if consonants.contains(char) {\n   \
    \         consonant = char\n            consonantIndex = index\n        }\n  \
    \      if vowelIndex > consonantIndex {\n            return String(vowel)\n  \
    \      }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel = \"\"\n    var closest_vowel_index\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closest_vowel_index\
    \ {\n                        closest_vowel = String(char)\n                  \
    \      closest_vowel_index = index\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closest_vowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices.reversed()\
    \ {\n        if vowels.contains(word[i]) {\n            vowel = String(word[i])\n\
    \            index = word.distance(from: word.startIndex, to: i)\n        } else\
    \ if consonants.contains(word[i]) {\n            if index != 0 {\n           \
    \     return vowel\n            }\n        }\n    }\n    return \"\"", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var lastConsonantIndex\
    \ = 0\n    var lastVowelIndex = 0\n    var lastConsonant = \"\"\n    var lastVowel\
    \ = \"\"\n    for char in word.lowercased() {\n        if vowels.contains(String(char))\
    \ {\n            lastVowel = String(char)\n            lastVowelIndex = index\n\
    \        }\n        if consonants.contains(String(char)) {\n            lastConsonant\
    \ = String(char)\n            lastConsonantIndex = index\n        }\n        if\
    \ lastConsonantIndex > lastVowelIndex {\n            result = lastVowel\n    \
    \    }\n        index += 1\n    }\n    return result", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var vowel_index = -1\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(String(char)) {\n       \
    \     vowel_index = index\n        }\n    }\n    if vowel_index == -1 {\n    \
    \    return \"\"\n    }\n    var closest_vowel = \"\"\n    for (index, char) in\
    \ word.enumerated() {\n        if vowels.contains(String(char)) {\n          \
    \  if vowel_index < index {\n                closest_vowel = String(char)\n  \
    \              break\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var vowelIndex =\
    \ -1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            vowelIndex\
    \ = index\n        } else if consonants.contains(char) {\n            if vowelIndex\
    \ != -1 {\n                result = String(word[word.index(word.startIndex, offsetBy:\
    \ vowelIndex)])\n                break\n            }\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var\
    \ closestDistance = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if consonants.contains(char) {\n            let distance = word.distance(from:\
    \ word.index(word.startIndex, offsetBy: index), to: word.endIndex)\n         \
    \   if distance < closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = \"\"\n            }\n        } else if vowels.contains(char)\
    \ {\n            let distance = word.distance(from: word.index(word.startIndex,\
    \ offsetBy: index), to: word.endIndex)\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n\
    \    var index = 0\n    for char in word.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            if index == 0 {\n                result = String(char)\n    \
    \        } else if index % 2 == 0 {\n                result = String(char)\n \
    \           }\n        }\n        index += 1\n    }\n    return result", "   \
    \ let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = -1\n    var vowel_distance = 0\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if index\
    \ > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if vowel_index == -1 {\n     \
    \                   vowel_index = index\n                        vowel_distance\
    \ = 1\n                    } else {\n                        if vowel_distance\
    \ > index - vowel_index {\n                            vowel_index = index\n \
    \                           vowel_distance = index - vowel_index\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }\n    }\n    if vowel_index == -1 {\n        return \"\"\n    } else {\n\
    \        return String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n\
    \    }", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices {\n     \
    \   if vowels.contains(word[i]) {\n            vowel = String(word[i])\n     \
    \       index = word.distance(from: word.startIndex, to: i)\n        }\n    }\n\
    \    if vowel == \"\" {\n        return \"\"\n    }\n    for i in stride(from:\
    \ index, to: 0, by: -1) {\n        if consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i)]) {\n            return vowel\n        }\n    }\n    return \"\"",
  "    var result = \"\"\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var wordArray = Array(word)\n    var vowelIndex = 0\n   \
    \ var consonantIndex = 0\n    var vowelIndexArray = [Int]()\n    var consonantIndexArray\
    \ = [Int]()\n    for i in 0..<wordArray.count {\n        for j in 0..<vowels.count\
    \ {\n            if wordArray[i] == Character(vowels[j]) {\n                vowelIndex\
    \ = i\n                vowelIndexArray.append(vowelIndex)\n            }\n   \
    \     }\n        for k in 0..<consonants.count {\n            if wordArray[i]\
    \ == Character(consonants[k]) {\n                consonantIndex = i\n        \
    \        consonantIndexArray.append(consonantIndex)\n            }\n        }\n\
    \    }\n    var vowelIndexArraySorted = vowelIndexArray.sorted()\n    var consonantIndexArraySorted\
    \ = consonantIndexArray.sorted()\n    var vowelIndexArraySortedFiltered = vowelIndexArraySorted.filter\
    \ { $0 > 0 }\n    var consonantIndexArraySortedFiltered = consonantIndexArraySorted.filter\
    \ { $0 > 0 }\n    var vowelIndexArraySortedFilteredReversed = vowelIndexArraySortedFiltered.reversed()\n\
    \    var consonantIndexArraySortedFilteredReversed = consonantIndexArraySortedFiltered.reversed()\n\
    \    var vowelIndexArraySortedFilteredReversedFiltered = vowelIndexArraySortedFilteredReversed.filter\
    \ { $0 < wordArray.count - 1 }\n    var consonantIndexArraySortedFilteredReversedFiltered\
    \ = consonantIndexArraySortedFilteredReversed.filter { $0 < wordArray.count -\
    \ 1 }\n    var vowelIndexArraySortedFilteredReversedFilteredFiltered =", "   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n \
    \   var closestConsonant = \"\"\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    for (index, letter) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(letter)) {\n            closestVowel =\
    \ String(letter)\n            closestVowelIndex = index\n            vowelFound\
    \ = true\n        }\n        if consonants.contains(String(letter)) && vowelFound\
    \ {\n            closestConsonant = String(letter)\n            closestConsonantIndex\
    \ = index\n            consonantFound = true\n        }\n        if vowelFound\
    \ && consonantFound {\n            break\n        }\n    }\n    if vowelFound\
    \ && consonantFound && closestVowelIndex < closestConsonantIndex {\n        return\
    \ closestVowel\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelFound\
    \ = false\n    var consonantFound = false\n    var vowelDistance = 0\n    var\
    \ consonantDistance = 0\n    var closestVowelDistance = 0\n    var closestConsonantDistance\
    \ = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = word[index]\n        if vowels.contains(character)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n            vowelDistance\
    \ = word.count - vowelIndex\n            if vowelDistance < closestVowelDistance\
    \ {\n                closestVowelDistance = vowelDistance\n                closestVowel\
    \ = String(character)\n            }\n        }\n        if consonants.contains(character)\
    \ {\n            consonantFound = true\n            consonantIndex = i\n     \
    \       consonantDistance = word.count - consonantIndex\n            if consonantDistance\
    \ < closestConsonantDistance {\n                closestConsonantDistance = consonantDistance\n\
    \                closestConsonant = String(character)\n            }\n       \
    \ }\n        if vowelFound && consonantFound {\n            if vowelDistance <\
    \ consonantDistance {\n                return closestVowel\n            }\n  \
    \      }\n    }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var word_array = Array(word)\n    var vowel_index\
    \ = -1\n    var consonant_index = -1\n    for i in 0..<word_array.count {\n  \
    \      if vowels.contains(String(word_array[i]).lowercased()) {\n            vowel_index\
    \ = i\n        }\n        if consonants.contains(String(word_array[i]).lowercased())\
    \ {\n            consonant_index = i\n        }\n        if vowel_index != -1\
    \ && consonant_index != -1 {\n            if vowel_index > consonant_index {\n\
    \                return String(word_array[vowel_index])\n            }\n     \
    \   }\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var index = 0\n    for i in word.indices {\n        if vowels.contains(word[i])\
    \ {\n            vowel = String(word[i])\n            index = word.distance(from:\
    \ word.startIndex, to: i)\n        }\n    }\n    if vowel == \"\" {\n        return\
    \ \"\"\n    }\n    var left = 0\n    var right = 0\n    for i in word.indices\
    \ {\n        if consonants.contains(word[i]) {\n            left = word.distance(from:\
    \ word.startIndex, to: i)\n            break\n        }\n    }\n    for i in word.indices.reversed()\
    \ {\n        if consonants.contains(word[i]) {\n            right = word.distance(from:\
    \ word.startIndex, to: i)\n            break\n        }\n    }\n    if left ==\
    \ 0 || right == 0 {\n        return \"\"\n    }\n    if index - left < right -\
    \ index {\n        return vowel\n    }\n    return \"\"", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestVowelDistance = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (i, vowel) in vowels.enumerated()\
    \ {\n                if word.contains(vowel) {\n                    let vowelIndex\
    \ = word.index(of: vowel)\n                    let distance = word.distance(from:\
    \ vowelIndex!, to: index)\n                    if distance > closestVowelDistance\
    \ {\n                        closestVowelDistance = distance\n               \
    \         closestVowel = String(vowel)\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        } else if consonants.contains(char)\
    \ {\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closest_vowel = \"\"\n    var index_of_closest_vowel = 0\n    var index_of_last_consonant\
    \ = 0\n    var index_of_first_consonant = 0\n    var index_of_last_vowel = 0\n\
    \    var index_of_first_vowel = 0\n    var index_of_last_letter = 0\n    var index_of_first_letter\
    \ = 0\n    var index_of_last_consonant_before_vowel = 0\n    var index_of_first_consonant_after_vowel\
    \ = 0\n    var index_of_last_vowel_before_consonant = 0\n    var index_of_first_vowel_after_consonant\
    \ = 0\n    var index_of_last_letter_before_vowel = 0\n    var index_of_first_letter_after_vowel\
    \ = 0\n    var index_of_last_letter_before_consonant = 0\n    var index_of_first_letter_after_consonant\
    \ = 0\n    var index_of_last_letter_before_letter = 0\n    var index_of_first_letter_after_letter\
    \ = 0\n    var index_of_last_vowel_before_vowel = 0\n    var index_of_first_vowel_after_vowel\
    \ = 0\n    var index_of_last_consonant_before_consonant = 0\n    var index_of_first_consonant_after_consonant\
    \ = 0\n    var index_of_last_vowel_before_letter = 0\n    var index_of_first_vowel_after_letter\
    \ = 0\n    var index_of_last_consonant_before_letter = 0\n    var index_of_first_consonant_after_letter\
    \ = 0\n    var index_of_last_letter_before_vowel_or_conson", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = 0\n    var vowelIndex = 0\n   \
    \ var consonantIndex = 0\n    var vowelFound = false\n    var consonantFound =\
    \ false\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            vowelFound = true\n            vowelIndex = index\n        }\n\
    \        if consonants.containsString(String(char)) {\n            consonantFound\
    \ = true\n            consonantIndex = index\n        }\n        if vowelFound\
    \ && consonantFound {\n            if vowelIndex > consonantIndex {\n        \
    \        closestVowel = String(char)\n            }\n            vowelFound =\
    \ false\n            consonantFound = false\n        }\n        index += 1\n \
    \   }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = -1\n    var consonantIndex = -1\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelIndex = i\n        } else if consonants.contains(char) {\n            consonantIndex\
    \ = i\n        }\n        if vowelIndex != -1 && consonantIndex != -1 {\n    \
    \        if vowelIndex > consonantIndex {\n                closestVowel = char\n\
    \                break\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelFound\
    \ = false\n    var consonantFound = false\n    for i in 0..<word.count {\n   \
    \     let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            vowelFound\
    \ = true\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonantFound = true\n            consonantIndex = i\n     \
    \   }\n        if vowelFound && consonantFound {\n            if vowelIndex >\
    \ consonantIndex {\n                result = char\n                break\n   \
    \         }\n        }\n    }\n    return result", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    var vowelCount = 0\n    var consonantCount\
    \ = 0\n    var vowelArray = [Int]()\n    var consonantArray = [Int]()\n    for\
    \ (index, char) in word.lowercased().enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowelIndex = index\n            vowelCount += 1\n           \
    \ vowelArray.append(vowelIndex)\n        } else if consonants.contains(String(char))\
    \ {\n            consonantIndex = index\n            consonantCount += 1\n   \
    \         consonantArray.append(consonantIndex)\n        }\n    }\n    if vowelCount\
    \ == 0 || consonantCount == 0 {\n        return \"\"\n    }\n    for i in 0..<vowelArray.count\
    \ {\n        for j in 0..<consonantArray.count {\n            if vowelArray[i]\
    \ > consonantArray[j] {\n                if vowelArray[i] - consonantArray[j]\
    \ == 1 {\n                    result = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelArray[i])])\n                    return result\n            \
    \    }\n            }\n        }\n    }\n    return result", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel\
    \ = \"\"\n    var closest_distance = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for i in index..<word.count {\n                if consonants.contains(word[i])\
    \ {\n                    distance += 1\n                } else if vowels.contains(word[i])\
    \ {\n                    break\n                }\n            }\n           \
    \ if distance > 0 && (closest_distance == 0 || distance < closest_distance) {\n\
    \                closest_distance = distance\n                closest_vowel =\
    \ String(char)\n            }\n        }\n    }\n    return closest_vowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closest_vowel =\
    \ \"\"\n    var distance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < distance {\n     \
    \                   distance = index\n                        closest_vowel =\
    \ String(char)\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var vowel_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowel_index = index\n\
    \        }\n    }\n    if vowel_index == -1 {\n        return \"\"\n    }\n  \
    \  for (index, char) in word.enumerated() {\n        if !vowels.contains(String(char))\
    \ && index > vowel_index {\n            return String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])\n        }\n    }\n    return \"\"", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closest_vowel = \"\"\n    var distance = 0\n    for (index, char) in\
    \ word.enumerated() {\n        if consonants.contains(char) {\n            for\
    \ (i, c) in word[index..<word.count].enumerated() {\n                if vowels.contains(c)\
    \ {\n                    if distance == 0 || i < distance {\n                \
    \        distance = i\n                        closest_vowel = String(c)\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ letter) in word.enumerated() {\n        if vowels.contains(letter) {\n     \
    \       var distance = word.count - index\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(letter)\n            }\n        }\n    }\n    if closestDistance ==\
    \ word.count {\n        return \"\"\n    }\n    for (index, letter) in word.enumerated()\
    \ {\n        if consonants.contains(letter) {\n            var distance = word.count\
    \ - index\n            if distance < closestDistance {\n                return\
    \ \"\"\n            }\n        }\n    }\n    return closestVowel", "    // Write\
    \ your code here\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelIndex = i\n        }\n        if consonants.contains(char) {\n        \
    \    consonantIndex = i\n        }\n        if vowelIndex > consonantIndex {\n\
    \            closestVowel = char\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let character = word[index]\n        if vowels.contains(character)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n        }\n  \
    \      if consonants.contains(character) {\n            consonantFound = true\n\
    \            consonantIndex = i\n        }\n        if vowelFound && consonantFound\
    \ {\n            if consonantIndex - vowelIndex == 1 {\n                closestVowel\
    \ = String(character)\n            }\n            vowelFound = false\n       \
    \     consonantFound = false\n        }\n    }\n    return closestVowel", "  \
    \  let vowels = \"aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ word[word.index(word.startIndex, offsetBy: index - 1)] != \"a\" && word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"a\" {\n                    if index < closestIndex\
    \ {\n                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    let wordArray = Array(word)\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    for i in 0..<wordArray.count {\n\
    \        if vowels.contains(String(wordArray[i]).lowercased()) {\n           \
    \ vowelIndex = i\n            for j in (i+1)..<wordArray.count {\n           \
    \     if consonants.contains(String(wordArray[j]).lowercased()) {\n          \
    \          consonantIndex = j\n                    if consonantIndex - vowelIndex\
    \ < closestVowelIndex - closestConsonantIndex {\n                        closestVowel\
    \ = String(wordArray[vowelIndex])\n                        closestVowelIndex =\
    \ vowelIndex\n                        closestConsonantIndex = consonantIndex\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var closestVowel = \"\"\n    var distance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           if index < distance {\n                distance = index\n        \
    \        closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ consonants.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]).lowercased()) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowel = String(char)\n                   \
    \     closestVowelIndex = index\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices {\n     \
    \   if vowels.contains(word[i]) {\n            vowel = String(word[i])\n     \
    \       index = word.distance(from: word.startIndex, to: i)\n        }\n    }\n\
    \    if vowel == \"\" {\n        return \"\"\n    }\n    for i in stride(from:\
    \ index, to: 0, by: -1) {\n        if consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i)]) {\n            return vowel\n        }\n    }\n    return \"\"",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = word.count - 1\n    var found = false\n\
    \    while index >= 0 && !found {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            if index\
    \ < word.count - 1 {\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if vowels.contains(nextChar) {\n    \
    \                result = String(nextChar)\n                    found = true\n\
    \                }\n            }\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = 0\n    for char in word.reversed()\
    \ {\n        if vowels.contains(char) {\n            closestVowel = String(char)\n\
    \            break\n        }\n        if consonants.contains(char) {\n      \
    \      index += 1\n        }\n    }\n    if index == word.count {\n        return\
    \ \"\"\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    var vowelIndex = 0\n    var consonantIndex = 0\n    while\
    \ index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            vowelIndex = index\n\
    \        } else if consonants.contains(char) {\n            consonantIndex = index\n\
    \            break\n        }\n        index -= 1\n    }\n    if vowelIndex >\
    \ consonantIndex {\n        result = String(word[word.index(word.startIndex, offsetBy:\
    \ vowelIndex)])\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n    for\
    \ i in stride(from: word.count - 1, through: 0, by: -1) {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: i)]\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n            break\n        }\n    }\n    for\
    \ i in stride(from: vowel_index - 1, through: 0, by: -1) {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: i)]\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n            break\n        }\n    }\n  \
    \  if vowel_index > consonant_index {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n\
    \    var distance = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if consonants.contains(char) {\n            let nextIndex = word.index(word.startIndex,\
    \ offsetBy: index + 1)\n            let nextChar = word[nextIndex]\n         \
    \   if vowels.contains(nextChar) {\n                if index < distance {\n  \
    \                  distance = index\n                    closestVowel = String(nextChar)\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            result = String(char)\n \
    \           break\n        }\n        if consonants.contains(char) {\n       \
    \     index += 1\n        }\n    }\n    if index == word.characters.count {\n\
    \        return \"\"\n    }\n    return result", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    for (i, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if i != 0 && i !=\
    \ word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)])) {\n                    result = String(char)\n         \
    \           break\n                }\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var consonant = \"\"\n    var result = \"\"\n    for\
    \ char in word.characters {\n        if vowels.containsString(String(char)) {\n\
    \            vowel = String(char)\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonant = String(char)\n        }\n        if vowel != \"\"\
    \ && consonant != \"\" {\n            result = vowel\n            vowel = \"\"\
    \n            consonant = \"\"\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var index =\
    \ 0\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            if index > 0 && consonants.containsString(String(word[word.startIndex.advancedBy(index\
    \ - 1)])) {\n                if closestVowelIndex == 0 {\n                   \
    \ closestVowel = String(char)\n                    closestVowelIndex = index\n\
    \                } else if index < closestVowelIndex {\n                    closestVowel\
    \ = String(char)\n                    closestVowelIndex = index\n            \
    \    }\n            }\n        }\n        index += 1\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            vowelIndex\
    \ = index\n            for (index, char) in word.enumerated() {\n            \
    \    if consonants.contains(char) {\n                    consonantIndex = index\n\
    \                    if vowelIndex > consonantIndex && vowelIndex < closestVowelIndex\
    \ {\n                        closestVowelIndex = vowelIndex\n                \
    \        closestConsonantIndex = consonantIndex\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var\
    \ closestDistance = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            let distance = word.count - index\n\
    \            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index < closestIndex && index > 0 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]).lowercased()) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                closestVowel = String(char)\n\
    \                closestIndex = index\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var distance = 0\n    for (index, char) in\
    \ word.enumerated() {\n        if consonants.contains(char) {\n            for\
    \ (i, c) in word[index..<word.count].enumerated() {\n                if vowels.contains(c)\
    \ {\n                    if distance == 0 {\n                        distance\
    \ = i\n                        closestVowel = String(c)\n                    }\
    \ else if i < distance {\n                        distance = i\n             \
    \           closestVowel = String(c)\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for i in 0..<word.count {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if vowels.contains(char) {\n            for j\
    \ in stride(from: i, to: -1, by: -1) {\n                let index = word.index(word.startIndex,\
    \ offsetBy: j)\n                let char = String(word[index])\n             \
    \   if consonants.contains(char) {\n                    if i - j < closestDistance\
    \ {\n                        closestDistance = i - j\n                       \
    \ closestVowel = char\n                    }\n                    break\n    \
    \            }\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n\
    \    var last_vowel_index = -1\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(String(char)) {\n            last_vowel_index = index\n\
    \        }\n        if last_vowel_index != -1 && !vowels.contains(String(char))\
    \ {\n            result = String(word[word.index(word.startIndex, offsetBy: last_vowel_index)])\n\
    \            break\n        }\n    }\n    return result", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = 0\n    var consonant_index = 0\n    var vowel_count =\
    \ 0\n    var consonant_count = 0\n    var vowel_index_array = [Int]()\n    var\
    \ consonant_index_array = [Int]()\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = word[index]\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n           \
    \ vowel_index_array.append(vowel_index)\n            vowel_count += 1\n      \
    \  }\n        if consonants.contains(char) {\n            consonant_index = i\n\
    \            consonant_index_array.append(consonant_index)\n            consonant_count\
    \ += 1\n        }\n    }\n    if vowel_count == 0 || consonant_count == 0 {\n\
    \        return \"\"\n    }\n    var vowel_distance_array = [Int]()\n    for i\
    \ in 0..<vowel_index_array.count {\n        vowel_distance_array.append(vowel_index_array[i]\
    \ - consonant_index_array[consonant_index_array.count - 1])\n    }\n    var min_distance\
    \ = vowel_distance_array[0]\n    var min_distance_index = 0\n    for i in 0..<vowel_distance_array.count\
    \ {\n        if vowel_distance_array[i] < min_distance && vowel_distance_array[i]\
    \ > 0 {\n            min_distance = vowel_distance_array[i]\n            min_distance_index\
    \ = i\n        }\n    }\n    if min_distance == vowel_distance_array[0] && min_distance\
    \ > 0 {\n        let index = word.index(word.startIndex, offsetBy: vowel_index_array[min_distance_index])\n\
    \        return String(word[index])\n    }\n    return \"\"", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            result = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n            break\n        }\n        index -= 1\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var closestVowel = \"\"\n    var closestDistance = word.count\n    for (i,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           var distance = word.count - i\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n\
    \    var index = word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = char\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_found = false\n    var consonant_found = false\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowel_index =\
    \ i\n            vowel_found = true\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n            consonant_found = true\n   \
    \     }\n        if vowel_found && consonant_found {\n            if vowel_index\
    \ > consonant_index {\n                result = String(char)\n               \
    \ break\n            }\n        }\n        i -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    var is_consonant = false\n    var\
    \ is_vowel = false\n    while index >= 0 {\n        if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            if is_consonant {\n                result\
    \ = String(word[word.index(word.startIndex, offsetBy: index)])\n             \
    \   break\n            }\n            is_vowel = true\n        } else if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index)])) {\n            if is_vowel {\n                result = String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])\n                break\n            }\n            is_consonant\
    \ = true\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    var index = word.count - 1\n  \
    \  while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closest_vowel = \"\"\n    var index_of_closest_vowel = 0\n    var index_of_previous_consonant\
    \ = 0\n    var index_of_next_consonant = 0\n    for (index, letter) in word.enumerated()\
    \ {\n        if vowels.contains(letter) {\n            index_of_closest_vowel\
    \ = index\n            for (index, letter) in word.enumerated() {\n          \
    \      if consonants.contains(letter) {\n                    if index < index_of_closest_vowel\
    \ {\n                        index_of_previous_consonant = index\n           \
    \         }\n                    if index > index_of_closest_vowel {\n       \
    \                 index_of_next_consonant = index\n                        break\n\
    \                    }\n                }\n            }\n            if index_of_previous_consonant\
    \ != 0 && index_of_next_consonant != 0 {\n                if index_of_closest_vowel\
    \ - index_of_previous_consonant < index_of_next_consonant - index_of_closest_vowel\
    \ {\n                    closest_vowel = String(word[word.index(word.startIndex,\
    \ offsetBy: index_of_closest_vowel)])\n                }\n            }\n    \
    \    }\n    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            var distance = 0\n            var isVowel = false\n         \
    \   for i in index..<word.count {\n                if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)])) {\n                    isVowel = true\n                    break\n\
    \                }\n                distance += 1\n            }\n           \
    \ if !isVowel && distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var closestConsonant = \"\"\n  \
    \  var closestConsonantIndex2 = 0\n    var closestConsonant2 = \"\"\n    var closestVowelIndex2\
    \ = 0\n    var closestVowel2 = \"\"\n    var closestVowelIndex3 = 0\n    var closestVowel3\
    \ = \"\"\n    var closestConsonantIndex3 = 0\n    var closestConsonant3 = \"\"\
    \n    var closestVowelIndex4 = 0\n    var closestVowel4 = \"\"\n    var closestConsonantIndex4\
    \ = 0\n    var closestConsonant4 = \"\"\n    var closestVowelIndex5 = 0\n    var\
    \ closestVowel5 = \"\"\n    var closestConsonantIndex5 = 0\n    var closestConsonant5\
    \ = \"\"\n    var closestVowelIndex6 = 0\n    var closestVowel6 = \"\"\n    var\
    \ closestConsonantIndex6 = 0\n    var closestConsonant6 = \"\"\n    var closestVowelIndex7\
    \ = 0\n    var closestVowel7 = \"\"\n    var closestConsonantIndex7 = 0\n    var\
    \ closestConsonant7 = \"\"\n    var closestVowelIndex8 = 0\n    var closestVowel8\
    \ = \"\"\n    var closestConsonantIndex8 = 0\n    var closestConsonant8 = \"\"\
    \n    var closestVowelIndex9 = 0\n    var closestVowel9 = \"\"\n    var closestConsonantIndex9\
    \ = 0\n    var closestConsonant9 = \"\"\n    var closestVowelIndex10 = 0\n   \
    \ var closestVowel10 = \"\"\n    var closestConsonantIndex10 = 0\n    var closestConsonant10\
    \ = \"\"\n    var closestVow", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = 0\n    var\
    \ right_consonant = false\n    var left_consonant = false\n    var right_vowel\
    \ = false\n    var left_vowel = false\n    for char in word.characters {\n   \
    \     if vowels.contains(char) {\n            right_vowel = true\n           \
    \ if right_consonant && !left_vowel {\n                result = String(char)\n\
    \                break\n            }\n        } else {\n            right_consonant\
    \ = true\n            if right_vowel && !left_consonant {\n                result\
    \ = String(word[word.index(word.startIndex, offsetBy: index - 1)])\n         \
    \       break\n            }\n        }\n        index += 1\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = -1\n    var consonant_index = -1\n    var result = \"\"\
    \n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_index = i\n        }\n        if vowel_index != -1\
    \ && consonant_index != -1 && vowel_index > consonant_index {\n            result\
    \ = String(char)\n            break\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = 0\n    for char in word.reversed()\
    \ {\n        if vowels.contains(char) {\n            closestVowel = String(char)\n\
    \            break\n        }\n        if consonants.contains(char) {\n      \
    \      index += 1\n        }\n    }\n    if index == word.count {\n        return\
    \ \"\"\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var\
    \ closestVowelIndex = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if consonants.contains(char) {\n            for (i, vowel) in vowels.enumerated()\
    \ {\n                if word.contains(vowel) && word.index(of: vowel)! > index\
    \ && word.index(of: vowel)! < closestVowelIndex {\n                    closestVowel\
    \ = String(vowel)\n                    closestVowelIndex = word.index(of: vowel)!\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            if index\
    \ > 0 && consonants.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]).lowercased()) {\n                if index < word.count - 1 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                    if index < closestIndex\
    \ {\n                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestDistance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if consonants.contains(char) {\n           \
    \ let distance = word.distance(from: word.index(word.startIndex, offsetBy: index),\
    \ to: word.endIndex)\n            if distance < closestDistance {\n          \
    \      closestDistance = distance\n                closestVowel = \"\"\n     \
    \       }\n        } else if vowels.contains(char) {\n            let distance\
    \ = word.distance(from: word.index(word.startIndex, offsetBy: index), to: word.endIndex)\n\
    \            if distance == closestDistance {\n                closestVowel =\
    \ String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   var result = \"\"\n    var vowel = \"\"\n    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    let word = word.lowercased()\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           vowel = String(char)\n            if index != 0 && index != word.count\
    \ - 1 {\n                if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    result = vowel\n            \
    \        break\n                }\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var is_consonant\
    \ = false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            if is_consonant\
    \ {\n                return result\n            }\n            is_consonant =\
    \ true\n        } else if vowels.contains(char) {\n            if is_consonant\
    \ {\n                result = String(char)\n            }\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel: String = \"\"\n    var closestIndex:\
    \ Int = 0\n    var index: Int = 0\n    var isVowel: Bool = false\n    for char\
    \ in word.lowercased().reversed() {\n        if isVowel {\n            if consonants.contains(char)\
    \ {\n                closestVowel = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n                break\n            }\n        } else {\n         \
    \   if vowels.contains(char) {\n                isVowel = true\n             \
    \   closestIndex = index\n            }\n        }\n        index += 1\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var distance = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < distance {\n      \
    \                  distance = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        let charString = String(char)\n\
    \        if vowels.contains(charString) {\n            if index < closestVowelIndex\
    \ {\n                closestVowel = charString\n                closestVowelIndex\
    \ = index\n            }\n        }\n    }\n    if closestVowelIndex == word.count\
    \ {\n        return \"\"\n    }\n    var closestConsonantIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        let charString = String(char)\n\
    \        if consonants.contains(charString) {\n            if index > closestVowelIndex\
    \ && index < closestConsonantIndex {\n                closestConsonantIndex =\
    \ index\n            }\n        }\n    }\n    if closestConsonantIndex == word.count\
    \ {\n        return \"\"\n    }\n    return closestVowel", "    var vowel = \"\
    \"\n    var vowel_index = 0\n    var consonant_index = 0\n    for (index, char)\
    \ in word.enumerated() {\n        if char == \"a\" || char == \"e\" || char ==\
    \ \"i\" || char == \"o\" || char == \"u\" {\n            vowel = String(char)\n\
    \            vowel_index = index\n        }\n        if char != \"a\" && char\
    \ != \"e\" && char != \"i\" && char != \"o\" && char != \"u\" && char != \"A\"\
    \ && char != \"E\" && char != \"I\" && char != \"O\" && char != \"U\" {\n    \
    \        consonant_index = index\n        }\n    }\n    if vowel_index > consonant_index\
    \ {\n        return vowel\n    }\n    return \"\"", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var vowel_index\
    \ = -1\n    var consonant_index = -1\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n        }\n\
    \        if consonants.contains(char) {\n            consonant_index = i\n   \
    \     }\n        if vowel_index != -1 && consonant_index != -1 && vowel_index\
    \ > consonant_index {\n            result = String(word[index])\n            break\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n    \
    \    if vowels.contains(word[index]) {\n            result = String(word[index])\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   var index = word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = 0\n    var vowel_index = 0\n    var vowel_distance\
    \ = 0\n    var vowel_distance_min = 0\n    var vowel_distance_min_index = 0\n\
    \    var vowel_distance_min_index_old = 0\n    var vowel_distance_min_old = 0\n\
    \    var vowel_distance_old = 0\n    var vowel_index_old = 0\n    var vowel_index_old_old\
    \ = 0\n    var vowel_index_old_old_old = 0\n    var vowel_index_old_old_old_old\
    \ = 0\n    var vowel_index_old_old_old_old_old = 0\n    var vowel_index_old_old_old_old_old_old\
    \ = 0\n    var vowel_index_old_old_old_old_old_old_old = 0\n    var vowel_index_old_old_old_old_old_old_old_old\
    \ = 0\n    var vowel_index_old_old_old_old_old_old_old_old_old = 0\n    var vowel_index_old_old_old_old_old_old_old_old_old_old\
    \ = 0\n    var vowel_index_old_old_old_old_old_old_old_old_old_old_old = 0\n \
    \   var vowel_index_old_old_old_old_old_old_old_old_old_old_old_old = 0\n    var\
    \ vowel_index_old_old_old_old_old_old_old_old_old_old_old_old_old = 0\n    var\
    \ vowel_index_old_old_old_old_old_old_old_old_old_old_old_old_old_old = 0\n  \
    \  var vowel_index_old_old_old_old_old_old_old_old_old_old_old_old_old_old_old\
    \ = 0\n    var vowel_index_old_old_old_old_old_", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var\
    \ closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    var consonantCount\
    \ = 0\n    var vowelCount = 0\n    for (index, char) in word.lowercased().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowelCount += 1\n\
    \            if consonantCount == 1 {\n                closestVowel = String(char)\n\
    \                closestVowelIndex = index\n                closestConsonantIndex\
    \ = index - 1\n            }\n            consonantCount = 0\n        } else if\
    \ consonants.contains(String(char)) {\n            consonantCount += 1\n     \
    \   }\n    }\n    if vowelCount == 1 {\n        return \"\"\n    }\n    if closestVowelIndex\
    \ == 0 {\n        return \"\"\n    }\n    if closestVowelIndex == word.count -\
    \ 1 {\n        return \"\"\n    }\n    if closestConsonantIndex == 0 {\n     \
    \   return \"\"\n    }\n    if closestConsonantIndex == word.count - 1 {\n   \
    \     return \"\"\n    }\n    if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: closestConsonantIndex - 1)])) {\n        return \"\"\n    }\n    if\
    \ consonants.contains(String(word[word.index(word.startIndex, offsetBy: closestConsonantIndex\
    \ + 1)])) {\n        return \"\"\n    }\n    return closestVowel", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var\
    \ closestVowelDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            var distance = 0\n\
    \            for i in index..<word.count {\n                let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n                if vowels.contains(String(char)) {\n        \
    \            break\n                }\n                distance += 1\n       \
    \     }\n            if distance < closestVowelDistance {\n                closestVowelDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n \
    \   let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount\
    \ = 0\n    var consonantCount = 0\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    var vowelIndexArray = [Int]()\n    var consonantIndexArray = [Int]()\n\
    \    var vowelCountArray = [Int]()\n    var consonantCountArray = [Int]()\n  \
    \  var vowelFoundArray = [Bool]()\n    var consonantFoundArray = [Bool]()\n  \
    \  var vowelIndexArray2 = [Int]()\n    var consonantIndexArray2 = [Int]()\n  \
    \  var vowelCountArray2 = [Int]()\n    var consonantCountArray2 = [Int]()\n  \
    \  var vowelFoundArray2 = [Bool]()\n    var consonantFoundArray2 = [Bool]()\n\
    \    var vowelIndexArray3 = [Int]()\n    var consonantIndexArray3 = [Int]()\n\
    \    var vowelCountArray3 = [Int]()\n    var consonantCountArray3 = [Int]()\n\
    \    var vowelFoundArray3 = [Bool]()\n    var consonantFoundArray3 = [Bool]()\n\
    \    var vowelIndexArray4 = [Int]()\n    var consonantIndexArray4 = [Int]()\n\
    \    var vowelCountArray4 = [Int]()\n    var consonantCountArray4 = [Int]()\n\
    \    var vowelFoundArray4 = [Bool]()\n    var consonantFoundArray4 = [Bool]()\n\
    \    var vowelIndexArray5 = [Int]()\n    var consonantIndexArray5 = [Int]()\n\
    \    var vowelCountArray5 = [Int]()\n    var consonantCountArray5 = [Int]()\n\
    \    var vowelFoundArray5 = [Bool]()\n    var consonantFoundArray5 = [Bool]()\n\
    \    var vowelIndexArray6 = [Int]()\n    var consonantIndexArray6 = [Int]()\n\
    \    var vowelCount", "    var vowel: String = \"\"\n    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants: Set<Character> =\
    \ [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var\
    \ prev_char: Character = \" \"\n    var next_char: Character = \" \"\n    for\
    \ char in word.lowercased() {\n        if vowels.contains(char) {\n          \
    \  if consonants.contains(prev_char) && consonants.contains(next_char) {\n   \
    \             vowel = String(char)\n                break\n            }\n   \
    \     }\n        prev_char = char\n    }\n    return vowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result =\
    \ \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        } else if consonants.contains(char)\
    \ {\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    let wordArray\
    \ = Array(word)\n    var vowelIndex = -1\n    var consonantIndex = -1\n    for\
    \ i in 0..<wordArray.count {\n        if vowels.contains(String(wordArray[i]).lowercased())\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(String(wordArray[i]).lowercased())\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex != -1 &&\
    \ consonantIndex != -1 && vowelIndex > consonantIndex {\n            return String(wordArray[vowelIndex])\n\
    \        }\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    var\
    \ closestVowel = \"\"\n    var closestIndex = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if index\
    \ > 0 && index < word.count - 1 {\n                let prevChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(prevChar) && !vowels.contains(nextChar)\
    \ {\n                    if index < closestIndex {\n                        closestIndex\
    \ = index\n                        closestVowel = String(char)\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    let word = word.lowercased()\n    var closestVowel\
    \ = \"\"\n    var closestIndex = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > closestIndex {\n\
    \                closestVowel = String(char)\n                closestIndex = index\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    for i in stride(from: word.count - 1, through:\
    \ 0, by: -1) {\n        let index = word.index(word.startIndex, offsetBy: i)\n\
    \        let char = String(word[index])\n        if vowels.contains(char) {\n\
    \            closestVowel = char\n            break\n        }\n    }\n    for\
    \ i in stride(from: word.count - 1, through: 0, by: -1) {\n        let index =\
    \ word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if consonants.contains(char) {\n            if closestVowel != \"\" {\n\
    \                return closestVowel\n            }\n        } else {\n      \
    \      closestVowel = \"\"\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n    \
    \    let char = word[word.index(word.startIndex, offsetBy: index)]\n        if\
    \ vowels.contains(char) {\n            result = String(char)\n            break\n\
    \        } else if consonants.contains(char) {\n            break\n        }\n\
    \        index -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestIndex = 0\n    var vowelIndex = 0\n    var\
    \ consonantIndex = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = word[index]\n        if vowels.contains(character)\
    \ {\n            vowelIndex = i\n            if consonantIndex != 0 && vowelIndex\
    \ - consonantIndex < closestIndex {\n                closestIndex = vowelIndex\
    \ - consonantIndex\n                closestVowel = String(character)\n       \
    \     }\n        } else if consonants.contains(character) {\n            consonantIndex\
    \ = i\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var\
    \ vowel_index = 0\n    var consonant_index = 0\n    var index = 0\n    var vowel_found\
    \ = false\n    var consonant_found = false\n    for letter in word.reversed()\
    \ {\n        if !vowel_found && vowels.contains(String(letter)) {\n          \
    \  vowel_found = true\n            vowel_index = index\n        }\n        if\
    \ !consonant_found && consonants.contains(String(letter)) {\n            consonant_found\
    \ = true\n            consonant_index = index\n        }\n        if vowel_found\
    \ && consonant_found {\n            break\n        }\n        index += 1\n   \
    \ }\n    if vowel_found && consonant_found && vowel_index < consonant_index {\n\
    \        closest_vowel = String(word.reversed()[vowel_index])\n    }\n    return\
    \ closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_count = 0\n    var consonant_count = 0\n    for char in word.reversed()\
    \ {\n        if vowels.contains(char) {\n            vowel_count += 1\n      \
    \      if consonant_count == 1 {\n                vowel_index = word.count - vowel_count\n\
    \                break\n            }\n        } else if consonants.contains(char)\
    \ {\n            consonant_count += 1\n            if vowel_count == 1 {\n   \
    \             consonant_index = word.count - consonant_count\n               \
    \ break\n            }\n        }\n    }\n    if vowel_index > consonant_index\
    \ {\n        result = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            var leftConsonant = false\n   \
    \         var rightConsonant = false\n            for i in index+1..<word.count\
    \ {\n                let char = word[word.index(word.startIndex, offsetBy: i)]\n\
    \                if consonants.contains(char) {\n                    rightConsonant\
    \ = true\n                    break\n                }\n                distance\
    \ += 1\n            }\n            for i in stride(from: index-1, through: 0,\
    \ by: -1) {\n                let char = word[word.index(word.startIndex, offsetBy:\
    \ i)]\n                if consonants.contains(char) {\n                    leftConsonant\
    \ = true\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if leftConsonant && rightConsonant && distance\
    \ < closestDistance {\n                closestDistance = distance\n          \
    \      closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var found = false\n\
    \    while index >= 0 && !found {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            found = true\n        } else if consonants.contains(char)\
    \ {\n            index -= 1\n        } else {\n            index -= 1\n      \
    \  }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && index < word.count\
    \ - 1 {\n                if word[word.index(word.startIndex, offsetBy: index -\
    \ 1)] != \"a\" && word[word.index(word.startIndex, offsetBy: index + 1)] != \"\
    a\" {\n                    if index < closestIndex {\n                       \
    \ closestIndex = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = word.count\
    \ - index\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    var closest_vowel = \"\"\n    var\
    \ vowel_index = -1\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    let word_array = Array(word)\n    for i in 0..<word_array.count\
    \ {\n        if vowels.contains(String(word_array[i]).lowercased()) {\n      \
    \      vowel_index = i\n            break\n        }\n    }\n    if vowel_index\
    \ == -1 {\n        return closest_vowel\n    }\n    for i in (vowel_index + 1)..<word_array.count\
    \ {\n        if consonants.contains(String(word_array[i]).lowercased()) {\n  \
    \          closest_vowel = String(word_array[vowel_index])\n            break\n\
    \        }\n    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n  \
    \  var vowelIndexArray = [Int]()\n    var consonantIndexArray = [Int]()\n    for\
    \ i in 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        if vowels.contains(word[index]) {\n            vowelIndexArray.append(i)\n\
    \        } else if consonants.contains(word[index]) {\n            consonantIndexArray.append(i)\n\
    \        }\n    }\n    if vowelIndexArray.count == 0 || consonantIndexArray.count\
    \ == 0 {\n        return \"\"\n    }\n    for i in 0..<vowelIndexArray.count {\n\
    \        for j in 0..<consonantIndexArray.count {\n            if vowelIndexArray[i]\
    \ > consonantIndexArray[j] {\n                if vowelIndexArray[i] - consonantIndexArray[j]\
    \ < vowelIndex {\n                    vowelIndex = vowelIndexArray[i]\n      \
    \              consonantIndex = consonantIndexArray[j]\n                }\n  \
    \          }\n        }\n    }\n    if vowelIndex == 0 && consonantIndex == 0\
    \ {\n        return \"\"\n    }\n    let vowelIndex2 = word.index(word.startIndex,\
    \ offsetBy: vowelIndex)\n    closestVowel = String(word[vowelIndex2])\n    return\
    \ closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var index = 0\n    var found = false\n    while index\
    \ < word.count {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    result = String(char)\n      \
    \              found = true\n                    break\n                }\n  \
    \          }\n        }\n        index += 1\n    }\n    if !found {\n        result\
    \ = \"\"\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var currentVowelIndex = 0\n    var\
    \ currentConsonantIndex = 0\n    var currentVowel = \"\"\n    var currentConsonant\
    \ = \"\"\n    var word = word.lowercased()\n    for i in 0..<word.count {\n  \
    \      let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if vowels.contains(char) {\n            currentVowel\
    \ = char\n            currentVowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            currentConsonant = char\n            currentConsonantIndex =\
    \ i\n        }\n        if currentVowel != \"\" && currentConsonant != \"\" {\n\
    \            if currentVowelIndex > closestVowelIndex && currentConsonantIndex\
    \ > closestConsonantIndex {\n                closestVowel = currentVowel\n   \
    \             closestVowelIndex = currentVowelIndex\n                closestConsonantIndex\
    \ = currentConsonantIndex\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = word.count - 1\n    var vowel_index = 0\n\
    \    var consonant_index = 0\n    var vowel_index_found = false\n    var consonant_index_found\
    \ = false\n    while index >= 0 {\n        if !vowel_index_found {\n         \
    \   vowel_index = vowels.index(of: word[index]) ?? -1\n            if vowel_index\
    \ != -1 {\n                vowel_index_found = true\n            }\n        }\n\
    \        if !consonant_index_found {\n            consonant_index = consonants.index(of:\
    \ word[index]) ?? -1\n            if consonant_index != -1 {\n               \
    \ consonant_index_found = true\n            }\n        }\n        if vowel_index_found\
    \ && consonant_index_found {\n            result = String(word[index])\n     \
    \       break\n        }\n        index -= 1\n    }\n    return result", "   \
    \ let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var distance = 0\n    for (index, char) in\
    \ word.enumerated() {\n        if vowels.contains(char) {\n            let start\
    \ = word.index(word.startIndex, offsetBy: index)\n            let end = word.index(word.startIndex,\
    \ offsetBy: index + 1)\n            let substring = word[start..<end]\n      \
    \      if consonants.contains(word[word.index(before: start)]) && consonants.contains(word[word.index(after:\
    \ end)]) {\n                if distance == 0 {\n                    distance =\
    \ index\n                    closestVowel = String(substring)\n              \
    \  } else if index < distance {\n                    distance = index\n      \
    \              closestVowel = String(substring)\n                }\n         \
    \   }\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var i = word.count - 1\n\
    \    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n        i -= 1\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var vowel_index = -1\n    for (index, char) in word.reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowel_index = word.count\
    \ - index - 1\n            break\n        }\n    }\n    if vowel_index == -1 {\n\
    \        return \"\"\n    }\n    for (index, char) in word.reversed().enumerated()\
    \ {\n        if index > vowel_index {\n            if !vowels.contains(String(char))\
    \ {\n                return String(word[word.index(word.startIndex, offsetBy:\
    \ vowel_index)])\n            }\n        }\n    }\n    return \"\"", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ closestVowel = \"\"\n    var closestDistance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if consonants.contains(char) {\n           \
    \ for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ && index2 > index {\n                    if index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"AEIOUaeiou\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_index = i\n        }\n        if vowel_index != -1\
    \ && consonant_index != -1 {\n            if consonant_index - vowel_index > 1\
    \ {\n                result = String(char)\n            }\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\n  \
    \  var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            let distance = word.count\
    \ - index\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n \
    \   let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index\
    \ = -1\n    var consonant_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowel_index = index\n   \
    \     }\n        if consonants.contains(char) {\n            consonant_index =\
    \ index\n        }\n        if vowel_index != -1 && consonant_index != -1 {\n\
    \            if vowel_index > consonant_index {\n                return String(char)\n\
    \            }\n        }\n    }\n    return \"\"", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel: String = \"\"\n    var closestIndex:\
    \ Int = 0\n    var index: Int = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestIndex = index\n        }\n        index += 1\n    }\n    if\
    \ closestIndex == 0 {\n        return \"\"\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var last_consonant = \"\"\n    var last_vowel = \"\
    \"\n    for char in word {\n        if vowels.contains(char) {\n            last_vowel\
    \ = String(char)\n        } else if consonants.contains(char) {\n            last_consonant\
    \ = String(char)\n        }\n        if last_consonant != \"\" && last_vowel !=\
    \ \"\" {\n            result = last_vowel\n            break\n        }\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           if index > 0 && index < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowelIndex = index\n                     \
    \   closestVowel = String(char)\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var vowelIndex\
    \ = -1\n    var consonantIndex = -1\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        } else if consonants.contains(char)\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex != -1\
    \ && consonantIndex != -1 {\n            if vowelIndex > consonantIndex {\n  \
    \              closestVowel = String(char)\n                break\n          \
    \  }\n        }\n        index -= 1\n    }\n    return closestVowel", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n\
    \    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index < closestVowelIndex\
    \ {\n                closestVowelIndex = index\n                closestVowel =\
    \ String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (vowelIndex, vowel) in word[index..<word.count].enumerated()\
    \ {\n                if vowels.contains(vowel) {\n                    if vowelIndex\
    \ < closestVowelIndex {\n                        closestVowelIndex = vowelIndex\n\
    \                        closestVowel = String(vowel)\n                    }\n\
    \                    break\n                }\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n  \
    \  var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            break\n\
    \        }\n        index -= 1\n    }\n    if index < 0 {\n        return result\n\
    \    }\n    index -= 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var prev = \"\"\n    var next = \"\"\n    for i in\
    \ word.indices {\n        if vowels.contains(word[i]) {\n            if prev !=\
    \ \"\" && next != \"\" {\n                result = word[i]\n                break\n\
    \            }\n        } else if consonants.contains(word[i]) {\n           \
    \ if prev == \"\" {\n                prev = word[i]\n            } else {\n  \
    \              next = word[i]\n            }\n        }\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if word[word.index(word.startIndex, offsetBy:\
    \ index - 1)] != \"a\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index - 1)] != \"e\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index - 1)] != \"i\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index - 1)] != \"o\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index - 1)] != \"u\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"a\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"e\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"i\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"o\" &&\n                    word[word.index(word.startIndex,\
    \ offsetBy: index + 1)] != \"u\" {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowelIndex = index\n                     \
    \   closestVowel = String(char)\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.reversed().enumerated() {\n    \
    \    if vowels.contains(String(char)) {\n            if index < closestIndex {\n\
    \                closestIndex = index\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel =\
    \ \"\"\n    var closest_distance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            var\
    \ distance = 0\n            var left_consonant = false\n            var right_consonant\
    \ = false\n            for i in index..<word.count {\n                if consonants.contains(String(Array(word)[i]).lowercased())\
    \ {\n                    distance += 1\n                    right_consonant =\
    \ true\n                } else {\n                    break\n                }\n\
    \            }\n            for i in (0..<index).reversed() {\n              \
    \  if consonants.contains(String(Array(word)[i]).lowercased()) {\n           \
    \         distance += 1\n                    left_consonant = true\n         \
    \       } else {\n                    break\n                }\n            }\n\
    \            if left_consonant && right_consonant && distance < closest_distance\
    \ {\n                closest_distance = distance\n                closest_vowel\
    \ = String(char)\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestIndex = 0\n    for (index, char) in word.reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestIndex = index\n            break\n        }\n    }\n    for\
    \ (index, char) in word.reversed().enumerated() {\n        if vowels.contains(String(char))\
    \ && index < closestIndex {\n            closestVowel = String(char)\n       \
    \     closestIndex = index\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    while index >= 0 {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        } else if consonants.contains(char)\
    \ {\n            consonantIndex = index\n            break\n        }\n      \
    \  index -= 1\n    }\n    if vowelIndex > consonantIndex {\n        closestVowel\
    \ = String(word[word.index(word.startIndex, offsetBy: vowelIndex)])\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    let word = word.lowercased()\n    var result = \"\
    \"\n    var index = word.count - 1\n    while index >= 0 {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = char.uppercased()\n            break\n        }\n  \
    \      if consonants.contains(char) {\n            break\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closest_vowel = \"\
    \"\n    var index = word.count - 1\n    var prev_char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n    var curr_char = \"\"\n    while index > 0 {\n       \
    \ curr_char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(curr_char)\
    \ {\n            if consonants.contains(prev_char) {\n                closest_vowel\
    \ = String(curr_char)\n                break\n            }\n        }\n     \
    \   prev_char = curr_char\n        index -= 1\n    }\n    return closest_vowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                let previousChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(String(previousChar))\
    \ && !vowels.contains(String(nextChar)) {\n                    if index < closestIndex\
    \ {\n                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_distance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            for i in index..<word.count {\n                if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)]).lowercased()) {\n                    if i - index < closest_distance\
    \ {\n                        closest_distance = i - index\n                  \
    \      closest_vowel = String(word[word.index(word.startIndex, offsetBy: i)])\n\
    \                    }\n                    break\n                }\n       \
    \     }\n        }\n    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var lastConsonant = \"\"\n    var lastVowel = \"\"\n\
    \    for char in word {\n        if vowels.contains(char) {\n            lastVowel\
    \ = String(char)\n            if lastConsonant != \"\" {\n                closestVowel\
    \ = lastVowel\n            }\n        } else if consonants.contains(char) {\n\
    \            lastConsonant = String(char)\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestIndex {\n \
    \                       closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var distance = word.count\n    for (index, char) in\
    \ word.enumerated() {\n        if vowels.contains(char) {\n            var leftConsonant\
    \ = false\n            var rightConsonant = false\n            if index > 0 {\n\
    \                let leftChar = word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]\n                leftConsonant = consonants.contains(leftChar)\n     \
    \       }\n            if index < word.count - 1 {\n                let rightChar\
    \ = word[word.index(word.startIndex, offsetBy: index + 1)]\n                rightConsonant\
    \ = consonants.contains(rightChar)\n            }\n            if leftConsonant\
    \ && rightConsonant {\n                if index < distance {\n               \
    \     distance = index\n                    closestVowel = String(char)\n    \
    \            }\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestDistance = Int.max\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   let distance = word.distance(from: word.startIndex, to: word.index(word.startIndex,\
    \ offsetBy: index))\n            if distance < closestDistance {\n           \
    \     closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    if closestDistance == Int.max {\n      \
    \  return \"\"\n    }\n    for (index, char) in word.enumerated() {\n        if\
    \ consonants.contains(char) {\n            let distance = word.distance(from:\
    \ word.startIndex, to: word.index(word.startIndex, offsetBy: index))\n       \
    \     if distance > closestDistance {\n                return closestVowel\n \
    \           }\n        }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = 0\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowel\
    \ = \"\"\n    var consonant = \"\"\n    var vowelCount = 0\n    var consonantCount\
    \ = 0\n    var vowelIndexArray = [Int]()\n    var consonantIndexArray = [Int]()\n\
    \    for char in word {\n        for vowelChar in vowels {\n            if char\
    \ == vowelChar {\n                vowel = String(char)\n                vowelIndex\
    \ = index\n                vowelCount += 1\n                vowelIndexArray.append(vowelIndex)\n\
    \            }\n        }\n        for consonantChar in consonants {\n       \
    \     if char == consonantChar {\n                consonant = String(char)\n \
    \               consonantIndex = index\n                consonantCount += 1\n\
    \                consonantIndexArray.append(consonantIndex)\n            }\n \
    \       }\n        index += 1\n    }\n    if vowelCount == 0 || consonantCount\
    \ == 0 {\n        return \"\"\n    }\n    for i in 0..<vowelIndexArray.count {\n\
    \        for j in 0..<consonantIndexArray.count {\n            if vowelIndexArray[i]\
    \ > consonantIndexArray[j] {\n                if vowelIndexArray[i] - consonantIndexArray[j]\
    \ == 1 {\n                    return vowel\n                }\n            }\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if consonants.contains(char)\
    \ {\n            for i in index..<word.count {\n                if vowels.contains(word[i])\
    \ {\n                    if i < closestVowelIndex {\n                        closestVowelIndex\
    \ = i\n                        closestVowel = String(word[i])\n              \
    \      }\n                    break\n                }\n            }\n      \
    \  }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   vowelIndex = index\n        }\n        if consonants.contains(char) {\n  \
    \          consonantIndex = index\n        }\n        if vowelIndex != -1 && consonantIndex\
    \ != -1 && vowelIndex > consonantIndex {\n            closestVowel = String(char)\n\
    \            break\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelIndex = i\n        }\n        if consonants.contains(char) {\n        \
    \    consonantIndex = i\n        }\n        if vowelIndex != -1 && consonantIndex\
    \ != -1 && vowelIndex < consonantIndex {\n            closestVowel = char\n  \
    \          break\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var\
    \ distance = word.count\n    for (index, char) in word.enumerated() {\n      \
    \  if vowels.contains(String(char)) {\n            let leftDistance = index -\
    \ word.startIndex.encodedOffset\n            let rightDistance = word.endIndex.encodedOffset\
    \ - index\n            if leftDistance > 0 && rightDistance > 0 {\n          \
    \      if leftDistance < rightDistance && leftDistance < distance {\n        \
    \            distance = leftDistance\n                    closestVowel = String(char)\n\
    \                } else if rightDistance < leftDistance && rightDistance < distance\
    \ {\n                    distance = rightDistance\n                    closestVowel\
    \ = String(char)\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var closestVowel = \"\"\n    var closestIndex = 0\n    var index\
    \ = 0\n    var foundVowel = false\n    var foundConsonant = false\n    for letter\
    \ in word.lowercased() {\n        if vowels.contains(String(letter)) {\n     \
    \       foundVowel = true\n            closestVowel = String(letter)\n       \
    \     closestIndex = index\n        } else if consonants.contains(String(letter))\
    \ && foundVowel {\n            foundConsonant = true\n            break\n    \
    \    }\n        index += 1\n    }\n    if foundVowel && foundConsonant {\n   \
    \     return closestVowel\n    } else {\n        return \"\"\n    }", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if !vowels.contains(word[i]) {\n                    distance\
    \ += 1\n                } else {\n                    break\n                }\n\
    \            }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n \
    \   let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result\
    \ = \"\"\n    var i = word.count - 1\n    while i >= 0 {\n        if vowels.contains(word[i])\
    \ {\n            result = String(word[i])\n            break\n        }\n    \
    \    i -= 1\n    }\n    if result == \"\" {\n        return result\n    }\n  \
    \  i -= 1\n    while i >= 0 {\n        if consonants.contains(word[i]) {\n   \
    \         return result\n        }\n        i -= 1\n    }\n    return \"\"", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            vowel = String(char)\n  \
    \          break\n        }\n        index += 1\n    }\n    if index == 0 {\n\
    \        return \"\"\n    }\n    for char in word.characters.reversed() {\n  \
    \      if consonants.contains(char) {\n            return vowel\n        }\n \
    \       index -= 1\n        if index == 0 {\n            return \"\"\n       \
    \ }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            result\
    \ = \"\"\n        } else if vowels.contains(char) {\n            result = String(char)\n\
    \        }\n        if result != \"\" {\n            break\n        }\n      \
    \  index -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n \
    \   let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestVowelIndex {\n\
    \                        closestVowel = String(char)\n                       \
    \ closestVowelIndex = index\n                    }\n                }\n      \
    \      }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    var result = \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        } else {\n            consonantIndex\
    \ = index\n        }\n        if vowelIndex != -1 && consonantIndex != -1 {\n\
    \            if consonantIndex - vowelIndex > 1 {\n                result = String(char)\n\
    \            }\n            vowelIndex = -1\n            consonantIndex = -1\n\
    \        }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n    var\
    \ prev = \"\"\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if prev\
    \ != \"\" {\n                result = char\n                break\n          \
    \  }\n        } else {\n            prev = char\n        }\n        index -= 1\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for\
    \ (i, c) in word.enumerated() {\n        if vowels.contains(String(c)) {\n   \
    \         var distance = 0\n            for j in (i+1)..<word.count {\n      \
    \          if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ j)])) {\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if distance < closestDistance {\n         \
    \       closestDistance = distance\n                closestVowel = String(c)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel\
    \ = \"\"\n    var closest_distance = word.count\n    for (i, c) in word.enumerated()\
    \ {\n        if vowels.contains(c) {\n            var distance = word.count\n\
    \            if i > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i - 1)]) {\n                distance = i\n            }\n        \
    \    if i < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)]) {\n                distance = word.count - i - 1\n      \
    \      }\n            if distance < closest_distance {\n                closest_distance\
    \ = distance\n                closest_vowel = String(c)\n            }\n     \
    \   }\n    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index\
    \ = -1\n    var consonant_index = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowel_index = index\n   \
    \     }\n        if consonants.contains(char) {\n            consonant_index =\
    \ index\n        }\n        if vowel_index != -1 && consonant_index != -1 {\n\
    \            break\n        }\n    }\n    if vowel_index == -1 || consonant_index\
    \ == -1 {\n        return \"\"\n    }\n    if vowel_index > consonant_index {\n\
    \        return \"\"\n    }\n    return String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            vowel_index = index\n       \
    \ }\n        if consonants.contains(char) {\n            consonant_index = index\n\
    \        }\n        if vowel_index != -1 && consonant_index != -1 {\n        \
    \    if vowel_index > consonant_index {\n                return String(char)\n\
    \            }\n        }\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    var previous_is_consonant\
    \ = false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            if previous_is_consonant\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        } else if consonants.contains(char) {\n            previous_is_consonant\
    \ = true\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let letter = String(word[index])\n        if vowels.contains(letter)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n        }\n  \
    \      if consonants.contains(letter) && vowelFound {\n            consonantFound\
    \ = true\n            consonantIndex = i\n        }\n        if consonantFound\
    \ && vowelFound {\n            closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n            break\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var index = word.count - 1\n    while index >= 0 {\n        let char =\
    \ String(word[word.index(word.startIndex, offsetBy: index)])\n        if vowels.contains(char)\
    \ {\n            closestVowel = char\n            break\n        }\n        index\
    \ -= 1\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closest_vowel\
    \ = \"\"\n    var index = 0\n    for char in word.characters.reversed() {\n  \
    \      if vowels.contains(char) {\n            closest_vowel = String(char)\n\
    \            break\n        }\n        if consonants.contains(char) {\n      \
    \      index += 1\n        }\n    }\n    if index < 2 {\n        return \"\"\n\
    \    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestVowelIndex = 0\n    var currentVowelIndex = 0\n    var currentConsonantIndex\
    \ = 0\n    var currentConsonantIndex2 = 0\n    var currentVowel = \"\"\n    var\
    \ currentConsonant = \"\"\n    var currentConsonant2 = \"\"\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            currentVowel\
    \ = String(char)\n            currentVowelIndex = i\n            if currentConsonantIndex\
    \ != 0 && currentConsonantIndex2 != 0 {\n                if currentVowelIndex\
    \ > currentConsonantIndex && currentVowelIndex < currentConsonantIndex2 {\n  \
    \                  if closestVowelIndex == 0 {\n                        closestVowel\
    \ = currentVowel\n                        closestVowelIndex = currentVowelIndex\n\
    \                    } else if closestVowelIndex > currentVowelIndex {\n     \
    \                   closestVowel = currentVowel\n                        closestVowelIndex\
    \ = currentVowelIndex\n                    }\n                }\n            }\n\
    \        } else if consonants.contains(char) {\n            currentConsonant =\
    \ String(char)\n            currentConsonantIndex = i\n            if currentConsonantIndex2\
    \ != 0 {\n                if currentVowelIndex > currentConsonantIndex && currentVowelIndex\
    \ < currentConsonantIndex2 {\n                    if closestVowelIndex == 0 {\n\
    \                        closestVowel = currentVowel\n                       \
    \ closestVowelIndex = currentVowelIndex\n                    } else if closestVowelIndex\
    \ > currentVowelIndex {\n                        closestVowel = currentVowel\n\
    \                        closestVowelIndex = currentVowelIndex\n             \
    \       }\n                }\n            }\n        }\n        currentConsonant2\
    \ = currentConsonant\n        currentConsonant", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n  \
    \  var vowelFound = false\n    var consonantFound = false\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelFound = true\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonantFound = true\n            consonantIndex = i\n     \
    \   }\n        if vowelFound && consonantFound {\n            if vowelIndex >\
    \ consonantIndex {\n                closestVowel = char\n            }\n     \
    \       vowelFound = false\n            consonantFound = false\n        }\n  \
    \  }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var closest_vowel = \"\"\n    var distance = word.count\n    for\
    \ (i, char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n\
    \            var left_consonant = false\n            var right_consonant = false\n\
    \            if i > 0 {\n                let left_char = word[word.index(word.startIndex,\
    \ offsetBy: i - 1)]\n                left_consonant = !vowels.contains(String(left_char))\n\
    \            }\n            if i < word.count - 1 {\n                let right_char\
    \ = word[word.index(word.startIndex, offsetBy: i + 1)]\n                right_consonant\
    \ = !vowels.contains(String(right_char))\n            }\n            if left_consonant\
    \ && right_consonant {\n                if i < distance {\n                  \
    \  distance = i\n                    closest_vowel = String(char)\n          \
    \      }\n            }\n        }\n    }\n    return closest_vowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices {\n     \
    \   if consonants.contains(word[i]) {\n            index = word.distance(from:\
    \ word.startIndex, to: i)\n            break\n        }\n    }\n    for i in word.indices\
    \ {\n        if vowels.contains(word[i]) {\n            if word.distance(from:\
    \ word.startIndex, to: i) > index {\n                vowel = String(word[i])\n\
    \                break\n            }\n        }\n    }\n    return vowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) {\n                if index < closestVowelIndex {\n\
    \                    closestVowel = String(char)\n                    closestVowelIndex\
    \ = index\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if consonants.contains(word[word.index(word.startIndex, offsetBy: index -\
    \ 1)]) && consonants.contains(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)]) {\n                if index < closestIndex {\n                    closestIndex\
    \ = index\n                    closestVowel = String(char)\n                }\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestVowelIndex = -1\n    var closestConsonantIndex = -1\n \
    \   for (index, char) in word.lowercased().reversed().enumerated() {\n       \
    \ if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ && closestVowelIndex != -1 {\n            closestConsonantIndex = index\n  \
    \          break\n        }\n    }\n    if closestVowelIndex != -1 && closestConsonantIndex\
    \ != -1 && closestVowelIndex > closestConsonantIndex {\n        return closestVowel\n\
    \    }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_index = -1\n    var consonant_index\
    \ = -1\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowel_index = index\n        } else {\n            consonant_index\
    \ = index\n        }\n        if vowel_index != -1 && consonant_index != -1 {\n\
    \            break\n        }\n    }\n    if vowel_index == -1 || consonant_index\
    \ == -1 {\n        return \"\"\n    }\n    return String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    for i in 0..<word.count {\n    \
    \    let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            vowelIndex\
    \ = i\n            for j in (0..<i).reversed() {\n                let index =\
    \ word.index(word.startIndex, offsetBy: j)\n                let char = String(word[index])\n\
    \                if consonants.contains(char) {\n                    consonantIndex\
    \ = j\n                    if vowelIndex - consonantIndex > closestVowelIndex\
    \ - closestConsonantIndex {\n                        closestVowelIndex = vowelIndex\n\
    \                        closestConsonantIndex = consonantIndex\n            \
    \            closestVowel = char\n                    }\n                    break\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowel\
    \ = \"\"\n    var consonant = \"\"\n    var result = \"\"\n    for char in word.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            vowel = String(char)\n\
    \        }\n        if consonants.contains(String(char)) {\n            consonant\
    \ = String(char)\n            break\n        }\n    }\n    if vowel != \"\" &&\
    \ consonant != \"\" {\n        result = vowel\n    }\n    return result", "  \
    \  let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closest_vowel = \"\"\n    var closest_vowel_index = 0\n    var consonant_index\
    \ = 0\n    var vowel_index = 0\n    var vowel_found = false\n    var consonant_found\
    \ = false\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_found = true\n            vowel_index = i\n        }\n\
    \        if consonants.contains(char) {\n            consonant_found = true\n\
    \            consonant_index = i\n        }\n        if vowel_found && consonant_found\
    \ {\n            if vowel_index > consonant_index {\n                if closest_vowel_index\
    \ == 0 {\n                    closest_vowel_index = vowel_index\n            \
    \        closest_vowel = char\n                } else if vowel_index < closest_vowel_index\
    \ {\n                    closest_vowel_index = vowel_index\n                 \
    \   closest_vowel = char\n                }\n            }\n            vowel_found\
    \ = false\n            consonant_found = false\n        }\n    }\n    return closest_vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestIndex = 0\n    var index = 0\n \
    \   for letter in word.reversed() {\n        if vowels.contains(letter) {\n  \
    \          closestVowel = String(letter)\n            closestIndex = index\n \
    \       } else if consonants.contains(letter) {\n            if closestVowel !=\
    \ \"\" {\n                if index - closestIndex == 1 {\n                   \
    \ return closestVowel\n                }\n            }\n        }\n        index\
    \ += 1\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var index = 0\n    for i in word.indices {\n        if vowels.contains(word[i])\
    \ {\n            vowel = String(word[i])\n            index = word.distance(from:\
    \ word.startIndex, to: i)\n        }\n    }\n    if vowel == \"\" {\n        return\
    \ \"\"\n    }\n    for i in stride(from: index, to: 0, by: -1) {\n        if consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i)]) {\n            return vowel\n        }\n    }\n    return \"\"",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if vowels.contains(char) {\n            result = String(char)\n      \
    \      break\n        }\n        if consonants.contains(char) {\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = \"\
    aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.count - 1 {\n                let\
    \ prevChar = word[word.index(word.startIndex, offsetBy: index - 1)]\n        \
    \        let nextChar = word[word.index(word.startIndex, offsetBy: index + 1)]\n\
    \                if !vowels.contains(prevChar) && !vowels.contains(nextChar) {\n\
    \                    if index < closestIndex {\n                        closestIndex\
    \ = index\n                        closestVowel = String(char)\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var i = word.count - 1\n    while i >= 0 {\n    \
    \    let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            result\
    \ = char\n            break\n        }\n        if consonants.contains(char) {\n\
    \            break\n        }\n        i -= 1\n    }\n    return result", "  \
    \  let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ stride(from: word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if consonants.contains(char)\
    \ {\n            consonantFound = true\n            consonantIndex = i\n     \
    \   }\n        if vowels.contains(char) {\n            vowelFound = true\n   \
    \         vowelIndex = i\n        }\n        if vowelFound && consonantFound {\n\
    \            if vowelIndex > consonantIndex {\n                closestVowel =\
    \ String(char)\n            }\n            break\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var\
    \ closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           if index < closestVowelIndex {\n                closestVowelIndex\
    \ = index\n                closestVowel = String(char)\n            }\n      \
    \  }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var result = \"\"\n    var index = 0\n    var isVowel = false\n\
    \    for char in word.reversed() {\n        if vowels.contains(String(char)) {\n\
    \            if isVowel {\n                break\n            }\n            result\
    \ = String(char)\n            isVowel = true\n        } else {\n            isVowel\
    \ = false\n        }\n        index += 1\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n    var\
    \ vowel_distance = 0\n    var consonant_distance = 0\n    var distance = 0\n \
    \   for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n            vowel_distance = word.count - vowel_index\n\
    \            distance = vowel_distance - consonant_distance\n            if distance\
    \ > 0 {\n                result = char\n            }\n        } else if consonants.contains(char)\
    \ {\n            consonant_index = i\n            consonant_distance = word.count\
    \ - consonant_index\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index < closestIndex {\n                closestIndex = index\n\
    \                closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count - 1\n\
    \    while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        } else if consonants.contains(char) {\n          \
    \  break\n        }\n        index -= 1\n    }\n    return result", "    var vowel\
    \ = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var wordArray = Array(word)\n    var wordArrayReversed = wordArray.reversed()\n\
    \    var wordArrayReversedString = String(wordArrayReversed)\n    var wordArrayReversedStringArray\
    \ = Array(wordArrayReversedString)\n    var wordArrayReversedStringArrayReversed\
    \ = wordArrayReversedStringArray.reversed()\n    var wordArrayReversedStringArrayReversedString\
    \ = String(wordArrayReversedStringArrayReversed)\n    var wordArrayReversedStringArrayReversedStringArray\
    \ = Array(wordArrayReversedStringArrayReversedString)\n    var wordArrayReversedStringArrayReversedStringArrayReversed\
    \ = wordArrayReversedStringArrayReversedStringArray.reversed()\n    var wordArrayReversedStringArrayReversedStringArrayReversedString\
    \ = String(wordArrayReversedStringArrayReversedStringArrayReversed)\n    var wordArrayReversedStringArrayReversedStringArrayReversedStringArray\
    \ = Array(wordArrayReversedStringArrayReversedStringArrayReversedString)\n   \
    \ var wordArrayReversedStringArrayReversedStringArrayReversedStringArrayReversed\
    \ = wordArrayReversedStringArrayReversedStringArrayReversedStringArray.reversed()\n\
    \    var wordArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedString\
    \ = String(wordArrayReversedStringArrayReversedStringArrayReversedStringArrayReversed)\n\
    \    var wordArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedStringArray\
    \ = Array(wordArrayReversedStringArrayReversedStringArrayReversedStringArrayReversedString)\n\
    \    var wordArrayReversedStringArray", "    let vowels = \"aeiouAEIOU\"\n   \
    \ var closest_vowel = \"\"\n    var distance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if index\
    \ > 0 && index < word.count - 1 {\n                let left_char = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let right_char = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(left_char) && !vowels.contains(right_char)\
    \ {\n                    if index < distance {\n                        distance\
    \ = index\n                        closest_vowel = String(char)\n            \
    \        }\n                }\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    for i in word.indices {\n        let char = word[i]\n\
    \        if vowels.contains(char) {\n            if i != word.startIndex {\n \
    \               let prevChar = word[word.index(before: i)]\n                if\
    \ consonants.contains(prevChar) {\n                    if i != word.index(before:\
    \ word.endIndex) {\n                        let nextChar = word[word.index(after:\
    \ i)]\n                        if consonants.contains(nextChar) {\n          \
    \                  result = String(char)\n                            break\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = word.count\n    for (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    if index < closestVowelIndex {\n            \
    \            closestVowelIndex = index\n                        closestVowel =\
    \ String(letter)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ vowel_index = 0\n    var consonant_index = 0\n    var vowel_distance = 0\n \
    \   var consonant_distance = 0\n    var closest_vowel = \"\"\n    for char in\
    \ word.characters {\n        if vowels.containsString(String(char)) {\n      \
    \      vowel_index = word.characters.indexOf(char)!\n            vowel_distance\
    \ = word.characters.count - vowel_index\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonant_index = word.characters.indexOf(char)!\n          \
    \  consonant_distance = word.characters.count - consonant_index\n            if\
    \ vowel_distance > 0 && consonant_distance > 0 && vowel_distance < consonant_distance\
    \ {\n                closest_vowel = String(char)\n            }\n        }\n\
    \    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var vowel = \"\"\n    var consonant = \"\"\n  \
    \  var closestVowel = \"\"\n    var closestConsonant = \"\"\n    var closestVowelIndex\
    \ = word.count\n    var closestConsonantIndex = word.count\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let letter = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(letter)) {\n          \
    \  vowel = String(letter)\n            if consonant != \"\" {\n              \
    \  if index > closestConsonantIndex {\n                    closestVowel = vowel\n\
    \                    closestConsonant = consonant\n                    closestVowelIndex\
    \ = index\n                    closestConsonantIndex = closestConsonantIndex\n\
    \                }\n            }\n        } else if consonants.contains(String(letter))\
    \ {\n            consonant = String(letter)\n            if vowel != \"\" {\n\
    \                if index < closestVowelIndex {\n                    closestVowel\
    \ = vowel\n                    closestConsonant = consonant\n                \
    \    closestVowelIndex = index\n                    closestConsonantIndex = closestConsonantIndex\n\
    \                }\n            }\n        }\n        index -= 1\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var\
    \ closestVowel = \"\"\n    var closestDistance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(String(char)) {\n       \
    \     var distance = 0\n            for i in index..<word.count {\n          \
    \      if vowels.contains(String(word[word.index(word.startIndex, offsetBy: i)]))\
    \ {\n                    break\n                }\n                distance +=\
    \ 1\n            }\n            if distance < closestDistance {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowel = \"\"\n \
    \   var consonant = \"\"\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    for i in 0..<word.count {\n    \
    \    let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            vowel =\
    \ char\n            vowelIndex = i\n            if consonantIndex != 0 {\n   \
    \             if vowelIndex - consonantIndex < closestVowelIndex - closestConsonantIndex\
    \ {\n                    closestVowel = vowel\n                    closestVowelIndex\
    \ = vowelIndex\n                    closestConsonantIndex = consonantIndex\n \
    \               }\n            }\n        } else if consonants.contains(char)\
    \ {\n            consonant = char\n            consonantIndex = i\n        }\n\
    \    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            let distance = word.count\
    \ - index\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n  \
    \  while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var index = 0\n    var foundVowel = false\n    for char in word.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            foundVowel = true\n            break\n        }\n        index +=\
    \ 1\n    }\n    if foundVowel {\n        let startIndex = word.index(word.endIndex,\
    \ offsetBy: -index)\n        let endIndex = word.index(word.endIndex, offsetBy:\
    \ -(index - 1))\n        let range = startIndex..<endIndex\n        let substring\
    \ = word[range]\n        if !vowels.contains(String(substring)) {\n          \
    \  return closestVowel\n        }\n    }\n    return \"\"", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_index = -1\n    for (index,\
    \ char) in word.lowercased().reversed().enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowel_index = index\n            break\n        }\n    }\n  \
    \  if vowel_index == -1 {\n        return \"\"\n    }\n    var consonant_index\
    \ = -1\n    for (index, char) in word.lowercased().reversed().enumerated() {\n\
    \        if !vowels.contains(String(char)) && index > vowel_index {\n        \
    \    consonant_index = index\n            break\n        }\n    }\n    if consonant_index\
    \ == -1 {\n        return \"\"\n    }\n    return String(word[word.index(word.endIndex,\
    \ offsetBy: -(vowel_index + 1))])", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ vowel = \"\"\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel = char\n        } else if consonants.contains(char) {\n\
    \            if vowel != \"\" {\n                return vowel\n            }\n\
    \        }\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount\
    \ = 0\n    var consonantCount = 0\n    var index = 0\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            vowelCount\
    \ += 1\n            vowelIndex = index\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonantCount += 1\n            consonantIndex = index\n   \
    \     }\n        index += 1\n    }\n    if vowelCount == 0 || consonantCount ==\
    \ 0 {\n        return \"\"\n    }\n    if vowelCount == 1 && consonantCount ==\
    \ 1 {\n        return \"\"\n    }\n    if vowelCount == 1 && consonantCount >\
    \ 1 {\n        if vowelIndex > consonantIndex {\n            return \"\"\n   \
    \     }\n    }\n    if vowelCount > 1 && consonantCount == 1 {\n        if consonantIndex\
    \ > vowelIndex {\n            return \"\"\n        }\n    }\n    if vowelCount\
    \ > 1 && consonantCount > 1 {\n        if vowelIndex > consonantIndex {\n    \
    \        return \"\"\n        }\n    }\n    for char in word.characters {\n  \
    \      if vowels.containsString(String(char)) {\n            closestVowel = String(char)\n\
    \        }\n        if consonants.containsString(String(char)) {\n           \
    \ return closestVowel\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var foundConsonant\
    \ = false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if foundConsonant {\n            if vowels.contains(char)\
    \ {\n                closestVowel = String(char)\n                break\n    \
    \        }\n        } else {\n            if consonants.contains(char) {\n   \
    \             foundConsonant = true\n            }\n        }\n        index -=\
    \ 1\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    var closestIndex = 0\n    var closestDistance\
    \ = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelIndex = i\n            if consonantIndex != 0 {\n      \
    \          let distance = vowelIndex - consonantIndex\n                if closestDistance\
    \ == 0 || distance < closestDistance {\n                    closestDistance =\
    \ distance\n                    closestIndex = vowelIndex\n                  \
    \  closestVowel = char\n                }\n            }\n        } else if consonants.contains(char)\
    \ {\n            consonantIndex = i\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            closestVowel = String(char)\n            closestVowelIndex =\
    \ index\n        }\n        if consonants.contains(char) {\n            closestConsonantIndex\
    \ = index\n            if closestVowelIndex > closestConsonantIndex {\n      \
    \          return closestVowel\n            }\n        }\n    }\n    return \"\
    \"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                let prevChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(String(prevChar))\
    \ && !vowels.contains(String(nextChar)) {\n                    if index < closestIndex\
    \ {\n                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index > 0 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]).lowercased()) {\n                if index < word.count\
    \ - 1 && consonants.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ index + 1)]).lowercased()) {\n                    if index < closestIndex {\n\
    \                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = -1\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > closestVowelIndex {\n                closestVowel\
    \ = String(char)\n                closestVowelIndex = index\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n  \
    \  var vowelFound = false\n    var consonantFound = false\n    for i in (0..<word.count).reversed()\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelFound = true\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ && vowelFound {\n            consonantFound = true\n            consonantIndex\
    \ = i\n            break\n        }\n    }\n    if vowelFound && consonantFound\
    \ {\n        let index = word.index(word.startIndex, offsetBy: vowelIndex)\n \
    \       closestVowel = String(word[index])\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) || vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    continue\n                }\n\
    \            }\n            if index < closestIndex {\n                closestIndex\
    \ = index\n                closestVowel = String(char)\n            }\n      \
    \  }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var index = word.count - 1\n    var isVowel = false\n    var isConsonant\
    \ = false\n    while index >= 0 {\n        if vowels.contains(word[index]) {\n\
    \            isVowel = true\n        } else if consonants.contains(word[index])\
    \ {\n            isConsonant = true\n        }\n        if isVowel && isConsonant\
    \ {\n            closestVowel = String(word[index])\n            break\n     \
    \   }\n        index -= 1\n    }\n    return closestVowel"]
stop_tokens:
- "\n}"

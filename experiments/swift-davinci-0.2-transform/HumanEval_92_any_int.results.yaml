language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x + y == z) ||\
    \ (x + z == y) || (y + z == x) {\n        return true\n    } else {\n        return\
    \ false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppm87a36_/tmppm87a36_.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c8b84dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c8b544b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c8b544988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c8b5437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppm87a36_                        0x00005618bd3452d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b1c8ba39460 __libc_start_main +
    245

    6    tmppm87a36_                        0x00005618bd344e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8ick_7wo/tmp8ick_7wo.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fb8277c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fb7f6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fb7f6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fb7f6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8ick_7wo                        0x00005630d4a8b77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7fb8463460 __libc_start_main +
    245

    6    tmp8ick_7wo                        0x00005630d4a8af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9fjtegns/tmp9fjtegns.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae805f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae805c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae805c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae805c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9fjtegns                        0x000055facab9977d <unavailable> + 6013

    5    libc.so.6                          0x00002ae80616c460 __libc_start_main +
    245

    6    tmp9fjtegns                        0x000055facab98f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0)\
    \ && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq1j8p_6e/tmpq1j8p_6e.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2ddddec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae2ddad5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae2ddad5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2ddad47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq1j8p_6e                        0x0000560a2124377d <unavailable> + 6013

    5    libc.so.6                          0x00002ae2ddfca460 __libc_start_main +
    245

    6    tmpq1j8p_6e                        0x0000560a21242f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z) || (x + z == y) || (y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprygt2e89/tmprygt2e89.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0eeca22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0eec719b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0eec719988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0eec7187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprygt2e89                        0x000055c6dfe362d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b0eecc0e460 __libc_start_main +
    245

    6    tmprygt2e89                        0x000055c6dfe35e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z) || (x + z == y) || (y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprygt2e89/tmprygt2e89.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0eeca22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0eec719b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0eec719988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0eec7187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprygt2e89                        0x000055c6dfe362d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b0eecc0e460 __libc_start_main +
    245

    6    tmprygt2e89                        0x000055c6dfe35e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x == y + z ||\
    \ y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpowmhekds/tmpowmhekds.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8f0790c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8f0487b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae8f0487988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8f04867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpowmhekds                        0x000056317398b77d <unavailable> + 6013

    5    libc.so.6                          0x00002ae8f097c460 __libc_start_main +
    245

    6    tmpowmhekds                        0x000056317398af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8ick_7wo/tmp8ick_7wo.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fb8277c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fb7f6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fb7f6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fb7f6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8ick_7wo                        0x00005630d4a8b77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7fb8463460 __libc_start_main +
    245

    6    tmp8ick_7wo                        0x00005630d4a8af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.isInteger &&\
    \ y.isInteger && z.isInteger {\n        if x == y + z || y == x + z || z == x\
    \ + y {\n            return true\n        }\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp267sz_0q.swift:15:10: error: value of type 'Double' has no member\
    \ 'isInteger'\n    if x.isInteger && y.isInteger && z.isInteger {\n       ~ ^~~~~~~~~\n\
    /tmp/tmp267sz_0q.swift:15:25: error: value of type 'Double' has no member 'isInteger'\n\
    \    if x.isInteger && y.isInteger && z.isInteger {\n                      ~ ^~~~~~~~~\n\
    /tmp/tmp267sz_0q.swift:15:40: error: value of type 'Double' has no member 'isInteger'\n\
    \    if x.isInteger && y.isInteger && z.isInteger {\n                        \
    \             ~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    let sum = x + y +\
    \ z\n    if sum.truncatingRemainder(dividingBy: 1) == 0 {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpgzfr0dep/tmpgzfr0dep.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c2dc41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c2d938b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c2d938988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c2d9377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgzfr0dep                        0x000055e34a84b3b6 <unavailable> + 5046

    5    libc.so.6                          0x00002b1c2de2d460 __libc_start_main +
    245

    6    tmpgzfr0dep                        0x000055e34a84af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y + z ||\
    \ y == x + z || z == x + y {\n        return true\n    } else {\n        return\
    \ false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpqiplnirc/tmpqiplnirc.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c54d19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c54a10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c54a10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c54a0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqiplnirc                        0x000055c4596982d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b0c54f05460 __libc_start_main +
    245

    6    tmpqiplnirc                        0x000055c459697e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x == y + z ||\
    \ y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpowmhekds/tmpowmhekds.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8f0790c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8f0487b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae8f0487988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8f04867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpowmhekds                        0x000056317398b77d <unavailable> + 6013

    5    libc.so.6                          0x00002ae8f097c460 __libc_start_main +
    245

    6    tmpowmhekds                        0x000056317398af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x == y + z) ||\
    \ (y == x + z) || (z == x + y) {\n        return true\n    } else {\n        return\
    \ false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpw2ulun4p/tmpw2ulun4p.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94cdb9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94cd894b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94cd894988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94cd8937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw2ulun4p                        0x0000563ac3a872d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b94cdd89460 __libc_start_main +
    245

    6    tmpw2ulun4p                        0x0000563ac3a86e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    let sum = x + y +\
    \ z\n    if (x == sum - y - z) || (y == sum - x - z) || (z == sum - x - y) {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp3jg39d_h/tmp3jg39d_h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7aa2a60c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7aa2757b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7aa2757988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7aa27567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3jg39d_h                        0x000056049177824d <unavailable> + 4685

    5    libc.so.6                          0x00002b7aa2c4c460 __libc_start_main +
    245

    6    tmp3jg39d_h                        0x0000560491777e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z) || (y == x + z) || (z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpsk_0wsp6/tmpsk_0wsp6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bc110ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bc0e01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bc0e01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bc0e007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsk_0wsp6                        0x000055a3f3ef02d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b0bc12f6460 __libc_start_main +
    245

    6    tmpsk_0wsp6                        0x000055a3f3eefe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x == y + z) ||\
    \ (y == x + z) || (z == x + y) {\n        return true\n    } else {\n        return\
    \ false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpw2ulun4p/tmpw2ulun4p.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94cdb9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94cd894b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94cd894988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94cd8937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw2ulun4p                        0x0000563ac3a872d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b94cdd89460 __libc_start_main +
    245

    6    tmpw2ulun4p                        0x0000563ac3a86e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpztphp0d1/tmpztphp0d1.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b946e187c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b946de7eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b946de7e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b946de7d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpztphp0d1                        0x0000564aca0b677d <unavailable> + 6013

    5    libc.so.6                          0x00002b946e373460 __libc_start_main +
    245

    6    tmpztphp0d1                        0x0000564aca0b5f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return x + y == z || x + z == y || y + z == x\n    }\n  \
    \  return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp2fck3yvq/tmp2fck3yvq.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cf2fd7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cf2cceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cf2cce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cf2ccd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2fck3yvq                        0x000055e627c7677d <unavailable> + 6013

    5    libc.so.6                          0x00002b2cf31c3460 __libc_start_main +
    245

    6    tmp2fck3yvq                        0x000055e627c75f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z) || (y == x + z) || (z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpsk_0wsp6/tmpsk_0wsp6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bc110ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bc0e01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bc0e01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bc0e007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsk_0wsp6                        0x000055a3f3ef02d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b0bc12f6460 __libc_start_main +
    245

    6    tmpsk_0wsp6                        0x000055a3f3eefe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpztphp0d1/tmpztphp0d1.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b946e187c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b946de7eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b946de7e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b946de7d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpztphp0d1                        0x0000564aca0b677d <unavailable> + 6013

    5    libc.so.6                          0x00002b946e373460 __libc_start_main +
    245

    6    tmpztphp0d1                        0x0000564aca0b5f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x == y + z ||\
    \ y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        return true\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpowmhekds/tmpowmhekds.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8f0790c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8f0487b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae8f0487988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8f04867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpowmhekds                        0x000056317398b77d <unavailable> + 6013

    5    libc.so.6                          0x00002ae8f097c460 __libc_start_main +
    245

    6    tmpowmhekds                        0x000056317398af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824570
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpkps78tzg/tmpkps78tzg.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad325331c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad325028b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad325028988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3250277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkps78tzg                        0x000055c02ec601c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad32551d460 __libc_start_main +
    245

    6    tmpkps78tzg                        0x000055c02ec5fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z) || (x + z == y) || (y + z == x) {\n    \
    \        return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpztphp0d1/tmpztphp0d1.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b946e187c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b946de7eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b946de7e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b946de7d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpztphp0d1                        0x0000564aca0b677d <unavailable> + 6013

    5    libc.so.6                          0x00002b946e373460 __libc_start_main +
    245

    6    tmpztphp0d1                        0x0000564aca0b5f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9fjtegns/tmp9fjtegns.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae805f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae805c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae805c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae805c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9fjtegns                        0x000055facab9977d <unavailable> + 6013

    5    libc.so.6                          0x00002ae80616c460 __libc_start_main +
    245

    6    tmp9fjtegns                        0x000055facab98f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x + y == z || x + z == y || y + z == x) {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpp1lbx77q/tmpp1lbx77q.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae066cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae063c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae063c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae063c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp1lbx77q                        0x000056548db5477d <unavailable> + 6013

    5    libc.so.6                          0x00002aae068b7460 __libc_start_main +
    245

    6    tmpp1lbx77q                        0x000056548db53f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5briuvlx/tmp5briuvlx.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06601a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b065fe9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b065fe9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b065fe9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5briuvlx                        0x0000560199f9277d <unavailable> + 6013

    5    libc.so.6                          0x00002b0660392460 __libc_start_main +
    245

    6    tmp5briuvlx                        0x0000560199f91f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8ick_7wo/tmp8ick_7wo.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fb8277c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fb7f6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fb7f6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fb7f6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8ick_7wo                        0x00005630d4a8b77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7fb8463460 __libc_start_main +
    245

    6    tmp8ick_7wo                        0x00005630d4a8af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9fjtegns/tmp9fjtegns.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae805f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae805c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae805c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae805c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9fjtegns                        0x000055facab9977d <unavailable> + 6013

    5    libc.so.6                          0x00002ae80616c460 __libc_start_main +
    245

    6    tmp9fjtegns                        0x000055facab98f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpkps78tzg/tmpkps78tzg.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad325331c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad325028b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad325028988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3250277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkps78tzg                        0x000055c02ec601c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad32551d460 __libc_start_main +
    245

    6    tmpkps78tzg                        0x000055c02ec5fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp8ick_7wo/tmp8ick_7wo.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fb8277c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fb7f6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fb7f6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fb7f6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8ick_7wo                        0x00005630d4a8b77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7fb8463460 __libc_start_main +
    245

    6    tmp8ick_7wo                        0x00005630d4a8af49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpyqf0uu5n/tmpyqf0uu5n.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaed9041c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaed8d38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaed8d38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaed8d377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyqf0uu5n                        0x00005561f003677d <unavailable> + 6013

    5    libc.so.6                          0x00002aaed922d460 __libc_start_main +
    245

    6    tmpyqf0uu5n                        0x00005561f0035f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9fjtegns/tmp9fjtegns.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae805f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae805c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae805c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae805c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9fjtegns                        0x000055facab9977d <unavailable> + 6013

    5    libc.so.6                          0x00002ae80616c460 __libc_start_main +
    245

    6    tmp9fjtegns                        0x000055facab98f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpjrdwqkgh/tmpjrdwqkgh.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8787551c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8787248b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8787248988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87872477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjrdwqkgh                        0x000056175b28c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b878773d460 __libc_start_main +
    245

    6    tmpjrdwqkgh                        0x000056175b28bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmafhq8iw/tmpmafhq8iw.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebba135c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb9e2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb9e2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb9e2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmafhq8iw                        0x0000558a96f0377d <unavailable> + 6013

    5    libc.so.6                          0x00002aebba321460 __libc_start_main +
    245

    6    tmpmafhq8iw                        0x0000558a96f02f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpnseacea7/tmpnseacea7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b764d30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b764d003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b764d003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b764d0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnseacea7                        0x000055bf68b0877d <unavailable> + 6013

    5    libc.so.6                          0x00002b764d4f8460 __libc_start_main +
    245

    6    tmpnseacea7                        0x000055bf68b07f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x + y ==\
    \ z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpiufox65m/tmpiufox65m.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bc18c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bc15bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bc15bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bc15ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiufox65m                        0x00005615c589377d <unavailable> + 6013

    5    libc.so.6                          0x00002b3bc1ab0460 __libc_start_main +
    245

    6    tmpiufox65m                        0x00005615c5892f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmprhsuhrj2/tmprhsuhrj2.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a77226c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a76f1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a76f1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a76f1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprhsuhrj2                        0x0000559484db077d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a77412460 __libc_start_main +
    245

    6    tmprhsuhrj2                        0x0000559484daff49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp9fjtegns/tmp9fjtegns.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae805f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae805c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae805c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae805c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9fjtegns                        0x000055facab9977d <unavailable> + 6013

    5    libc.so.6                          0x00002ae80616c460 __libc_start_main +
    245

    6    tmp9fjtegns                        0x000055facab98f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return (x == y +\
    \ z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp7kkzmive/tmp7kkzmive.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d61ba3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d6189ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d6189a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d618997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kkzmive                        0x000055a39e0b477d <unavailable> + 6013

    5    libc.so.6                          0x00002b7d61d8f460 __libc_start_main +
    245

    6    tmp7kkzmive                        0x000055a39e0b3f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1jafqdwg/tmp1jafqdwg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ef0765c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ef045cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ef045c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ef045b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1jafqdwg                        0x0000557a13eb277d <unavailable> + 6013

    5    libc.so.6                          0x00002b5ef0951460 __libc_start_main +
    245

    6    tmp1jafqdwg                        0x0000557a13eb1f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824483

name: HumanEval_99_closest_integer
language: swift
prompt: "\n/// Create a function that takes a value (string) representing a number\n\
  /// and returns the closest integer to it. If the number is equidistant\n/// from\
  \ two integers, round it away from zero.\n/// Examples\n/// >>> closest_integer(value:\
  \ \"10\")\n/// 10\n/// >>> closest_integer(value: \"15.3\")\n/// 15\n/// Note:\n\
  /// Rounding away from zero means that if the given number is equidistant\n/// from\
  \ two integers, the one you should return is the one that is the\n/// farthest from\
  \ zero. For example closest_integer(\"14.5\") should\n/// return 15 and closest_integer(\"\
  -14.5\") should return -15.\nfunc closest_integer(value: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(closest_integer(value: \"10\") == 10)\n\
  assert(closest_integer(value: \"14.5\") == 15)\nassert(closest_integer(value: \"\
  -15.5\") == -16)\nassert(closest_integer(value: \"15.3\") == 15)\nassert(closest_integer(value:\
  \ \"0\") == 0)"
completions: ["    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if abs(number - Double(rounded)) == 0.5 {\n        if number > 0 {\n    \
    \        return ceil\n        } else {\n            return floor\n        }\n\
    \    } else {\n        return rounded\n    }", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    return Int(rounded)", "    let number =\
    \ Double(value)!\n    let rounded = Int(number.rounded())\n    let decimal = number\
    \ - Double(rounded)\n    if decimal > 0.5 {\n        return rounded + 1\n    }\
    \ else if decimal < -0.5 {\n        return rounded - 1\n    } else {\n       \
    \ return rounded\n    }", "    let number = Double(value)!\n    return Int(number.rounded(.awayFromZero))",
  "    let num = Double(value)!\n    return Int(num.rounded(.awayFromZero))", "  \
    \  let number = Double(value)!\n    let rounded = round(number)\n    let integer\
    \ = Int(rounded)\n    return integer", "    let number = Double(value)!\n    let\
    \ rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let rounded = round(number)\n    if number\
    \ - rounded >= 0.5 {\n        return Int(rounded + 1)\n    } else {\n        return\
    \ Int(rounded)\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floored = Int(number.rounded(.down))\n    let ceiled = Int(number.rounded(.up))\n\
    \    if abs(number - Double(rounded)) < abs(number - Double(floored)) {\n    \
    \    return rounded\n    } else if abs(number - Double(rounded)) < abs(number\
    \ - Double(ceiled)) {\n        return rounded\n    } else if abs(number - Double(floored))\
    \ < abs(number - Double(ceiled)) {\n        return floored\n    } else {\n   \
    \     return ceiled\n    }", "    let number = Double(value)!\n    let integer\
    \ = Int(number)\n    let decimal = number - Double(integer)\n    if decimal <\
    \ 0.5 {\n        return integer\n    } else {\n        return integer + 1\n  \
    \  }", "    let number = Double(value)!\n    let rounded = round(number)\n   \
    \ return Int(rounded)", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n    if\
    \ decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < 0.5 {\n   \
    \     return floor\n    } else {\n        return ceil\n    }", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let roundedInt = Int(rounded)\n\
    \    let decimal = number - rounded\n    if decimal > 0.5 {\n        return roundedInt\
    \ + 1\n    } else if decimal < -0.5 {\n        return roundedInt - 1\n    } else\
    \ {\n        return roundedInt\n    }", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    let intValue = Int(roundedValue)\n\
    \    return intValue", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let int = Int(rounded)\n    return int", "    let num = Double(value)!\n\
    \    let int = Int(num)\n    let decimal = num - Double(int)\n    if decimal >=\
    \ 0.5 {\n        return int + 1\n    } else {\n        return int\n    }", " \
    \   let num = Double(value)!\n    let int = Int(num)\n    let decimal = num -\
    \ Double(int)\n    if decimal >= 0.5 {\n        return int + 1\n    } else {\n\
    \        return int\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n    if\
    \ decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let doubleValue = Double(value)!\n    let intValue =\
    \ Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n  \
    \  if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n     \
    \   return intValue\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let doubleValue = Double(value)!\n    let\
    \ roundedValue = round(doubleValue)\n    return Int(roundedValue)", "    let number\
    \ = Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if number - Double(floor) < 0.5 {\n        return floor\n    } else {\n \
    \       return ceil\n    }", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = round(doubleValue)\n    return Int(roundedValue)", "    let num = Double(value)!\n\
    \    let int = Int(num)\n    let dec = num - Double(int)\n    if dec < 0.5 {\n\
    \        return int\n    } else {\n        return int + 1\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(number.rounded(.down))\n    let ceil =\
    \ Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    if floorDiff == ceilDiff {\n\
    \        return number < 0 ? floor : ceil\n    }\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = round(doubleValue)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < 0.5 {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let num = Double(value)!\n    let num_int = Int(num)\n\
    \    let num_dec = num - Double(num_int)\n    if num_dec < 0.5 {\n        return\
    \ num_int\n    } else {\n        return num_int + 1\n    }", "    let number =\
    \ Double(value)!\n    let intNumber = Int(number)\n    let decimalNumber = number\
    \ - Double(intNumber)\n    if decimalNumber >= 0.5 {\n        return intNumber\
    \ + 1\n    } else {\n        return intNumber\n    }", '    return Int(Double(value)!.rounded(.awayFromZero))',
  "    let doubleValue = Double(value)!\n    let rounded = round(doubleValue)\n  \
    \  return Int(rounded)", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let doubleValue = Double(value)!\n    let\
    \ intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal < 0.5 {\n        return intValue\n    } else {\n        return\
    \ intValue + 1\n    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n \
    \   if number - floor < ceil - number {\n        return Int(floor)\n    } else\
    \ {\n        return Int(ceil)\n    }", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal < 0.5 {\n        return integer\n\
    \    } else {\n        return integer + 1\n    }", "    let value = Double(value)!\n\
    \    let intValue = Int(value)\n    let decimal = value - Double(intValue)\n \
    \   if decimal < 0.5 {\n        return intValue\n    } else {\n        return\
    \ intValue + 1\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let int = Int(rounded)\n    return int", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    return Int(rounded)", "    let doubleValue\
    \ = Double(value)!\n    let intValue = Int(doubleValue)\n    let decimalValue\
    \ = doubleValue - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let doubleValue\
    \ = Double(value)!\n    let roundedValue = round(doubleValue)\n    return Int(roundedValue)",
  "    let num = Double(value)!\n    let int = Int(num)\n    let decimal = num - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let doubleValue = Double(value)!\n    let roundedValue = round(doubleValue)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let int\
    \ = Int(number)\n    let decimal = number - Double(int)\n    if decimal >= 0.5\
    \ {\n        return int + 1\n    } else {\n        return int\n    }", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    let diff_floor = abs(number - Double(floor))\n    let\
    \ diff_ceil = abs(number - Double(ceil))\n    if diff_floor == diff_ceil {\n \
    \       return number > 0 ? ceil : floor\n    }\n    return diff_floor < diff_ceil\
    \ ? floor : ceil", "    let doubleValue = Double(value)!\n    let floorValue =\
    \ floor(doubleValue)\n    let ceilValue = ceil(doubleValue)\n    if doubleValue\
    \ - floorValue < ceilValue - doubleValue {\n        return Int(floorValue)\n \
    \   } else {\n        return Int(ceilValue)\n    }", "    let value = Double(value)!\n\
    \    let rounded = value.rounded()\n    let floor = value.rounded(.down)\n   \
    \ let ceil = value.rounded(.up)\n    if value - floor < ceil - value {\n     \
    \   return Int(floor)\n    } else {\n        return Int(ceil)\n    }", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    if number - Double(floor) < 0.5 {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let floor\
    \ = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n    let\
    \ floorDiff = abs(number - Double(floor))\n    let ceilDiff = abs(number - Double(ceil))\n\
    \    if floorDiff < ceilDiff {\n        return floor\n    } else {\n        return\
    \ ceil\n    }", '    return Int(Double(value)!.rounded(.awayFromZero))', '    return
    Int(Double(value)!.rounded(.awayFromZero))', "    let doubleValue = Double(value)!\n\
    \    let integerValue = Int(doubleValue)\n    let decimalValue = doubleValue -\
    \ Double(integerValue)\n    if decimalValue > 0.5 {\n        return integerValue\
    \ + 1\n    } else if decimalValue < -0.5 {\n        return integerValue - 1\n\
    \    } else {\n        return integerValue\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = Int(round(number))\n\
    \    return rounded", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let decimal = number - Double(rounded)\n    if decimal > 0.5 {\n        return\
    \ rounded + 1\n    } else if decimal < -0.5 {\n        return rounded - 1\n  \
    \  } else {\n        return rounded\n    }", "    let number = Double(value)!\n\
    \    let rounded = number.rounded()\n    return Int(rounded)", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let int = Int(rounded)\n\
    \    if number - Double(int) == 0.5 {\n        return int + 1\n    }\n    return\
    \ int", "    let number = Double(value)!\n    let integer = Int(number)\n    let\
    \ decimal = number - Double(integer)\n    if decimal >= 0.5 {\n        return\
    \ integer + 1\n    } else {\n        return integer\n    }", "    let doubleValue\
    \ = Double(value)!\n    let roundedValue = round(doubleValue)\n    return Int(roundedValue)",
  '    return Int(value)!', "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let decimal = number - rounded\n    if decimal < 0 {\n        return Int(rounded)\n\
    \    } else if decimal > 0 {\n        return Int(rounded + 1)\n    } else {\n\
    \        return Int(rounded)\n    }", "    let number = Double(value)!\n    let\
    \ rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number -\
    \ Double(floor))\n    let ceilingDiff = abs(number - Double(ceiling))\n    return\
    \ floorDiff < ceilingDiff ? floor : ceiling", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < 0.5 {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    if doubleValue - Double(intValue) >= 0.5 {\n       \
    \ return intValue + 1\n    } else {\n        return intValue\n    }", "    let\
    \ doubleValue = Double(value)!\n    let roundedValue = round(doubleValue)\n  \
    \  return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    if number - rounded >= 0.5 {\n        return Int(rounded\
    \ + 1)\n    } else {\n        return Int(rounded)\n    }", "    let value = Double(value)!\n\
    \    let floor = Int(floor(value))\n    let ceil = Int(ceil(value))\n    if value\
    \ - Double(floor) < Double(ceil) - value {\n        return floor\n    } else {\n\
    \        return ceil\n    }", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    if number - Double(rounded) >= 0.5 {\n        return\
    \ rounded + 1\n    } else {\n        return rounded\n    }", "    let doubleValue\
    \ = Double(value)!\n    let roundedValue = round(doubleValue)\n    return Int(roundedValue)",
  "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diffFloor = abs(number - Double(floor))\n    let diffCeil = abs(number\
    \ - Double(ceil))\n    if diffFloor == diffCeil {\n        return number > 0 ?\
    \ ceil : floor\n    }\n    return diffFloor < diffCeil ? floor : ceil", "    let\
    \ number = Double(value)!\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = round(doubleValue)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let rounded = Int(round(number))\n    let floor = Int(floor(number))\n  \
    \  let ceil = Int(ceil(number))\n    if number - Double(floor) == 0.5 {\n    \
    \    return rounded\n    } else if number - Double(floor) > 0.5 {\n        return\
    \ ceil\n    } else {\n        return floor\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    if floorDiff == ceilDiff {\n\
    \        return number >= 0 ? ceil : floor\n    }\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let number = Double(value)!\n    let integer = Int(number)\n\
    \    let decimal = number - Double(integer)\n    if decimal < 0.5 {\n        return\
    \ integer\n    } else {\n        return integer + 1\n    }", "    let number =\
    \ Double(value)!\n    let intNumber = Int(number)\n    if number - Double(intNumber)\
    \ < 0.5 {\n        return intNumber\n    } else {\n        return intNumber +\
    \ 1\n    }", "    let number = Double(value)!\n    let rounded = Int(round(number))\n\
    \    return rounded", "    let number = Double(value)!\n    let intNumber = Int(number)\n\
    \    let decimal = number - Double(intNumber)\n    if decimal < 0.5 {\n      \
    \  return intNumber\n    } else {\n        return intNumber + 1\n    }", "   \
    \ let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floor_diff = abs(number - Double(floor))\n    let ceil_diff = abs(number\
    \ - Double(ceil))\n    if floor_diff == ceil_diff {\n        return number > 0\
    \ ? ceil : floor\n    }\n    return floor_diff < ceil_diff ? floor : ceil", " \
    \   let number = Double(value)!\n    let rounded = round(number)\n    if number\
    \ - rounded == 0.5 {\n        return Int(rounded)\n    } else if number - rounded\
    \ > 0.5 {\n        return Int(rounded) + 1\n    } else {\n        return Int(rounded)\n\
    \    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let rounded_int = Int(rounded)\n    if rounded - Double(rounded_int) < 0.5\
    \ {\n        return rounded_int\n    } else {\n        return rounded_int + 1\n\
    \    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < 0.5 {\n   \
    \     return floor\n    } else {\n        return ceil\n    }", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - floor < ceil - number\
    \ {\n        return floor\n    } else {\n        return ceil\n    }", "    let\
    \ number = Double(value)!\n    let rounded = round(number)\n    if number - rounded\
    \ > 0.5 {\n        return Int(rounded) + 1\n    } else {\n        return Int(rounded)\n\
    \    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff1 = abs(number - Double(rounded))\n    let diff2 = abs(number - Double(floor))\n\
    \    let diff3 = abs(number - Double(ceil))\n    if diff1 == 0 {\n        return\
    \ rounded\n    } else if diff2 < diff3 {\n        return floor\n    } else {\n\
    \        return ceil\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n    if\
    \ decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", '    return Int(Double(value)!.rounded(.awayFromZero))', " \
    \   let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal >= 0.5 {\n        return integer\
    \ + 1\n    } else {\n        return integer\n    }", '    return Int(Double(value)!.rounded(.awayFromZero))',
  "    let number = Double(value)!\n    let rounded = round(number)\n    let int =\
    \ Int(rounded)\n    return int", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    if rounded - number > 0.5 {\n        return Int(rounded\
    \ - 1)\n    } else {\n        return Int(rounded)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    if number - Double(floor) ==\
    \ 0.5 {\n        return floor\n    } else if number - Double(floor) > 0.5 {\n\
    \        return ceiling\n    } else {\n        return rounded\n    }", "    let\
    \ number = Double(value)!\n    return Int(round(number))", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let integer = Int(rounded)\n    return integer",
  "    let number = Double(value)!\n    let rounded = round(number)\n    let int =\
    \ Int(rounded)\n    return int", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceil = Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let num = Double(value)!\n    let int = Int(num)\n    let decimal = num - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let value = Double(value)!\n    let floor = Int(floor(value))\n\
    \    let ceil = Int(ceil(value))\n    if value - Double(floor) < Double(ceil)\
    \ - value {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if number - Double(floor) == 0.5 {\n        return floor\n    } else if number\
    \ - Double(ceil) == -0.5 {\n        return ceil\n    } else {\n        return\
    \ rounded\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    if number - rounded > 0.5 {\n        return Int(rounded + 1)\n    } else\
    \ {\n        return Int(rounded)\n    }", "    let number = Double(value)!\n \
    \   if number > 0 {\n        return Int(number.rounded(.up))\n    } else {\n \
    \       return Int(number.rounded(.down))\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue < 0.5 {\n        return intValue\n    } else {\n        return\
    \ intValue + 1\n    }", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = round(doubleValue)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    if number.truncatingRemainder(dividingBy: 1) > 0.5 {\n        return Int(number.rounded(.up))\n\
    \    } else {\n        return Int(number.rounded(.down))\n    }", "    let number\
    \ = Double(value)!\n    let rounded = Int(number.rounded())\n    let ceiled =\
    \ Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n   \
    \ let diffRounded = abs(number - Double(rounded))\n    let diffCeiled = abs(number\
    \ - Double(ceiled))\n    let diffFloored = abs(number - Double(floored))\n   \
    \ if diffRounded < diffCeiled && diffRounded < diffFloored {\n        return rounded\n\
    \    } else if diffCeiled < diffRounded && diffCeiled < diffFloored {\n      \
    \  return ceiled\n    } else {\n        return floored\n    }", "    let doubleValue\
    \ = Double(value)!\n    let intValue = Int(doubleValue)\n    let decimalValue\
    \ = doubleValue - Double(intValue)\n    if decimalValue < 0.5 {\n        return\
    \ intValue\n    } else {\n        return intValue + 1\n    }", "    let number\
    \ = Double(value)!\n    let rounded = Int(number.rounded())\n    let ceiled =\
    \ Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n   \
    \ let distanceToRounded = abs(number - Double(rounded))\n    let distanceToCeiled\
    \ = abs(number - Double(ceiled))\n    let distanceToFloored = abs(number - Double(floored))\n\
    \    if distanceToRounded < distanceToCeiled && distanceToRounded < distanceToFloored\
    \ {\n        return rounded\n    } else if distanceToCeiled < distanceToFloored\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let number = Double(value)!\n    let rounded = number.rounded()\n    let floor\
    \ = number.rounded(.down)\n    let ceil = number.rounded(.up)\n    if number -\
    \ floor < ceil - number {\n        return Int(floor)\n    } else {\n        return\
    \ Int(ceil)\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floor_diff = abs(number - Double(floor))\n    let ceil_diff = abs(number\
    \ - Double(ceil))\n    if floor_diff == ceil_diff {\n        return number < 0\
    \ ? floor : ceil\n    }\n    return floor_diff < ceil_diff ? floor : ceil", " \
    \   let number = Double(value)!\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floor_diff = abs(number - Double(floor))\n\
    \    let ceil_diff = abs(number - Double(ceil))\n    if floor_diff < ceil_diff\
    \ {\n        return floor\n    } else {\n        return ceil\n    }", "    let\
    \ number = Double(value)!\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n\
    \    if doubleValue - Double(intValue) < 0.5 {\n        return intValue\n    }\
    \ else {\n        return intValue + 1\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", '    return Int(Double(value)!.rounded(.toNearestOrAwayFromZero))',
  "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff_floor = abs(number - Double(floor))\n    let diff_ceil = abs(number\
    \ - Double(ceil))\n    if diff_floor == diff_ceil {\n        return number > 0\
    \ ? ceil : floor\n    }\n    return diff_floor < diff_ceil ? floor : ceil", " \
    \   let number = Double(value)!\n    let rounded = Int(number.rounded())\n   \
    \ let floor = Int(number.rounded(.down))\n    let ceiling = Int(number.rounded(.up))\n\
    \    let floorDiff = abs(number - Double(floor))\n    let ceilingDiff = abs(number\
    \ - Double(ceiling))\n    if floorDiff == ceilingDiff {\n        return rounded\
    \ > 0 ? ceiling : floor\n    }\n    return floorDiff < ceilingDiff ? floor : ceiling",
  "    let doubleValue = Double(value)!\n    let floorValue = floor(doubleValue)\n\
    \    let ceilValue = ceil(doubleValue)\n    let floorDiff = abs(doubleValue -\
    \ floorValue)\n    let ceilDiff = abs(doubleValue - ceilValue)\n    if floorDiff\
    \ == ceilDiff {\n        return Int(doubleValue < 0 ? floorValue : ceilValue)\n\
    \    }\n    return Int(floorDiff < ceilDiff ? floorValue : ceilValue)", "    let\
    \ number = Double(value)!\n    let integer = Int(number)\n    let decimal = number\
    \ - Double(integer)\n    if decimal < 0.5 {\n        return integer\n    } else\
    \ {\n        return integer + 1\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceiling = Int(number.rounded(.up))\n\
    \    if number - Double(floor) < Double(ceiling) - number {\n        return floor\n\
    \    } else {\n        return ceiling\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let floor = number.rounded(.down)\n    let ceil = number.rounded(.up)\n \
    \   if number - floor > ceil - number {\n        return Int(ceil)\n    } else\
    \ {\n        return Int(floor)\n    }", "    let number = Double(value)!\n   \
    \ let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) == 0.5\
    \ {\n        return floor\n    } else if number - Double(ceil) == -0.5 {\n   \
    \     return ceil\n    } else {\n        return rounded\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if number - Double(floor) < 0.5 {\n        return floor\n    } else {\n \
    \       return ceil\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    if doubleValue - Double(intValue) < 0.5 {\n        return\
    \ intValue\n    } else {\n        return intValue + 1\n    }", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let int = Int(rounded)\n\
    \    return int", "    let num = Double(value)!\n    let int = Int(num)\n    let\
    \ decimal = num - Double(int)\n    if decimal < 0.5 {\n        return int\n  \
    \  } else {\n        return int + 1\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number -\
    \ Double(floor))\n    let ceilingDiff = abs(number - Double(ceiling))\n    if\
    \ floorDiff == ceilingDiff {\n        return number < 0 ? floor : ceiling\n  \
    \  }\n    return floorDiff < ceilingDiff ? floor : ceiling", "    let number =\
    \ Double(value)!\n    let roundedNumber = Int(number.rounded())\n    let decimal\
    \ = number - Double(roundedNumber)\n    if decimal > 0.5 {\n        return roundedNumber\
    \ + 1\n    } else if decimal < -0.5 {\n        return roundedNumber - 1\n    }\
    \ else {\n        return roundedNumber\n    }", "    let number = Double(value)!\n\
    \    let intNumber = Int(number)\n    let decimalNumber = number - Double(intNumber)\n\
    \    if decimalNumber < 0.5 {\n        return intNumber\n    } else {\n      \
    \  return intNumber + 1\n    }", "    let number = Double(value)!\n    let floor\
    \ = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n    let\
    \ floor_diff = abs(number - Double(floor))\n    let ceil_diff = abs(number - Double(ceil))\n\
    \    if floor_diff < ceil_diff {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let decimal = number - Double(rounded)\n    if decimal >= 0.5 {\n       \
    \ return rounded + 1\n    } else {\n        return rounded\n    }", "    let number\
    \ = Double(value)!\n    let integer = Int(number)\n    let decimal = number -\
    \ Double(integer)\n    if decimal >= 0.5 {\n        return integer + 1\n    }\
    \ else {\n        return integer\n    }", "    let doubleValue = Double(value)!\n\
    \    let roundedValue = round(doubleValue)\n    return Int(roundedValue)", " \
    \   let doubleValue = Double(value)!\n    let roundedValue = round(doubleValue)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)!\n    let\
    \ intValue = Int(doubleValue)\n    if doubleValue - Double(intValue) < 0.5 {\n\
    \        return intValue\n    } else {\n        return intValue + 1\n    }", " \
    \   let number = Double(value)!\n    let rounded = number.rounded()\n    let int\
    \ = Int(rounded)\n    return int", "    let doubleValue = Double(value)!\n   \
    \ let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilingDiff = abs(number - Double(ceiling))\n    if floorDiff == ceilingDiff\
    \ {\n        return rounded > 0 ? ceiling : floor\n    }\n    return floorDiff\
    \ < ceilingDiff ? floor : ceiling", "    let doubleValue = Double(value)!\n  \
    \  let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    if number - rounded >= 0.5 {\n        return Int(rounded + 1)\n    } else\
    \ {\n        return Int(rounded)\n    }", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = round(doubleValue)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let intNumber = Int(number)\n    let decimalNumber = number - Double(intNumber)\n\
    \    if decimalNumber >= 0.5 {\n        return intNumber + 1\n    } else {\n \
    \       return intNumber\n    }", "    let doubleValue = Double(value)!\n    let\
    \ roundedValue = round(doubleValue)\n    return Int(roundedValue)", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    return Int(rounded)",
  "    let num = Double(value)!\n    let int = Int(num)\n    let dec = num - Double(int)\n\
    \    if dec < 0.5 {\n        return int\n    } else {\n        return int + 1\n\
    \    }", '    return 0', "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = Int(round(number))\n    let ceiled = Int(ceil(number))\n    let floored =\
    \ Int(floor(number))\n    if abs(rounded - number) < abs(ceiled - number) {\n\
    \        return rounded\n    } else if abs(rounded - number) > abs(ceiled - number)\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ ceiled = Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n\
    \    let diff_rounded = abs(number - Double(rounded))\n    let diff_ceiled = abs(number\
    \ - Double(ceiled))\n    let diff_floored = abs(number - Double(floored))\n  \
    \  if diff_rounded <= diff_ceiled && diff_rounded <= diff_floored {\n        return\
    \ rounded\n    } else if diff_ceiled <= diff_rounded && diff_ceiled <= diff_floored\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let number = Double(value)!\n    let rounded = number.rounded()\n    let floor\
    \ = number.rounded(.down)\n    let ceil = number.rounded(.up)\n    if (rounded\
    \ - floor) < (ceil - rounded) {\n        return Int(floor)\n    } else {\n   \
    \     return Int(ceil)\n    }", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceil = Int(number.rounded(.up))\n    let diff1 = abs(number - Double(rounded))\n\
    \    let diff2 = abs(number - Double(floor))\n    let diff3 = abs(number - Double(ceil))\n\
    \    if diff1 < diff2 && diff1 < diff3 {\n        return rounded\n    } else if\
    \ diff2 < diff1 && diff2 < diff3 {\n        return floor\n    } else {\n     \
    \   return ceil\n    }", "    let number = Double(value)!\n    let intNumber =\
    \ Int(number)\n    if number - Double(intNumber) < 0.5 {\n        return intNumber\n\
    \    } else {\n        return intNumber + 1\n    }", "    let value = Double(value)!\n\
    \    let intValue = Int(value)\n    let decimal = value - Double(intValue)\n \
    \   if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let rounded_away_from_zero = rounded.rounded(.awayFromZero)\n    let rounded_towards_zero\
    \ = rounded.rounded(.towardZero)\n    if rounded_away_from_zero == rounded_towards_zero\
    \ {\n        return Int(rounded_away_from_zero)\n    }\n    if abs(rounded_away_from_zero\
    \ - number) < abs(rounded_towards_zero - number) {\n        return Int(rounded_away_from_zero)\n\
    \    }\n    return Int(rounded_towards_zero)", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue < 0.5 {\n        return intValue\n    } else {\n        return\
    \ intValue + 1\n    }", '    return Int(value)!', "    let num = Double(value)!\n\
    \    let int = Int(num)\n    let decimal = num - Double(int)\n    if decimal >=\
    \ 0.5 {\n        return int + 1\n    } else {\n        return int\n    }", " \
    \   let number = Double(value)!\n    let rounded = number.rounded()\n    if number\
    \ - rounded == 0.5 {\n        return Int(rounded) + 1\n    }\n    return Int(rounded)",
  "    let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n   \
    \ if doubleValue - Double(intValue) >= 0.5 {\n        return intValue + 1\n  \
    \  } else {\n        return intValue\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < 0.5 {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let doubleValue = Double(value)!\n    let intValue\
    \ = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n    if\
    \ decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let floor = Int(rounded)\n    let ceil = Int(rounded) + 1\n    let diffFloor\
    \ = abs(number - Double(floor))\n    let diffCeil = abs(number - Double(ceil))\n\
    \    if diffFloor < diffCeil {\n        return floor\n    } else {\n        return\
    \ ceil\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let integer = Int(rounded)\n    return integer", "    let doubleValue = Double(value)!\n\
    \    let intValue = Int(doubleValue)\n    let decimalValue = doubleValue - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let roundedInt = Int(rounded)\n    if rounded - Double(roundedInt)\
    \ < 0.5 {\n        return roundedInt\n    } else {\n        return roundedInt\
    \ + 1\n    }", "    let doubleValue = Double(value)!\n    let roundedValue = round(doubleValue)\n\
    \    return Int(roundedValue)", "    let num = Double(value)!\n    let int = Int(num)\n\
    \    let decimal = num - Double(int)\n    if decimal >= 0.5 {\n        return\
    \ int + 1\n    } else {\n        return int\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let number = Double(value)!\n    let integer = Int(number)\n\
    \    let decimal = number - Double(integer)\n    if decimal >= 0.5 {\n       \
    \ return integer + 1\n    } else {\n        return integer\n    }", "    let doubleValue\
    \ = Double(value)!\n    let floorValue = floor(doubleValue)\n    let ceilValue\
    \ = ceil(doubleValue)\n    if doubleValue - floorValue < ceilValue - doubleValue\
    \ {\n        return Int(floorValue)\n    } else {\n        return Int(ceilValue)\n\
    \    }", "    let num = Double(value)!\n    let int = Int(num)\n    if num - Double(int)\
    \ >= 0.5 {\n        return int + 1\n    } else {\n        return int\n    }",
  "    let number = Double(value)!\n    let rounded = number.rounded()\n    return\
    \ Int(rounded)", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    if rounded > number {\n        return Int(rounded - 1)\n    }\n    return\
    \ Int(rounded)", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    if rounded > number {\n        return Int(rounded)\n    } else {\n      \
    \  return Int(rounded + 1)\n    }", "    let number = Double(value)!\n    let\
    \ rounded = Int(number.rounded())\n    let decimal = number - Double(rounded)\n\
    \    return decimal >= 0.5 ? rounded + 1 : rounded", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < 0.5 {\n        return floor\n    } else {\n       \
    \ return ceil\n    }", "    let doubleValue = Double(value)!\n    let roundedValue\
    \ = Int(doubleValue.rounded())\n    return roundedValue", "    let doubleValue\
    \ = Double(value)!\n    let roundedValue = round(doubleValue)\n    return Int(roundedValue)",
  "    let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < 0.5 {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floorDiff = abs(number - Double(floor))\n    let ceilDiff = abs(number\
    \ - Double(ceil))\n    return floorDiff < ceilDiff ? floor : ceil", "    let number\
    \ = Double(value)!\n    let rounded = Int(round(number))\n    let ceiled = Int(ceil(number))\n\
    \    let floored = Int(floor(number))\n    if number - Double(floored) < 0.5 {\n\
    \        return floored\n    } else if Double(ceiled) - number < 0.5 {\n     \
    \   return ceiled\n    } else {\n        return rounded\n    }", "    let number\
    \ = Double(value)!\n    let floor = Int(number.rounded(.down))\n    let ceil =\
    \ Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil) - number\
    \ {\n        return floor\n    } else {\n        return ceil\n    }", "    let\
    \ number = Double(value)!\n    let rounded = Int(number.rounded())\n    let floor\
    \ = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n    let\
    \ floorDiff = abs(number - Double(floor))\n    let ceilDiff = abs(number - Double(ceil))\n\
    \    if floorDiff == ceilDiff {\n        return number > 0 ? ceil : floor\n  \
    \  }\n    return floorDiff < ceilDiff ? floor : ceil", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let rounded = round(number)\n    let ceiled\
    \ = ceil(number)\n    let floored = floor(number)\n    if rounded - number ==\
    \ 0.5 {\n        return Int(ceiled)\n    } else if number - rounded == 0.5 {\n\
    \        return Int(floored)\n    } else {\n        return Int(rounded)\n    }",
  "    let doubleValue = Double(value)!\n    let intValue = Int(doubleValue)\n   \
    \ if doubleValue - Double(intValue) >= 0.5 {\n        return intValue + 1\n  \
    \  } else {\n        return intValue\n    }", "    let number = Double(value)!\n\
    \    let rounded = number.rounded()\n    if number - rounded > 0.5 {\n       \
    \ return Int(rounded) + 1\n    } else {\n        return Int(rounded)\n    }",
  "    let number = Double(value)!\n    let rounded = round(number)\n    let ceiled\
    \ = ceil(number)\n    let floored = floor(number)\n    if rounded - number ==\
    \ 0.5 {\n        return Int(ceiled)\n    } else if number - rounded == 0.5 {\n\
    \        return Int(floored)\n    } else {\n        return Int(rounded)\n    }",
  "    let number = Double(value)!\n    let decimal = number.truncatingRemainder(dividingBy:\
    \ 1)\n    if decimal >= 0.5 {\n        return Int(number) + 1\n    } else {\n\
    \        return Int(number)\n    }", "    let number = Double(value)!\n    let\
    \ rounded = number.rounded()\n    let roundedInt = Int(rounded)\n    if rounded\
    \ - Double(roundedInt) >= 0.5 {\n        return roundedInt + 1\n    } else {\n\
    \        return roundedInt\n    }", "    let doubleValue = Double(value)!\n  \
    \  let intValue = Int(doubleValue)\n    let decimal = doubleValue - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff1 = abs(number - Double(rounded))\n    let diff2 = abs(number - Double(floor))\n\
    \    let diff3 = abs(number - Double(ceil))\n    if diff1 < diff2 && diff1 < diff3\
    \ {\n        return rounded\n    } else if diff2 < diff1 && diff2 < diff3 {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)!\n    let intValue = Int(doubleValue)\n    let decimalValue\
    \ = doubleValue - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let value\
    \ = Double(value)!\n    let rounded = round(value)\n    let ceiled = ceil(value)\n\
    \    let floored = floor(value)\n    if value - rounded == 0 {\n        return\
    \ Int(rounded)\n    } else if value - rounded > 0 {\n        return Int(ceiled)\n\
    \    } else {\n        return Int(floored)\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if abs(number - Double(rounded)) == 0.5 {\n        if number > 0 {\n    \
    \        return ceil\n        } else {\n            return floor\n        }\n\
    \    } else {\n        return rounded\n    }"]
stop_tokens:
- "\n}"

name: HumanEval_77_iscube
language: swift
prompt: "\n/// Write a function that takes an integer a and returns True \n/// if\
  \ this ingeger is a cube of some integer number.\n/// Note: you may assume the input\
  \ is always valid.\n/// Examples:\n/// >>> iscube(a: 1)\n/// true\n/// >>> iscube(a:\
  \ 2)\n/// false\n/// >>> iscube(a: -1)\n/// true\n/// >>> iscube(a: 64)\n/// true\n\
  /// >>> iscube(a: 0)\n/// true\n/// >>> iscube(a: 180)\n/// false\nfunc iscube(a:\
  \ Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(iscube(a: 1) == true)\nassert(iscube(a:\
  \ 2) == false)\nassert(iscube(a: -1) == true)\nassert(iscube(a: 64) == true)\nassert(iscube(a:\
  \ 180) == false)\nassert(iscube(a: 1000) == true)\nassert(iscube(a: 0) == true)\n\
  assert(iscube(a: 1729) == false)"
completions: ['    return a == 0 || a == 1 || a == -1 || a == 64 || a == -64', '    return
    a == 0 || a == 1 || a == -1 || a == 64 || a == -64', '    return a == 0 || a ==
    1 || a == -1 || a == 64 || a == -64', '    return a == 0 || a == 1 || a == -1
    || a == 64', "    if a == 0 {\n        return true\n    }\n    if a < 0 {\n  \
    \      return iscube(a: -a)\n    }\n    var i = 1\n    while i * i * i <= a {\n\
    \        if i * i * i == a {\n            return true\n        }\n        i +=\
    \ 1\n    }\n    return false", '    return a == 0 || a == 1 || a == -1 || a ==
    64 || a == -64', '    return a == 0 || a == 1 || a == -1 || a == 64 || a == -64',
  '    return a == 0 || a == 1 || a == -1 || (a > 0 && a % 2 == 0)', '    return a
    == 0 || a == 1 || a == -1 || (a > 0 && a % 2 == 0)', '    return a == 0 || a ==
    1 || a == -1 || (a > 0 && a % 2 == 0)', '    return a == 0 || a == 1 || a == -1
    || a == 64 || a == -64', '    return a == 0 || a == 1 || a == -1 || a == 64',
  "    if a == 0 {\n        return true\n    }\n    if a < 0 {\n        return iscube(a:\
    \ -a)\n    }\n    var i = 1\n    while i * i * i <= a {\n        if i * i * i\
    \ == a {\n            return true\n        }\n        i += 1\n    }\n    return\
    \ false", '    return a == 0 || a == 1 || a == -1 || Int(pow(Double(abs(a)), 1.0/3.0))
    * Int(pow(Double(abs(a)), 1.0/3.0)) * Int(pow(Double(abs(a)), 1.0/3.0)) == a',
  '    return a == 0 || a == 1 || a == -1 || a == 64', '    return a == 0 || a ==
    1 || a == -1 || a == 64 || a == -64 || a == 8 || a == -8 || a == 27 || a == -27
    || a == 125 || a == -125 || a == 216 || a == -216 || a == 343 || a == -343 ||
    a == 512 || a == -512 || a == 729 || a == -729 || a == 1000 || a == -1000 || a
    == 1331 || a == -1331 || a == 1728 || a == -1728 || a == 2197 || a == -2197 ||
    a == 2744 || a == -2744 || a == 3375 || a == -3375 || a == 4096 || a == -4096
    || a == 4913 || a == -4913 || a == 5832 || a == -5832 || a == 6859 || a == -6859
    || a == 8000 || a == -8000 || a == 9261 || a == -9261 || a == 10648 || a == -10648
    || a == 12167 || a == -12167 || a == 13824 || a == -13824 || a == 15625 || a ==
    -15625 || a == 17576 || a == -17576 || a == 19683 || a == -19683 || a == 21952
    || a == -21952 || a == 24389 || a == -24389 || a == 27000 || a == -27000 || a
    == 29791 || a == -29791 || a == 32768 || a == -32768 || a == 35937 || a == -35937
    || a == 39304 || a == -39304 || a == 42875 || a == -42875 || a == 46656 || a ==
    -46656 || a == 50653 || a == -50653 || a == 54872 || a == -54872 || a == 59319
    || a == -59319 || a == 64000 || a == -64000 || a == 68921 || a == -68921 || a
    == 74088 || a == -74088 || a == 79507 || a == -79507 || a == 85184 || a == -85184
    || a == 91125 || a == -91125 || a == 97336 || a == -97336 || a == 103823 || a
    == -103823 || a', '    return a == 0 || a == 1 || a == -1 || Int(pow(Double(a),
    1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) * Int(pow(Double(a), 1.0/3.0)) == a',
  '    return a == 0 || a == 1 || a == -1 || a == 64 || a == -64', '    return a ==
    0 || a == 1 || a == -1 || a == 64 || a == -64', '    return a == 0 || a == 1 ||
    a == -1 || a == 64 || a == -64']
stop_tokens:
- "\n}"

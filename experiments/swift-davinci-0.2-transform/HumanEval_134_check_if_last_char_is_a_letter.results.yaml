language: swift
name: HumanEval_134_check_if_last_char_is_a_letter
results:
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // your code here\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpki1y9fh_/tmpki1y9fh_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f4a043c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f49d3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f49d3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f49d397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpki1y9fh_                        0x0000560fae7b22fb <unavailable> + 4859

    5    libc.so.6                          0x00002b8f4a22f460 __libc_start_main +
    245

    6    tmpki1y9fh_                        0x0000560fae7b1ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n    let lastCharIsLetter\
    \ = txt[lastCharIndex].isLetter\n    return lastCharIsLetter\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp6eexisiz/tmp6eexisiz.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06389b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06386acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06386ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06386ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6eexisiz                        0x000055a871ec558d <unavailable> + 5517

    5    libc.so.6                          0x00002b0638ba1460 __libc_start_main +
    245

    6    tmp6eexisiz                        0x000055a871ec5219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: 1
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    return lastChar.isLetter && !lastChar.isWholeWord\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpf92qzdni.swift:20:43: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isWholeWord'\n    return lastChar.isLetter && !lastChar.isWholeWord\n\
    \                                 ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp9wi_q4en/tmp9wi_q4en.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b73c38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b7392fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b7392f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b7392e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9wi_q4en                        0x00005569fb01442d <unavailable> + 5165

    5    libc.so.6                          0x00002b0b73e24460 __libc_start_main +
    245

    6    tmp9wi_q4en                        0x00005569fb0140b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmph245k68e/tmph245k68e.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd9a500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd9a1f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd9a1f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd9a1f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph245k68e                        0x000055e4a60ca66b <unavailable> + 5739

    5    libc.so.6                          0x00002acd9a6ec460 __libc_start_main +
    245

    6    tmph245k68e                        0x000055e4a60ca259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsNotPartOfAWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && lastCharIsNotPartOfAWord\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp7vslx676/tmp7vslx676.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b86ac2ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b86abfc3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b86abfc3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b86abfc27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7vslx676                        0x000055a2e51da70b <unavailable> + 5899

    5    libc.so.6                          0x00002b86ac4b8460 __libc_start_main +
    245

    6    tmp7vslx676                        0x000055a2e51da2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar != nil {\n        return lastChar!.isLetter\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpq2hcywts/tmpq2hcywts.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b7928dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b78f84b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b78f84988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b78f837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq2hcywts                        0x000056534bf1f50d <unavailable> + 5389

    5    libc.so.6                          0x00002b4b79479460 __libc_start_main +
    245

    6    tmpq2hcywts                        0x000056534bf1f199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsNotPartOfWord = txt.lastIndex(of: \" \") == txt.index(before:\
    \ txt.endIndex)\n    return lastCharIsLetter && lastCharIsNotPartOfWord\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp286xl2lk/tmp286xl2lk.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed8c56fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed8c266b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed8c266988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed8c2657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp286xl2lk                        0x0000558d50adb62b <unavailable> + 5675

    5    libc.so.6                          0x00002aed8c75b460 __libc_start_main +
    245

    6    tmp286xl2lk                        0x0000558d50adb219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // Write your code here\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpnk2p_9zr/tmpnk2p_9zr.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3727ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b36f75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b36f75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b36f747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnk2p_9zr                        0x0000559995a7a2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b7b3746a460 __libc_start_main +
    245

    6    tmpnk2p_9zr                        0x0000559995a79ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && !secondLastChar.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b0861c41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0861938561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0861938286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b086193813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0861937bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b0861a6b6c9 <unavailable> + 2692809

    6    tmpuzpm3y3s                        0x00005610f019dd76 <unavailable> + 7542

    7    tmpuzpm3y3s                        0x00005610f019d6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b0861e2d460 __libc_start_main +
    245

    9    tmpuzpm3y3s                        0x00005610f019d209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    if lastChar!.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp3k3v9bcq/tmp3k3v9bcq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5061a02c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50616f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50616f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50616f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3k3v9bcq                        0x000055633398350d <unavailable> + 5389

    5    libc.so.6                          0x00002b5061bee460 __libc_start_main +
    245

    6    tmp3k3v9bcq                        0x0000556333983199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmph245k68e/tmph245k68e.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd9a500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd9a1f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd9a1f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd9a1f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph245k68e                        0x000055e4a60ca66b <unavailable> + 5739

    5    libc.so.6                          0x00002acd9a6ec460 __libc_start_main +
    245

    6    tmph245k68e                        0x000055e4a60ca259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ {\n        if secondLastChar.isLetter {\n            return false\n        }\
    \ else {\n            return true\n        }\n    } else {\n        return false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b254e127c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b254de1e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b254de1e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b254de1e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b254de1dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b254df516c9 <unavailable> + 2692809

    6    tmp2kbfi471                        0x0000555ee8766d76 <unavailable> + 7542

    7    tmp2kbfi471                        0x0000555ee87666e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b254e313460 __libc_start_main +
    245

    9    tmp2kbfi471                        0x0000555ee8766209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharString = txt[lastCharIndex]\n    if lastCharString.isLetter {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpl0n7r6hb/tmpl0n7r6hb.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9c395bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9c392b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9c392b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9c392b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0n7r6hb                        0x000055eab2d9558d <unavailable> + 5517

    5    libc.so.6                          0x00002b9c397a9460 __libc_start_main +
    245

    6    tmpl0n7r6hb                        0x000055eab2d95219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.count == 0 {\n        return false\n    }\n  \
    \  let lastChar = txt.last!\n    if lastChar.isLetter {\n        return true\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp0iyspa3j/tmp0iyspa3j.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abdc0f36c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abdc0c2db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abdc0c2d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abdc0c2c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0iyspa3j                        0x0000557347a2346d <unavailable> + 5229

    5    libc.so.6                          0x00002abdc1122460 __libc_start_main +
    245

    6    tmp0iyspa3j                        0x0000557347a230f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsNotPartOfWord = !txt.hasSuffix(\" \")\n    return\
    \ lastCharIsLetter && lastCharIsNotPartOfWord\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpii8hulpa/tmpii8hulpa.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1f8df9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1f8af0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1f8af0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1f8aef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii8hulpa                        0x00005564f0cf03dd <unavailable> + 5085

    5    libc.so.6                          0x00002ad1f8fe5460 __libc_start_main +
    245

    6    tmpii8hulpa                        0x00005564f0cf0069 <unavailable> + 4201

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmph245k68e/tmph245k68e.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd9a500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd9a1f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd9a1f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd9a1f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph245k68e                        0x000055e4a60ca66b <unavailable> + 5739

    5    libc.so.6                          0x00002acd9a6ec460 __libc_start_main +
    245

    6    tmph245k68e                        0x000055e4a60ca259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ {\n        if secondLastChar.isLetter {\n            return false\n        }\
    \ else {\n            return true\n        }\n    } else {\n        return false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b254e127c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b254de1e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b254de1e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b254de1e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b254de1dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b254df516c9 <unavailable> + 2692809

    6    tmp2kbfi471                        0x0000555ee8766d76 <unavailable> + 7542

    7    tmp2kbfi471                        0x0000555ee87666e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b254e313460 __libc_start_main +
    245

    9    tmp2kbfi471                        0x0000555ee8766209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    return lastChar != nil &&\
    \ lastChar!.isLetter && !txt.contains(\" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmprl3napo5/tmprl3napo5.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae054f59c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae054c50b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae054c50988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae054c4f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprl3napo5                        0x000055ac46b0a59d <unavailable> + 5533

    5    libc.so.6                          0x00002ae055145460 __libc_start_main +
    245

    6    tmprl3napo5                        0x000055ac46b0a229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharIsLetter = txt[lastCharIndex].isLetter\n    return lastCharIsLetter\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpvc21nrha/tmpvc21nrha.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aecf7cbbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aecf79b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aecf79b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aecf79b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvc21nrha                        0x000055ef6d99358d <unavailable> + 5517

    5    libc.so.6                          0x00002aecf7ea7460 __libc_start_main +
    245

    6    tmpvc21nrha                        0x000055ef6d993219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before:\
    \ txt.endIndex)\n    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpo6uuwg9o/tmpo6uuwg9o.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adaa2f84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adaa2c7bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adaa2c7b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adaa2c7a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo6uuwg9o                        0x000055823a07462b <unavailable> + 5675

    5    libc.so.6                          0x00002adaa3170460 __libc_start_main +
    245

    6    tmpo6uuwg9o                        0x000055823a074219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharString = txt[lastCharIndex]\n    if lastCharString.isLetter {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpl0n7r6hb/tmpl0n7r6hb.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9c395bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9c392b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9c392b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9c392b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0n7r6hb                        0x000055eab2d9558d <unavailable> + 5517

    5    libc.so.6                          0x00002b9c397a9460 __libc_start_main +
    245

    6    tmpl0n7r6hb                        0x000055eab2d95219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    if lastChar!.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp3k3v9bcq/tmp3k3v9bcq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5061a02c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50616f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50616f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50616f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3k3v9bcq                        0x000055633398350d <unavailable> + 5389

    5    libc.so.6                          0x00002b5061bee460 __libc_start_main +
    245

    6    tmp3k3v9bcq                        0x0000556333983199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    guard !txt.isEmpty else { return false }\n    let lastChar\
    \ = txt.last!\n    return lastChar.isLetter && !lastChar.isLetter && !lastChar.isNumber\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpgycautyx/tmpgycautyx.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab472088c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab471d7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab471d7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab471d7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgycautyx                        0x00005595dc6b355b <unavailable> + 5467

    5    libc.so.6                          0x00002ab472274460 __libc_start_main +
    245

    6    tmpgycautyx                        0x00005595dc6b3149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: 1
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    let lastCharIsLetter\
    \ = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n    let secondLastCharIsLetter\
    \ = CharacterSet.letters.contains(secondLastChar.unicodeScalars.first!)\n    return\
    \ lastCharIsLetter && !secondLastCharIsLetter\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp6bj7j57_.swift:22:28: error: cannot find 'CharacterSet' in scope\n\
    \    let lastCharIsLetter = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n\
    \                           ^~~~~~~~~~~~\n/tmp/tmp6bj7j57_.swift:23:34: error:\
    \ cannot find 'CharacterSet' in scope\n    let secondLastCharIsLetter = CharacterSet.letters.contains(secondLastChar.unicodeScalars.first!)\n\
    \                                 ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp9wi_q4en/tmp9wi_q4en.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b73c38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b7392fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b7392f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b7392e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9wi_q4en                        0x00005569fb01442d <unavailable> + 5165

    5    libc.so.6                          0x00002b0b73e24460 __libc_start_main +
    245

    6    tmp9wi_q4en                        0x00005569fb0140b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsSpace = lastChar == \" \"\n    return lastCharIsLetter\
    \ && !lastCharIsSpace\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp2laxmg2l/tmp2laxmg2l.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0515414c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b051510bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b051510b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b051510a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2laxmg2l                        0x000055a48b9da47d <unavailable> + 5245

    5    libc.so.6                          0x00002b0515600460 __libc_start_main +
    245

    6    tmp2laxmg2l                        0x000055a48b9da109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsPartOfAWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && !lastCharIsPartOfAWord\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpcc7hq345/tmpcc7hq345.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afe3232ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afe32025b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afe32025988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afe320247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcc7hq345                        0x0000558a71ef866d <unavailable> + 5741

    5    libc.so.6                          0x00002afe3251a460 __libc_start_main +
    245

    6    tmpcc7hq345                        0x0000558a71ef82f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count > 1 {\n\
    \            let secondLastChar = txt[txt.index(before: txt.endIndex)]\n     \
    \       if secondLastChar.isLetter {\n                return false\n         \
    \   }\n        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp8mlh06wh/tmp8mlh06wh.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b8558ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b85281b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b85281988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b852807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8mlh06wh                        0x000055b56159f66b <unavailable> + 5739

    5    libc.so.6                          0x00002b2b85776460 __libc_start_main +
    245

    6    tmp8mlh06wh                        0x000055b56159f259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharInWord = txt[lastCharIndex]\n    if lastCharInWord == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpel4q_vb4/tmpel4q_vb4.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6646a65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b664675cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b664675c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b664675b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel4q_vb4                        0x000055fa196ba52d <unavailable> + 5421

    5    libc.so.6                          0x00002b6646c51460 __libc_start_main +
    245

    6    tmpel4q_vb4                        0x000055fa196ba1b9 <unavailable> + 4537

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    return lastChar!.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpg7xnarp4/tmpg7xnarp4.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba208ae4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba2087dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba2087db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba2087da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg7xnarp4                        0x0000564d5e30050d <unavailable> + 5389

    5    libc.so.6                          0x00002ba208cd0460 __libc_start_main +
    245

    6    tmpg7xnarp4                        0x0000564d5e300199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharString = txt[lastCharIndex]\n    let lastCharStringIndex = txt.index(before:\
    \ txt.endIndex)\n    let lastCharStringIndexString = txt[lastCharStringIndex]\n\
    \    if lastCharString == \" \" && lastCharStringIndexString == \" \" {\n    \
    \    return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp_7xtgkza/tmp_7xtgkza.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2d0b2ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2d0825b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2d0825988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2d08247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_7xtgkza                        0x000055a75fa7a52d <unavailable> + 5421

    5    libc.so.6                          0x00002ab2d0d1a460 __libc_start_main +
    245

    6    tmp_7xtgkza                        0x000055a75fa7a1b9 <unavailable> + 4537

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsSpace = lastChar?.isWhitespace ?? false\n    let\
    \ lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && !lastCharIsSpace && !lastCharIsPartOfWord\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpqithsnco/tmpqithsnco.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab26b82c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab26879b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab26879988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab268787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqithsnco                        0x000055a826a195dd <unavailable> + 5597

    5    libc.so.6                          0x00002aab26d6e460 __libc_start_main +
    245

    6    tmpqithsnco                        0x000055a826a19269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: 1
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsNotPartOfWord = !txt.lastWord.contains(lastChar)\n    return lastCharIsLetter\
    \ && lastCharIsNotPartOfWord\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpw2orlvm2.swift:21:40: error: value of type 'String' has no member\
    \ 'lastWord'\n    let lastCharIsNotPartOfWord = !txt.lastWord.contains(lastChar)\n\
    \                                   ~~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    if\
    \ txt.last == \" \" {\n        return false\n    }\n    if txt.last!.isLetter\
    \ {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp05i1tynx/tmp05i1tynx.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b001c98bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001c682b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001c682988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001c6817b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp05i1tynx                        0x00005640aa33a55d <unavailable> + 5469

    5    libc.so.6                          0x00002b001cb77460 __libc_start_main +
    245

    6    tmp05i1tynx                        0x00005640aa33a1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsNotPartOfWord = lastChar?.isWhitespace ?? true\n\
    \    return lastCharIsLetter && lastCharIsNotPartOfWord\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpvfop1qc6/tmpvfop1qc6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0721f5cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0721c53b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0721c53988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0721c527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfop1qc6                        0x0000559213a8c47b <unavailable> + 5243

    5    libc.so.6                          0x00002b0722148460 __libc_start_main +
    245

    6    tmpvfop1qc6                        0x0000559213a8c069 <unavailable> + 4201

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9z1wmmag/tmp9z1wmmag.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b6f9f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b6f6ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b6f6eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b6f6ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9z1wmmag                        0x000055eb078c337d <unavailable> + 4989

    5    libc.so.6                          0x00002b9b6fbe0460 __libc_start_main +
    245

    6    tmp9z1wmmag                        0x000055eb078c3009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    return lastChar.isLetter\
    \ && !secondLastChar.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ac40b7c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac40b4b8561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac40b4b8286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac40b4b813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac40b4b7bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ac40b5eb6c9 <unavailable> + 2692809

    6    tmpkchyfwf4                        0x000056244e17dd76 <unavailable> + 7542

    7    tmpkchyfwf4                        0x000056244e17d6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002ac40b9ad460 __libc_start_main +
    245

    9    tmpkchyfwf4                        0x000056244e17d209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: 1
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n    let lastCharString\
    \ = txt[lastCharIndex]\n    let lastCharStringArray = Array(lastCharString)\n\
    \    let lastCharStringArrayFirst = lastCharStringArray[0]\n    let lastCharStringArrayFirstInt\
    \ = Int(lastCharStringArrayFirst.asciiValue!)\n    if lastCharStringArrayFirstInt\
    \ >= 65 && lastCharStringArrayFirstInt <= 90 {\n        return true\n    }\n \
    \   if lastCharStringArrayFirstInt >= 97 && lastCharStringArrayFirstInt <= 122\
    \ {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp6vrj7ejq.swift:25:37: error: missing argument label 'arrayLiteral:'\
    \ in call\n    let lastCharStringArray = Array(lastCharString)\n             \
    \                       ^\n                                    arrayLiteral: \n"
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before:\
    \ txt.endIndex)\n    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpo6uuwg9o/tmpo6uuwg9o.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adaa2f84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adaa2c7bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adaa2c7b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adaa2c7a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo6uuwg9o                        0x000055823a07462b <unavailable> + 5675

    5    libc.so.6                          0x00002adaa3170460 __libc_start_main +
    245

    6    tmpo6uuwg9o                        0x000055823a074219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpeovx7y6o/tmpeovx7y6o.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99a8211c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99a7f08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99a7f08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99a7f077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeovx7y6o                        0x000055b1aa1fc61b <unavailable> + 5659

    5    libc.so.6                          0x00002b99a83fd460 __libc_start_main +
    245

    6    tmpeovx7y6o                        0x000055b1aa1fc209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: 1
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharIsLetter = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n\
    \    let lastCharIsNotPartOfWord = txt[lastCharIndex] == \" \"\n    return lastCharIsLetter\
    \ && lastCharIsNotPartOfWord\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpn3eqsl3e.swift:21:28: error: cannot find 'CharacterSet' in scope\n\
    \    let lastCharIsLetter = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n\
    \                           ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    return lastChar.isLetter && !lastChar.isNumber\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpubg6yvpo/tmpubg6yvpo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99b2890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99b2587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99b2587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99b25867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpubg6yvpo                        0x00005595f2ef04bd <unavailable> + 5309

    5    libc.so.6                          0x00002b99b2a7c460 __libc_start_main +
    245

    6    tmpubg6yvpo                        0x00005595f2ef0149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpopj5d8t8/tmpopj5d8t8.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63f28d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63f25cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63f25cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63f25ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopj5d8t8                        0x00005648af06642d <unavailable> + 5165

    5    libc.so.6                          0x00002b63f2ac0460 __libc_start_main +
    245

    6    tmpopj5d8t8                        0x00005648af0660b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    return lastChar?.isLetter ?? false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpn5y2ewtq/tmpn5y2ewtq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe0540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe0237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe0237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe02367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5y2ewtq                        0x000055c5bf41447d <unavailable> + 5245

    5    libc.so.6                          0x00002b4fe072c460 __libc_start_main +
    245

    6    tmpn5y2ewtq                        0x000055c5bf414109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n    let lastCharIsLetter\
    \ = txt[lastCharIndex].isLetter\n    return lastCharIsLetter\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp6eexisiz/tmp6eexisiz.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06389b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06386acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06386ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06386ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6eexisiz                        0x000055a871ec558d <unavailable> + 5517

    5    libc.so.6                          0x00002b0638ba1460 __libc_start_main +
    245

    6    tmp6eexisiz                        0x000055a871ec5219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396
- exit_code: -4
  program: "\n/// Create a function that returns True if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and False otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpsp1tk3pi/tmpsp1tk3pi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7078413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b707810ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b707810a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70781097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsp1tk3pi                        0x0000564ad05bf2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b70785ff460 __libc_start_main +
    245

    6    tmpsp1tk3pi                        0x0000564ad05beee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824396

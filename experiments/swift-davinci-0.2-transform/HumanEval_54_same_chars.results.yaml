language: swift
name: HumanEval_54_same_chars
results:
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    let s0 = Array(s0)\n  \
    \  let s1 = Array(s1)\n    var s0_counts = [Character: Int]()\n    var s1_counts\
    \ = [Character: Int]()\n    for c in s0 {\n        if let count = s0_counts[c]\
    \ {\n            s0_counts[c] = count + 1\n        } else {\n            s0_counts[c]\
    \ = 1\n        }\n    }\n    for c in s1 {\n        if let count = s1_counts[c]\
    \ {\n            s1_counts[c] = count + 1\n        } else {\n            s1_counts[c]\
    \ = 1\n        }\n    }\n    for (c, count) in s0_counts {\n        if let s1_count\
    \ = s1_counts[c] {\n            if s1_count < count {\n                return\
    \ false\n            }\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp8of8n5e1/tmp8of8n5e1.swift:61: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb75c92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb75989b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb75989988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb759887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8of8n5e1                        0x00005556dde8c9f8 <unavailable> + 6648

    5    libc.so.6                          0x00002acb75e7e460 __libc_start_main +
    245

    6    tmp8of8n5e1                        0x00005556dde8c469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let index = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ index)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplrfz6ue9/tmplrfz6ue9.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fc33fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fc30f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fc30f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fc30f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplrfz6ue9                        0x000055cea41d6523 <unavailable> + 5411

    5    libc.so.6                          0x00002b6fc35e9460 __libc_start_main +
    245

    6    tmplrfz6ue9                        0x000055cea41d6179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var chars = [Character:\
    \ Int]()\n    for c in s0 {\n        chars[c] = (chars[c] ?? 0) + 1\n    }\n \
    \   for c in s1 {\n        chars[c] = (chars[c] ?? 0) - 1\n    }\n    for (_,\
    \ v) in chars {\n        if v != 0 {\n            return false\n        }\n  \
    \  }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpgqgfg0wp/tmpgqgfg0wp.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adb0def7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adb0dbeeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adb0dbee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adb0dbed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgqgfg0wp                        0x000056010b9a1623 <unavailable> + 5667

    5    libc.so.6                          0x00002adb0e0e3460 __libc_start_main +
    245

    6    tmpgqgfg0wp                        0x000056010b9a1279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.index(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp6ypl340n/tmp6ypl340n.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1619488c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b161917fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b161917f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b161917e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ypl340n                        0x000055d141d896b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b1619674460 __libc_start_main +
    245

    6    tmp6ypl340n                        0x000055d141d89129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.index(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp6ypl340n/tmp6ypl340n.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1619488c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b161917fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b161917f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b161917e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ypl340n                        0x000055d141d896b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b1619674460 __libc_start_main +
    245

    6    tmp6ypl340n                        0x000055d141d89129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.index(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp6ypl340n/tmp6ypl340n.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1619488c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b161917fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b161917f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b161917e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ypl340n                        0x000055d141d896b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b1619674460 __libc_start_main +
    245

    6    tmp6ypl340n                        0x000055d141d89129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    s0_chars.sortInPlace()\n\
    \    s1_chars.sortInPlace()\n    return s0_chars == s1_chars\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpjq_9cbab.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpjq_9cbab.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpjq_9cbab.swift:18:14: error: value of type '[String]' has no member\
    \ 'sortInPlace'\n    s0_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmpjq_9cbab.swift:19:14:\
    \ error: value of type '[String]' has no member 'sortInPlace'\n    s1_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let idx = s1.firstIndex(of: c) {\n     \
    \       s1.remove(at: idx)\n        } else {\n            return false\n     \
    \   }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp9vzrrhsd/tmp9vzrrhsd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5536139c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5535e30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5535e30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5535e2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9vzrrhsd                        0x0000559c045276b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b5536325460 __libc_start_main +
    245

    6    tmp9vzrrhsd                        0x0000559c04527129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var chars0 = [Character](s0)\n\
    \    var chars1 = [Character](s1)\n    chars0.sort()\n    chars1.sort()\n    return\
    \ chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp0dwnq023/tmp0dwnq023.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a624a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a621a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a621a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a6219f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0dwnq023                        0x00005607cf8d05c3 <unavailable> + 5571

    5    libc.so.6                          0x00002b1a62695460 __libc_start_main +
    245

    6    tmp0dwnq023                        0x00005607cf8d0219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let i = s1_chars.index(of: c) {\n            s1_chars.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpchk9q9wc.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:19:29: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let i = s1_chars.index(of: c) {\n         \
    \                   ^\n/tmp/tmpchk9q9wc.swift:19:29: note: use 'firstIndex(of:)'\
    \ instead\n        if let i = s1_chars.index(of: c) {\n                      \
    \      ^~~~~\n                            firstIndex\n/tmp/tmpchk9q9wc.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let index = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ index)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplrfz6ue9/tmplrfz6ue9.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fc33fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fc30f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fc30f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fc30f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplrfz6ue9                        0x000055cea41d6523 <unavailable> + 5411

    5    libc.so.6                          0x00002b6fc35e9460 __libc_start_main +
    245

    6    tmplrfz6ue9                        0x000055cea41d6179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    let s0 = Array(s0)\n  \
    \  let s1 = Array(s1)\n    var s0_count = Array(repeating: 0, count: 26)\n   \
    \ var s1_count = Array(repeating: 0, count: 26)\n    for i in 0..<s0.count {\n\
    \        s0_count[Int(s0[i].asciiValue! - 97)] += 1\n    }\n    for i in 0..<s1.count\
    \ {\n        s1_count[Int(s1[i].asciiValue! - 97)] += 1\n    }\n    for i in 0..<26\
    \ {\n        if s0_count[i] != s1_count[i] {\n            return false\n     \
    \   }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp4p79pyeq/tmp4p79pyeq.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b290a4bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b290a1b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b290a1b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b290a1b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4p79pyeq                        0x000055a5154cb8d3 <unavailable> + 6355

    5    libc.so.6                          0x00002b290a6a8460 __libc_start_main +
    245

    6    tmp4p79pyeq                        0x000055a5154cb529 <unavailable> + 5417

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    var s0_count = [Character: Int]()\n    var s1_count = [Character:\
    \ Int]()\n    for c in s0 {\n        if let count = s0_count[c] {\n          \
    \  s0_count[c] = count + 1\n        } else {\n            s0_count[c] = 1\n  \
    \      }\n    }\n    for c in s1 {\n        if let count = s1_count[c] {\n   \
    \         s1_count[c] = count + 1\n        } else {\n            s1_count[c] =\
    \ 1\n        }\n    }\n    for (c, count) in s0_count {\n        if let s1_count\
    \ = s1_count[c] {\n            if s1_count < count {\n                return false\n\
    \            }\n        } else {\n            return false\n        }\n    }\n\
    \    for (c, count) in s1_count {\n        if let s0_count = s0_count[c] {\n \
    \           if s0_count < count {\n                return false\n            }\n\
    \        } else {\n            return false\n        }\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpobmztnp1/tmpobmztnp1.swift:68: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b099ce19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b099cb10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b099cb10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b099cb0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpobmztnp1                        0x00005641bc2cd623 <unavailable> + 5667

    5    libc.so.6                          0x00002b099d005460 __libc_start_main +
    245

    6    tmpobmztnp1                        0x00005641bc2cd279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for _\
    \ in 0..<s0.count {\n        let c0 = s0.removeFirst()\n        if let i = s1.firstIndex(of:\
    \ c0) {\n            s1.remove(at: i)\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    ) == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0:\
    \ \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmphpihtwx3/tmphpihtwx3.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c925b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c922acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c922ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c922ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphpihtwx3                        0x00005585cac65693 <unavailable> + 5779

    5    libc.so.6                          0x00002b4c927a1460 __libc_start_main +
    245

    6    tmphpihtwx3                        0x00005585cac652e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    var s0_len = s0.count\n    var s1_len = s1.count\n    if s0_len >\
    \ s1_len {\n        s0_len = s1_len\n        s1_len = s0.count\n        s0 = s1\n\
    \        s1 = s0\n    }\n    for i in 0..<s0_len {\n        let c = s0[s0.index(s0.startIndex,\
    \ offsetBy: i)]\n        if let idx = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ idx)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpkfdp9z8k/tmpkfdp9z8k.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2bc1ad5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2bc17ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2bc17cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2bc17cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkfdp9z8k                        0x0000559f70770afe <unavailable> + 6910

    5    libc.so.6                          0x00002b2bc1cc1460 __libc_start_main +
    245

    6    tmpkfdp9z8k                        0x0000559f70770359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let index = s1_chars.index(of: c) {\n          \
    \  s1_chars.remove(at: index)\n        } else {\n            return false\n  \
    \      }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpop_7vfww.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpop_7vfww.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpop_7vfww.swift:19:33: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let index = s1_chars.index(of: c) {\n     \
    \                           ^\n/tmp/tmpop_7vfww.swift:19:33: note: use 'firstIndex(of:)'\
    \ instead\n        if let index = s1_chars.index(of: c) {\n                  \
    \              ^~~~~\n                                firstIndex\n/tmp/tmpop_7vfww.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while s0.count > 0 {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp3tg6_kjr/tmp3tg6_kjr.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cb09e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cb06dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cb06db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cb06da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3tg6_kjr                        0x000055f4d54776e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b2cb0bd0460 __libc_start_main +
    245

    6    tmp3tg6_kjr                        0x000055f4d5477159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_counts = [Character:\
    \ Int]()\n    var s1_counts = [Character: Int]()\n    for c in s0 {\n        if\
    \ let count = s0_counts[c] {\n            s0_counts[c] = count + 1\n        }\
    \ else {\n            s0_counts[c] = 1\n        }\n    }\n    for c in s1 {\n\
    \        if let count = s1_counts[c] {\n            s1_counts[c] = count + 1\n\
    \        } else {\n            s1_counts[c] = 1\n        }\n    }\n    return\
    \ s0_counts == s1_counts\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpngxythk0/tmpngxythk0.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad691b38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad69182fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad69182f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad69182e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngxythk0                        0x000055b986607513 <unavailable> + 5395

    5    libc.so.6                          0x00002ad691d24460 __libc_start_main +
    245

    6    tmpngxythk0                        0x000055b986607169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    let s0 = Array(s0)\n  \
    \  let s1 = Array(s1)\n    let s0_count = s0.count\n    let s1_count = s1.count\n\
    \    if s0_count != s1_count {\n        return false\n    }\n    var s0_index\
    \ = 0\n    var s1_index = 0\n    while s0_index < s0_count {\n        if s0[s0_index]\
    \ == s1[s1_index] {\n            s0_index += 1\n            s1_index += 1\n  \
    \      } else {\n            s1_index += 1\n        }\n        if s1_index ==\
    \ s1_count {\n            return false\n        }\n    }\n    return true\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp691r4gwl/tmp691r4gwl.swift:52: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af31b42ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af31b125b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af31b125988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af31b1247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp691r4gwl                        0x0000563574a614b3 <unavailable> + 5299

    5    libc.so.6                          0x00002af31b61a460 __libc_start_main +
    245

    6    tmp691r4gwl                        0x0000563574a61109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = Array(s0)\n  \
    \  var s1 = Array(s1)\n    s0.sort()\n    s1.sort()\n    return s0 == s1\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpvbyaor7l/tmpvbyaor7l.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a05657c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a0534eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a0534e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a0534d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvbyaor7l                        0x000055a5c29295c3 <unavailable> + 5571

    5    libc.so.6                          0x00002b3a05843460 __libc_start_main +
    245

    6    tmpvbyaor7l                        0x000055a5c2929219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.index(of: c) {\n        \
    \    s1.remove(at: index)\n        } else {\n            return false\n      \
    \  }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpqdnsqw24/tmpqdnsqw24.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab99156dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab991264b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab991264988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab9912637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdnsqw24                        0x00005605ae2356b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ab991759460 __libc_start_main +
    245

    6    tmpqdnsqw24                        0x00005605ae235129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for _\
    \ in 0..<s0.count {\n        let c0 = s0.removeFirst()\n        if let index =\
    \ s1.firstIndex(of: c0) {\n            s1.remove(at: index)\n        } else {\n\
    \            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpdgaik6wn/tmpdgaik6wn.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dcaca2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dca999b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dca999988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dca9987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdgaik6wn                        0x0000560c9aa32693 <unavailable> + 5779

    5    libc.so.6                          0x00002b6dcae8e460 __libc_start_main +
    245

    6    tmpdgaik6wn                        0x0000560c9aa322e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        if let i = s1.firstIndex(of: c0) {\n            s1.remove(at: i)\n  \
    \      } else {\n            return false\n        }\n    }\n    return s0.isEmpty\
    \ && s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplswae2m6/tmplswae2m6.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c95914c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c9560bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c9560b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c9560a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplswae2m6                        0x00005589f0c0f503 <unavailable> + 5379

    5    libc.so.6                          0x00002b4c95b00460 __libc_start_main +
    245

    6    tmplswae2m6                        0x00005589f0c0f159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let i = s1_chars.index(of: c) {\n            s1_chars.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpchk9q9wc.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:19:29: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let i = s1_chars.index(of: c) {\n         \
    \                   ^\n/tmp/tmpchk9q9wc.swift:19:29: note: use 'firstIndex(of:)'\
    \ instead\n        if let i = s1_chars.index(of: c) {\n                      \
    \      ^~~~~\n                            firstIndex\n/tmp/tmpchk9q9wc.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let index = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ index)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplrfz6ue9/tmplrfz6ue9.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fc33fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fc30f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fc30f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fc30f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplrfz6ue9                        0x000055cea41d6523 <unavailable> + 5411

    5    libc.so.6                          0x00002b6fc35e9460 __libc_start_main +
    245

    6    tmplrfz6ue9                        0x000055cea41d6179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let i = s1_chars.index(of: c) {\n            s1_chars.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpchk9q9wc.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:19:29: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let i = s1_chars.index(of: c) {\n         \
    \                   ^\n/tmp/tmpchk9q9wc.swift:19:29: note: use 'firstIndex(of:)'\
    \ instead\n        if let i = s1_chars.index(of: c) {\n                      \
    \      ^~~~~\n                            firstIndex\n/tmp/tmpchk9q9wc.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = Array(s0)\n  \
    \  var s1 = Array(s1)\n    s0.sort()\n    s1.sort()\n    return s0 == s1\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpvbyaor7l/tmpvbyaor7l.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a05657c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a0534eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a0534e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a0534d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvbyaor7l                        0x000055a5c29295c3 <unavailable> + 5571

    5    libc.so.6                          0x00002b3a05843460 __libc_start_main +
    245

    6    tmpvbyaor7l                        0x000055a5c2929219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var chars0 = [Character](s0)\n\
    \    var chars1 = [Character](s1)\n    chars0.sort()\n    chars1.sort()\n    return\
    \ chars0 == chars1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp0dwnq023/tmp0dwnq023.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a624a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a621a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a621a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a6219f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0dwnq023                        0x00005607cf8d05c3 <unavailable> + 5571

    5    libc.so.6                          0x00002b1a62695460 __libc_start_main +
    245

    6    tmp0dwnq023                        0x00005607cf8d0219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let i = s1_chars.index(of: c) {\n            s1_chars.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpchk9q9wc.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:19:29: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let i = s1_chars.index(of: c) {\n         \
    \                   ^\n/tmp/tmpchk9q9wc.swift:19:29: note: use 'firstIndex(of:)'\
    \ instead\n        if let i = s1_chars.index(of: c) {\n                      \
    \      ^~~~~\n                            firstIndex\n/tmp/tmpchk9q9wc.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let i = s1_chars.index(of: c) {\n            s1_chars.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpchk9q9wc.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpchk9q9wc.swift:19:29: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let i = s1_chars.index(of: c) {\n         \
    \                   ^\n/tmp/tmpchk9q9wc.swift:19:29: note: use 'firstIndex(of:)'\
    \ instead\n        if let i = s1_chars.index(of: c) {\n                      \
    \      ^~~~~\n                            firstIndex\n/tmp/tmpchk9q9wc.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var chars = [Character:\
    \ Int]()\n    for c in s0 {\n        if let count = chars[c] {\n            chars[c]\
    \ = count + 1\n        } else {\n            chars[c] = 1\n        }\n    }\n\
    \    for c in s1 {\n        if let count = chars[c] {\n            chars[c] =\
    \ count - 1\n        } else {\n            chars[c] = -1\n        }\n    }\n \
    \   for (_, count) in chars {\n        if count != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    ) == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0:\
    \ \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpke4inf4c/tmpke4inf4c.swift:52: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1920abec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b19207b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b19207b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b19207b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpke4inf4c                        0x0000556c13985623 <unavailable> + 5667

    5    libc.so.6                          0x00002b1920caa460 __libc_start_main +
    245

    6    tmpke4inf4c                        0x0000556c13985279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ c in s0_chars {\n        if let index = s1_chars.index(of: c) {\n          \
    \  s1_chars.remove(at: index)\n        } else {\n            return false\n  \
    \      }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpop_7vfww.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpop_7vfww.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpop_7vfww.swift:19:33: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let index = s1_chars.index(of: c) {\n     \
    \                           ^\n/tmp/tmpop_7vfww.swift:19:33: note: use 'firstIndex(of:)'\
    \ instead\n        if let index = s1_chars.index(of: c) {\n                  \
    \              ^~~~~\n                                firstIndex\n/tmp/tmpop_7vfww.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.remove(at:\
    \ s0.startIndex)\n        let c1 = s1.remove(at: s1.startIndex)\n        if c0\
    \ != c1 {\n            return false\n        }\n    }\n    return s0.isEmpty &&\
    \ s1.isEmpty\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"\
    eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\"\
    , s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\"\
    ) == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmpj_vhm813/tmpj_vhm813.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7fb96ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7fb661b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7fb661988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7fb6607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_vhm813                        0x0000561faa95c3f3 <unavailable> + 5107

    5    libc.so.6                          0x00002af7fbb56460 __libc_start_main +
    245

    6    tmpj_vhm813                        0x0000561faa95c049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var c0 = s0.characters.sorted()\n\
    \    var c1 = s1.characters.sorted()\n    return c0 == c1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpt0zjmke0.swift:16:17: error: 'characters' is unavailable: Please\
    \ use String directly\n    var c0 = s0.characters.sorted()\n                ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmpt0zjmke0.swift:17:17:\
    \ error: 'characters' is unavailable: Please use String directly\n    var c1 =\
    \ s1.characters.sorted()\n                ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n/tmp/tmpt0zjmke0.swift:16:9: warning: variable\
    \ 'c0' was never mutated; consider changing to 'let' constant\n    var c0 = s0.characters.sorted()\n\
    \    ~~~ ^\n    let\n/tmp/tmpt0zjmke0.swift:17:9: warning: variable 'c1' was never\
    \ mutated; consider changing to 'let' constant\n    var c1 = s1.characters.sorted()\n\
    \    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for _\
    \ in 0..<s0.count {\n        let c0 = s0.removeFirst()\n        if let i = s1.firstIndex(of:\
    \ c0) {\n            s1.remove(at: i)\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    ) == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0:\
    \ \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmphpihtwx3/tmphpihtwx3.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c925b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c922acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c922ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c922ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphpihtwx3                        0x00005585cac65693 <unavailable> + 5779

    5    libc.so.6                          0x00002b4c927a1460 __libc_start_main +
    245

    6    tmphpihtwx3                        0x00005585cac652e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let index = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ index)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmplrfz6ue9/tmplrfz6ue9.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fc33fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fc30f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fc30f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fc30f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplrfz6ue9                        0x000055cea41d6523 <unavailable> + 5411

    5    libc.so.6                          0x00002b6fc35e9460 __libc_start_main +
    245

    6    tmplrfz6ue9                        0x000055cea41d6179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = s0.characters.map\
    \ { String($0) }\n    var s1_chars = s1.characters.map { String($0) }\n    for\
    \ char in s0_chars {\n        if let index = s1_chars.index(of: char) {\n    \
    \        s1_chars.remove(at: index)\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    ) == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0:\
    \ \"aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3a3q8i59.swift:16:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = s0.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3a3q8i59.swift:17:23: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = s1.characters.map { String($0) }\n \
    \                     ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3a3q8i59.swift:19:33: warning: 'index(of:)' is deprecated: renamed\
    \ to 'firstIndex(of:)'\n        if let index = s1_chars.index(of: char) {\n  \
    \                              ^\n/tmp/tmp3a3q8i59.swift:19:33: note: use 'firstIndex(of:)'\
    \ instead\n        if let index = s1_chars.index(of: char) {\n               \
    \                 ^~~~~\n                                firstIndex\n/tmp/tmp3a3q8i59.swift:16:9:\
    \ warning: variable 's0_chars' was never mutated; consider changing to 'let' constant\n\
    \    var s0_chars = s0.characters.map { String($0) }\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty && !s1.isEmpty {\n        let c0 = s0.removeFirst()\n\
    \        let c1 = s1.removeFirst()\n        if c0 != c1 {\n            return\
    \ false\n        }\n    }\n    return s0.isEmpty && s1.isEmpty\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpw1q7q8hk/tmpw1q7q8hk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b668a014c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6689d0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6689d0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6689d0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1q7q8hk                        0x000055dad5284423 <unavailable> + 5155

    5    libc.so.6                          0x00002b668a200460 __libc_start_main +
    245

    6    tmpw1q7q8hk                        0x000055dad5284079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = [Character](s0)\n\
    \    var s1_chars = [Character](s1)\n    s0_chars.sort()\n    s1_chars.sort()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp46_qqo4p/tmp46_qqo4p.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8283c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8280c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8280c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8280bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp46_qqo4p                        0x0000557a84fcd5c3 <unavailable> + 5571

    5    libc.so.6                          0x00002af8285b5460 __libc_start_main +
    245

    6    tmp46_qqo4p                        0x0000557a84fcd219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    while !s0.isEmpty {\n        let c = s0.removeFirst()\n        if\
    \ let i = s1.firstIndex(of: c) {\n            s1.remove(at: i)\n        } else\
    \ {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\"\
    ) == true)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0:\
    \ \"dddddddabc\", s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1:\
    \ \"dddddddabc\") == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\"\
    ) == false)\nassert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpx0qaytjg/tmpx0qaytjg.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8db6932c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8db6629b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8db6629988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8db66287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx0qaytjg                        0x000055a4eede76e8 <unavailable> + 5864

    5    libc.so.6                          0x00002b8db6b1e460 __libc_start_main +
    245

    6    tmpx0qaytjg                        0x000055a4eede7159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for _\
    \ in 0..<s0.count {\n        let c0 = s0.removeFirst()\n        if let i = s1.firstIndex(of:\
    \ c0) {\n            s1.remove(at: i)\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    ) == false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\n\
    assert(same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0:\
    \ \"aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmphpihtwx3/tmphpihtwx3.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c925b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c922acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c922ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c922ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphpihtwx3                        0x00005585cac65693 <unavailable> + 5779

    5    libc.so.6                          0x00002b4c927a1460 __libc_start_main +
    245

    6    tmphpihtwx3                        0x00005585cac652e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660014069
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let idx = s1.firstIndex(of: c) {\n     \
    \       s1.remove(at: idx)\n        } else {\n            return false\n     \
    \   }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmp9vzrrhsd/tmp9vzrrhsd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5536139c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5535e30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5535e30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5535e2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9vzrrhsd                        0x0000559c045276b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b5536325460 __libc_start_main +
    245

    6    tmp9vzrrhsd                        0x0000559c04527129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    if s0.count != s1.count {\n        return false\n    }\n    for c\
    \ in s0 {\n        if let i = s1.firstIndex(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmptojgnz95/tmptojgnz95.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9b9f6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9b9c63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9b9c63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9b9c627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptojgnz95                        0x00005611a89a8523 <unavailable> + 5411

    5    libc.so.6                          0x00002ac9ba158460 __libc_start_main +
    245

    6    tmptojgnz95                        0x00005611a89a8179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: 1
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0_chars = Array(s0.characters)\n\
    \    var s1_chars = Array(s1.characters)\n    s0_chars.sortInPlace()\n    s1_chars.sortInPlace()\n\
    \    return s0_chars == s1_chars\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3s7m4877.swift:16:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s0_chars = Array(s0.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:17:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    var s1_chars = Array(s1.characters)\n             \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp3s7m4877.swift:18:14: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'sortInPlace'\n    s0_chars.sortInPlace()\n\
    \    ~~~~~~~~ ^~~~~~~~~~~\n/tmp/tmp3s7m4877.swift:19:14: error: value of type\
    \ '[String.Element]' (aka 'Array<Character>') has no member 'sortInPlace'\n  \
    \  s1_chars.sortInPlace()\n    ~~~~~~~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.index(of: c) {\n            s1.remove(at:\
    \ i)\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"abcd\", s1: \"\
    dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1: \"abcd\") ==\
    \ true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") == false)\nassert(same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0: \"eabcdzzzz\"\
    , s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"aabb\", s1: \"\
    aaccc\") == false)"
  status: Exception
  stderr: 'tmp6ypl340n/tmp6ypl340n.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1619488c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b161917fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b161917f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b161917e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ypl340n                        0x000055d141d896b8 <unavailable> + 5816

    5    libc.so.6                          0x00002b1619674460 __libc_start_main +
    245

    6    tmp6ypl340n                        0x000055d141d89129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let index = s1.firstIndex(of: c) {\n   \
    \         s1.remove(at: index)\n        } else {\n            return false\n \
    \       }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpffyfr1fn/tmpffyfr1fn.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad86da6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad86d761b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad86d761988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad86d7607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffyfr1fn                        0x00005590956c76b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ad86dc56460 __libc_start_main +
    245

    6    tmpffyfr1fn                        0x00005590956c7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975
- exit_code: -4
  program: "\n/// Check if two words have the same characters.\n/// >>> same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\")\n/// true\n/// >>> same_chars(s0:\
    \ \"abcd\", s1: \"dddddddabc\")\n/// true\n/// >>> same_chars(s0: \"dddddddabc\"\
    , s1: \"abcd\")\n/// true\n/// >>> same_chars(s0: \"eabcd\", s1: \"dddddddabc\"\
    )\n/// false\n/// >>> same_chars(s0: \"abcd\", s1: \"dddddddabce\")\n/// false\n\
    /// >>> same_chars(s0: \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\")\n/// false\n\
    func same_chars(s0: String, s1: String) -> Bool {\n    var s0 = s0\n    var s1\
    \ = s1\n    for c in s0 {\n        if let i = s1.firstIndex(of: c) {\n       \
    \     s1.remove(at: i)\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddeddabc\") == true)\nassert(same_chars(s0: \"\
    abcd\", s1: \"dddddddabc\") == true)\nassert(same_chars(s0: \"dddddddabc\", s1:\
    \ \"abcd\") == true)\nassert(same_chars(s0: \"eabcd\", s1: \"dddddddabc\") ==\
    \ false)\nassert(same_chars(s0: \"abcd\", s1: \"dddddddabcf\") == false)\nassert(same_chars(s0:\
    \ \"eabcdzzzz\", s1: \"dddzzzzzzzddddabc\") == false)\nassert(same_chars(s0: \"\
    aabb\", s1: \"aaccc\") == false)"
  status: Exception
  stderr: 'tmpsphy_ik7/tmpsphy_ik7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9bc332c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9bc029b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9bc029988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9bc0287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsphy_ik7                        0x000055de66bfc6b8 <unavailable> + 5816

    5    libc.so.6                          0x00002ba9bc51e460 __libc_start_main +
    245

    6    tmpsphy_ik7                        0x000055de66bfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013975

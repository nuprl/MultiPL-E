name: HumanEval_30_get_positive
language: swift
prompt: "\n/// Return only positive numbers in the list.\n/// >>> get_positive(l:\
  \ [-1, 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive(l: [5, 3, -5, 2, -3, 3,\
  \ 9, 0, 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfunc get_positive(l: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_positive(l: [-1, -2, 4, 5, 6]) == [4,\
  \ 5, 6])\nassert(get_positive(l: [5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5,\
  \ 3, 2, 3, 3, 9, 123, 1])\nassert(get_positive(l: [-1, -2]) == [] as [Int])\nassert(get_positive(l:\
  \ [] as [Int]) == [] as [Int])"
completions: ["    var result: [Int] = []\n    for item in l {\n        if item >\
    \ 0 {\n            result.append(item)\n        }\n    }\n    return result",
  '    return l.filter { $0 > 0 }', "    var result = [Int]()\n    for i in l {\n\
    \        if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n \
    \           result.append(i)\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n    for i in l {\n\
    \        if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n \
    \           result.append(i)\n        }\n    }\n    return result", '    return
    l.filter { $0 > 0 }', "    var result = [Int]()\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n    for i in l {\n\
    \        if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n   \
    \ for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in l {\n  \
    \      if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', '    return l.filter({$0 > 0})',
  "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", '    return l.filter { $0 > 0 }', "    var positive_list\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            positive_list.append(i)\n\
    \        }\n    }\n    return positive_list", "    var result = [Int]()\n    for\
    \ i in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter({ $0 > 0 })', "  \
    \  var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var positive: [Int] = []\n    for\
    \ i in l {\n        if i > 0 {\n            positive.append(i)\n        }\n  \
    \  }\n    return positive", '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter({$0 > 0})', '    return
    l.filter({$0 > 0})', "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n    for i in l {\n\
    \        if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }',
  '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', '    return
    l.filter { $0 > 0 }', "    var result: [Int] = []\n    for num in l {\n      \
    \  if num > 0 {\n            result.append(num)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }',
  '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for i in l {\n        if i\
    \ > 0 {\n            result.append(i)\n        }\n    }\n    return result", '    return
    l.filter({ $0 > 0 })', '    return l.filter { $0 > 0 }', "    var result = [Int]()\n\
    \    for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', '    return
    l.filter { $0 > 0 }', '    return l.filter({$0 > 0})', '    return l.filter {
    $0 > 0 }', '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }',
  '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', '    return
    l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', '    return l.filter {
    $0 > 0 }', '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }',
  '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', '    return
    l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result: [Int]\
    \ = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n \
    \       }\n    }\n    return result", '    return l.filter { $0 > 0 }', "    var\
    \ result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter({$0 > 0})', "    var\
    \ result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var result = [Int]()\n    for i in l {\n        if i >\
    \ 0 {\n            result.append(i)\n        }\n    }\n    return result", '    return
    l.filter({$0 > 0})', '    return l.filter { $0 > 0 }', '    return l.filter({$0
    > 0})', "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n  \
    \          result.append(i)\n        }\n    }\n    return result", '    return
    l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result = [Int]()\n\
    \    for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", '    return l.filter { $0 > 0 }', "    var result\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", '    return l.filter { $0 > 0 }', "    var positive_list\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            positive_list.append(i)\n\
    \        }\n    }\n    return positive_list", "    var result: [Int] = []\n  \
    \  for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    for i in l {\n    \
    \    if i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    for i\
    \ in l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n\
    \    return result", '    return l.filter { $0 > 0 }', '    return l.filter {
    $0 > 0 }', "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n\
    \            result.append(i)\n        }\n    }\n    return result", '    return
    l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result: [Int]\
    \ = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n \
    \       }\n    }\n    return result", "    var result: [Int] = []\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in l {\n        if i\
    \ > 0 {\n            result.append(i)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var positive_list: [Int] = []\n    for i in l {\n        if i > 0 {\n      \
    \      positive_list.append(i)\n        }\n    }\n    return positive_list", " \
    \   var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', '    return
    l.filter { $0 > 0 }', "    var result = [Int]()\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  '    return l.filter({$0 > 0})', "    var result = [Int]()\n    for i in l {\n \
    \       if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n   \
    \ for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in l {\n  \
    \      if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }',
  '    return l.filter { $0 > 0 }', "    var result = [Int]()\n    for i in l {\n\
    \        if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n \
    \           result.append(i)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var positive_list: [Int] = []\n    for i in l {\n        if i > 0 {\n      \
    \      positive_list.append(i)\n        }\n    }\n    return positive_list", " \
    \   var result: [Int] = []\n    for i in l {\n        if i > 0 {\n           \
    \ result.append(i)\n        }\n    }\n    return result", '    return l.filter
    { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n \
    \   for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", '    return l.filter { $0 > 0 }', "    var result\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var new_l = [Int]()\n    for i in l {\n        if i >\
    \ 0 {\n            new_l.append(i)\n        }\n    }\n    return new_l", '    return
    l.filter { $0 > 0 }', "    var result = [Int]()\n    for i in l {\n        if\
    \ i > 0 {\n            result.append(i)\n        }\n    }\n    return result",
  "    var pos = [Int]()\n    for i in l {\n        if i > 0 {\n            pos.append(i)\n\
    \        }\n    }\n    return pos", "    var result: [Int] = []\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var positive_list = [Int]()\n    for num in l {\n    \
    \    if num > 0 {\n            positive_list.append(num)\n        }\n    }\n \
    \   return positive_list", '    return l.filter { $0 > 0 }', "    var result:\
    \ [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", '    return l.filter({ $0 > 0 })', "    var result = [Int]()\n\
    \    for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in l {\n  \
    \      if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", '    return l.filter { $0 > 0 }', "    var result: [Int] = []\n   \
    \ for i in l {\n        if i > 0 {\n            result.append(i)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    for i in l {\n  \
    \      if i > 0 {\n            result.append(i)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n\
    \            result.append(i)\n        }\n    }\n    return result", "    var\
    \ result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in l {\n        if i\
    \ > 0 {\n            result.append(i)\n        }\n    }\n    return result", '    return
    l.filter { $0 > 0 }', '    return l.filter { $0 > 0 }', "    var result: [Int]\
    \ = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n \
    \       }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", '    return l.filter { $0 > 0 }', "    var result: [Int] =\
    \ []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n   \
    \     }\n    }\n    return result", "    var result: [Int] = []\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", "    var result: [Int] = []\n    for i in l {\n        if i\
    \ > 0 {\n            result.append(i)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", '    return l.filter { $0 > 0 }', "   \
    \ var positive_list = [Int]()\n    for i in l {\n        if i > 0 {\n        \
    \    positive_list.append(i)\n        }\n    }\n    return positive_list", " \
    \   var result: [Int] = []\n    for i in l {\n        if i > 0 {\n           \
    \ result.append(i)\n        }\n    }\n    return result", '    return l.filter
    { $0 > 0 }', "    var result: [Int] = []\n    for i in l {\n        if i > 0 {\n\
    \            result.append(i)\n        }\n    }\n    return result", "    var\
    \ result: [Int] = []\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var positive = [Int]()\n    for i\
    \ in l {\n        if i > 0 {\n            positive.append(i)\n        }\n    }\n\
    \    return positive", '    return l.filter { $0 > 0 }', '    return l.filter
    { $0 > 0 }', "    var pos = [Int]()\n    for i in l {\n        if i > 0 {\n  \
    \          pos.append(i)\n        }\n    }\n    return pos", "    var result =\
    \ [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    for i in\
    \ l {\n        if i > 0 {\n            result.append(i)\n        }\n    }\n  \
    \  return result", '    return l.filter { $0 > 0 }', '    return l.filter({ $0
    > 0 })', "    var result = [Int]()\n    for i in l {\n        if i > 0 {\n   \
    \         result.append(i)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in l {\n        if i > 0 {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var positive = [Int]()\n    for i\
    \ in l {\n        if i > 0 {\n            positive.append(i)\n        }\n    }\n\
    \    return positive", "    var result: [Int] = []\n    for i in l {\n       \
    \ if i > 0 {\n            result.append(i)\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

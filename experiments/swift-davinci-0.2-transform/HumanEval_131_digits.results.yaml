language: swift
name: HumanEval_131_digits
results:
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let num = Int(String(digit)) {\n            if num % 2 != 0 {\n            \
    \    product *= num\n            }\n        }\n    }\n    return product\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprw2o51_c/tmprw2o51_c.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab604618c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab60430fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab60430f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab60430e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprw2o51_c                        0x0000557b4172e7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ab604804460 __libc_start_main +
    245

    6    tmprw2o51_c                        0x0000557b4172e179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if let\
    \ number = Int(String(char)) {\n            if number % 2 != 0 {\n           \
    \     result *= number\n            }\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz4y7089k/tmpz4y7089k.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae810863c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae81055ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae81055a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8105597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz4y7089k                        0x0000560f2c8fa7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae810a4f460 __libc_start_main +
    245

    6    tmpz4y7089k                        0x0000560f2c8fa179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var product = 1\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5jpl7013/tmp5jpl7013.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e01b41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e01838b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e01838988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e018377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5jpl7013                        0x00005578a0d2e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b5e01d2d460 __libc_start_main +
    245

    6    tmp5jpl7013                        0x00005578a0d2def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        product *= digit\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp220lgwwq/tmp220lgwwq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10395dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10392d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10392d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10392d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp220lgwwq                        0x00005620e88f17b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b10397cb460 __libc_start_main +
    245

    6    tmp220lgwwq                        0x00005620e88f1179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    for i in String(n) {\n        if Int(String(i))!\
    \ % 2 != 0 {\n            sum *= Int(String(i))!\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmpxdvx7wze/tmpxdvx7wze.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2180e51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2180b48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2180b48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2180b477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxdvx7wze                        0x000056511b4b37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b218103d460 __libc_start_main +
    245

    6    tmpxdvx7wze                        0x000056511b4b3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if let\
    \ num = Int(String(char)) {\n            if num % 2 != 0 {\n                result\
    \ *= num\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp9_b6z8nl/tmp9_b6z8nl.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0cbdbbdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0cbd8b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0cbd8b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0cbd8b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9_b6z8nl                        0x0000560fc9ec57b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0cbdda9460 __libc_start_main +
    245

    6    tmp9_b6z8nl                        0x0000560fc9ec5179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        result *= digit\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvit88i64/tmpvit88i64.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcfb74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcfb446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcfb446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcfb4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvit88i64                        0x00005556bb2987b9 <unavailable> + 6073

    5    libc.so.6                          0x00002abcfb93b460 __libc_start_main +
    245

    6    tmpvit88i64                        0x00005556bb298179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for i in String(n) {\n        if Int(String(i))!\
    \ % 2 != 0 {\n            product *= Int(String(i))!\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp2xmfby3j/tmp2xmfby3j.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2649a72c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2649769b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2649769988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b26497687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2xmfby3j                        0x000055f7eba9a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b2649c5e460 __libc_start_main +
    245

    6    tmp2xmfby3j                        0x000055f7eba9a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        product *= digit\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp220lgwwq/tmp220lgwwq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10395dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10392d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10392d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10392d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp220lgwwq                        0x00005620e88f17b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b10397cb460 __libc_start_main +
    245

    6    tmp220lgwwq                        0x00005620e88f1179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        result *= digit\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvit88i64/tmpvit88i64.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcfb74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcfb446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcfb446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcfb4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvit88i64                        0x00005556bb2987b9 <unavailable> + 6073

    5    libc.so.6                          0x00002abcfb93b460 __libc_start_main +
    245

    6    tmpvit88i64                        0x00005556bb298179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let num = Int(String(digit)) {\n            if num % 2 != 0 {\n            \
    \    result *= num\n            }\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_e2jtrt0/tmp_e2jtrt0.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62d872cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62d8423b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62d8423988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62d84227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_e2jtrt0                        0x000055982c06a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b62d8918460 __libc_start_main +
    245

    6    tmp_e2jtrt0                        0x000055982c06a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        result *= digit\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvit88i64/tmpvit88i64.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcfb74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcfb446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcfb446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcfb4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvit88i64                        0x00005556bb2987b9 <unavailable> + 6073

    5    libc.so.6                          0x00002abcfb93b460 __libc_start_main +
    245

    6    tmpvit88i64                        0x00005556bb298179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              product *= intValue\n            }\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfovg2sra/tmpfovg2sra.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27d22cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27d1fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27d1fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27d1fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfovg2sra                        0x000055a001f0b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b27d24b7460 __libc_start_main +
    245

    6    tmpfovg2sra                        0x000055a001f0b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfv3dvlev/tmpfv3dvlev.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b87f4c12c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b87f4909b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b87f4909988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87f49087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfv3dvlev                        0x000055bc312641b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b87f4dfe460 __libc_start_main +
    245

    6    tmpfv3dvlev                        0x000055bc31263e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              product *= intValue\n            }\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfovg2sra/tmpfovg2sra.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27d22cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27d1fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27d1fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27d1fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfovg2sra                        0x000055a001f0b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b27d24b7460 __libc_start_main +
    245

    6    tmpfovg2sra                        0x000055a001f0b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    let digits = String(n).compactMap\
    \ { Int(String($0)) }\n    return digits.filter { $0 % 2 != 0 }.reduce(1, *)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpqshm9aqc/tmpqshm9aqc.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab836edcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab836bd3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab836bd3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab836bd27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqshm9aqc                        0x00005599ad768969 <unavailable> + 6505

    5    libc.so.6                          0x00002ab8370c8460 __libc_start_main +
    245

    6    tmpqshm9aqc                        0x00005599ad768329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).compactMap { Int(String($0)) }\n \
    \   let oddDigits = digits.filter { $0 % 2 != 0 }\n    return oddDigits.reduce(1,\
    \ *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmpq_5p4mvw/tmpq_5p4mvw.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b969bd4dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b969ba44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b969ba44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b969ba437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq_5p4mvw                        0x000055ff33a76969 <unavailable> + 6505

    5    libc.so.6                          0x00002b969bf39460 __libc_start_main +
    245

    6    tmpq_5p4mvw                        0x000055ff33a76329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        result *= digit\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvit88i64/tmpvit88i64.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcfb74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcfb446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcfb446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcfb4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvit88i64                        0x00005556bb2987b9 <unavailable> + 6073

    5    libc.so.6                          0x00002abcfb93b460 __libc_start_main +
    245

    6    tmpvit88i64                        0x00005556bb298179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        product *= digit\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp220lgwwq/tmp220lgwwq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10395dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10392d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10392d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10392d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp220lgwwq                        0x00005620e88f17b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b10397cb460 __libc_start_main +
    245

    6    tmp220lgwwq                        0x00005620e88f1179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              result *= intValue\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmper5_2tkt/tmper5_2tkt.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae658bf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6588eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6588ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6588e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmper5_2tkt                        0x0000560b0133a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae658ddf460 __libc_start_main +
    245

    6    tmper5_2tkt                        0x0000560b0133a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let num = Int(String(digit)) {\n            if num % 2 != 0 {\n            \
    \    product *= num\n            }\n        }\n    }\n    return product\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprw2o51_c/tmprw2o51_c.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab604618c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab60430fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab60430f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab60430e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprw2o51_c                        0x0000557b4172e7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ab604804460 __libc_start_main +
    245

    6    tmprw2o51_c                        0x0000557b4172e179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              result *= intValue\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmper5_2tkt/tmper5_2tkt.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae658bf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6588eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6588ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6588e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmper5_2tkt                        0x0000560b0133a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae658ddf460 __libc_start_main +
    245

    6    tmper5_2tkt                        0x0000560b0133a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        product *= digit\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp220lgwwq/tmp220lgwwq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10395dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10392d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10392d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10392d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp220lgwwq                        0x00005620e88f17b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b10397cb460 __libc_start_main +
    245

    6    tmp220lgwwq                        0x00005620e88f1179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              product *= intValue\n            }\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfovg2sra/tmpfovg2sra.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27d22cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27d1fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27d1fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27d1fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfovg2sra                        0x000055a001f0b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b27d24b7460 __libc_start_main +
    245

    6    tmpfovg2sra                        0x000055a001f0b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpck55gs6y/tmpck55gs6y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7977d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7977a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7977a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7977a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck55gs6y                        0x000055c5f15e4539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7977f06460 __libc_start_main +
    245

    6    tmpck55gs6y                        0x000055c5f15e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).compactMap { Int(String($0)) }\n \
    \   return digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpozpyjq9f/tmpozpyjq9f.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f1c0c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f1bdbbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f1bdbb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f1bdba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpozpyjq9f                        0x000055e0d41f8969 <unavailable> + 6505

    5    libc.so.6                          0x00002b2f1c2b0460 __libc_start_main +
    245

    6    tmpozpyjq9f                        0x000055e0d41f8329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfv3dvlev/tmpfv3dvlev.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b87f4c12c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b87f4909b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b87f4909988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87f49087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfv3dvlev                        0x000055bc312641b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b87f4dfe460 __libc_start_main +
    245

    6    tmpfv3dvlev                        0x000055bc31263e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkus3_kxj/tmpkus3_kxj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad442178c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad441e6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad441e6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad441e6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkus3_kxj                        0x000055ff3b336539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad442364460 __libc_start_main +
    245

    6    tmpkus3_kxj                        0x000055ff3b335ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if let\
    \ number = Int(String(char)) {\n            if number % 2 != 0 {\n           \
    \     result *= number\n            }\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz4y7089k/tmpz4y7089k.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae810863c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae81055ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae81055a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8105597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz4y7089k                        0x0000560f2c8fa7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae810a4f460 __libc_start_main +
    245

    6    tmpz4y7089k                        0x0000560f2c8fa179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              product *= intValue\n            }\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfovg2sra/tmpfovg2sra.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27d22cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27d1fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27d1fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27d1fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfovg2sra                        0x000055a001f0b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b27d24b7460 __libc_start_main +
    245

    6    tmpfovg2sra                        0x000055a001f0b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for d in String(n) {\n        if let\
    \ digit = Int(String(d)) {\n            if digit % 2 != 0 {\n                product\
    \ *= digit\n            }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmppnfyo6wq/tmppnfyo6wq.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c595c8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c592bfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c592bf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c592be7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnfyo6wq                        0x0000561e722f07b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5c597b4460 __libc_start_main +
    245

    6    tmppnfyo6wq                        0x0000561e722f0179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let num = Int(String(digit)) {\n            if num % 2 != 0 {\n            \
    \    product *= num\n            }\n        }\n    }\n    return product\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprw2o51_c/tmprw2o51_c.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab604618c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab60430fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab60430f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab60430e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprw2o51_c                        0x0000557b4172e7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ab604804460 __libc_start_main +
    245

    6    tmprw2o51_c                        0x0000557b4172e179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgcmuin1a/tmpgcmuin1a.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b976d3bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b976d0b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b976d0b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b976d0b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcmuin1a                        0x00005618c282d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b976d5aa460 __libc_start_main +
    245

    6    tmpgcmuin1a                        0x00005618c282cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let digit = Int(String(digit)) {\n            if digit % 2 != 0 {\n        \
    \        result *= digit\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvit88i64/tmpvit88i64.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcfb74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcfb446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcfb446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcfb4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvit88i64                        0x00005556bb2987b9 <unavailable> + 6073

    5    libc.so.6                          0x00002abcfb93b460 __libc_start_main +
    245

    6    tmpvit88i64                        0x00005556bb298179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if let\
    \ num = Int(String(char)) {\n            if num % 2 != 0 {\n                result\
    \ *= num\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp9_b6z8nl/tmp9_b6z8nl.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0cbdbbdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0cbd8b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0cbd8b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0cbd8b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9_b6z8nl                        0x0000560fc9ec57b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0cbdda9460 __libc_start_main +
    245

    6    tmp9_b6z8nl                        0x0000560fc9ec5179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfv3dvlev/tmpfv3dvlev.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b87f4c12c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b87f4909b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b87f4909988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87f49087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfv3dvlev                        0x000055bc312641b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b87f4dfe460 __libc_start_main +
    245

    6    tmpfv3dvlev                        0x000055bc31263e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820859
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjkatiuug/tmpjkatiuug.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ce13e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ce10d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ce10d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ce10d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkatiuug                        0x0000562ba53f8539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3ce15ce460 __libc_start_main +
    245

    6    tmpjkatiuug                        0x0000562ba53f7ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let intValue = Int(String(digit)) {\n            if intValue % 2 != 0 {\n  \
    \              product *= intValue\n            }\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfovg2sra/tmpfovg2sra.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27d22cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27d1fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27d1fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27d1fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfovg2sra                        0x000055a001f0b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b27d24b7460 __libc_start_main +
    245

    6    tmpfovg2sra                        0x000055a001f0b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpms4b8ncr/tmpms4b8ncr.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b132f57bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b132f272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b132f272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b132f2717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms4b8ncr                        0x000055b9a0ae37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b132f767460 __libc_start_main +
    245

    6    tmpms4b8ncr                        0x000055b9a0ae3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7d1sm1w9/tmp7d1sm1w9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18b0582c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18b0279b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18b0279988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18b02787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7d1sm1w9                        0x00005598ea1f0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b18b076e460 __libc_start_main +
    245

    6    tmp7d1sm1w9                        0x00005598ea1efef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpooxcln4g/tmpooxcln4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba200316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba20000db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba20000d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba20000c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooxcln4g                        0x00005582f83ce539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba200502460 __libc_start_main +
    245

    6    tmpooxcln4g                        0x00005582f83cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var product = 1\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp5jpl7013/tmp5jpl7013.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e01b41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e01838b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e01838988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e018377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5jpl7013                        0x00005578a0d2e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b5e01d2d460 __libc_start_main +
    245

    6    tmp5jpl7013                        0x00005578a0d2def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauwj1o3g/tmpauwj1o3g.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94d6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94d6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94d6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94d6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauwj1o3g                        0x0000556ae770c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94d6fa5460 __libc_start_main +
    245

    6    tmpauwj1o3g                        0x0000556ae770c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps6_w84vd/tmps6_w84vd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8382bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af837fb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af837fb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af837fb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6_w84vd                        0x000055ec16c1e539 <unavailable> + 5433

    5    libc.so.6                          0x00002af8384a9460 __libc_start_main +
    245

    6    tmps6_w84vd                        0x000055ec16c1def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820482
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if let\
    \ digit = Int(String(char)) {\n            if digit % 2 != 0 {\n             \
    \   result *= digit\n            }\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmplgr1kuak/tmplgr1kuak.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1e41fcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1e3ef3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1e3ef3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1e3ef27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgr1kuak                        0x0000558700eb47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae1e43e8460 __libc_start_main +
    245

    6    tmplgr1kuak                        0x0000558700eb4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820482

name: HumanEval_140_fix_spaces
language: swift
prompt: "\n/// Given a string text, replace all spaces in it with underscores, \n\
  /// and if a string has more than 2 consecutive spaces, \n/// then replace all consecutive\
  \ spaces with - \n/// >>> fix_spaces(text: \" Example\")\n/// \"Example\"\n/// >>>\
  \ fix_spaces(text: \" Example 1\")\n/// \"Example_1\"\n/// >>> fix_spaces(text:\
  \ \" Example 2\")\n/// \"_Example_2\"\n/// >>> fix_spaces(text: \" Example 3\")\n\
  /// \"_Example-3\"\nfunc fix_spaces(text: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fix_spaces(text: \"Example\") == \"Example\"\
  )\nassert(fix_spaces(text: \"Mudasir Hanif \") == \"Mudasir_Hanif_\")\nassert(fix_spaces(text:\
  \ \"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\nassert(fix_spaces(text:\
  \ \"Exa   mple\") == \"Exa-mple\")\nassert(fix_spaces(text: \"   Exa 1 2 2 mple\"\
  ) == \"-Exa_1_2_2_mple\")"
completions: ["    let spaces = CharacterSet.whitespaces\n    let underscore = \"\
    _\"\n    let dash = \"-\"\n    var result = text.trimmingCharacters(in: spaces)\n\
    \    result = result.replacingOccurrences(of: \" \", with: underscore)\n    result\
    \ = result.replacingOccurrences(of: \"__\", with: dash)\n    return result", " \
    \   var result = \"\"\n    var spaceCount = 0\n    for char in text {\n      \
    \  if char == \" \" {\n            spaceCount += 1\n            if spaceCount\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           if spaceCount == 1 {\n                result += \"_\"\n          \
    \  }\n            spaceCount = 0\n            result += String(char)\n       \
    \ }\n    }\n    return result", "    var result = \"\"\n    var space_count =\
    \ 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count == 2 {\n                result += \"_\"\n  \
    \          } else {\n                result += \"-\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var prev_char = \"\"\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      space_count += 1\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += String(char)\n\
    \        }\n        prev_char = String(char)\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_")', '    return text.replacingOccurrences(of:
    " ", with: "_")', '    return text.replacingOccurrences(of: " ", with: "_")',
  "    var result = \"\"\n    var prevChar = \"\"\n    var count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            if prevChar == \" \" {\n\
    \                count += 1\n            } else {\n                count = 1\n\
    \            }\n            if count > 2 {\n                result += \"-\"\n\
    \            } else {\n                result += \"_\"\n            }\n      \
    \  } else {\n            result += String(char)\n            count = 0\n     \
    \   }\n        prevChar = String(char)\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", "    let fixed_text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let fixed_text_2 = fixed_text.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    let fixed_text_3 = fixed_text_2.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return fixed_text_3", "    var result = \"\"\n  \
    \  var space_count = 0\n    for char in text {\n        if char == \" \" {\n \
    \           space_count += 1\n            if space_count > 2 {\n             \
    \   result += \"-\"\n            } else {\n                result += \"_\"\n \
    \           }\n        } else {\n            space_count = 0\n            result\
    \ += String(char)\n        }\n    }\n    return result", "    let space = \" \"\
    \n    let underscore = \"_\"\n    let dash = \"-\"\n    var result = text\n  \
    \  result = result.replacingOccurrences(of: space, with: underscore)\n    result\
    \ = result.replacingOccurrences(of: space + space + space, with: dash)\n    return\
    \ result", "    let space = Character(\" \")\n    let underscore = Character(\"\
    _\")\n    let dash = Character(\"-\")\n    var result = \"\"\n    var count =\
    \ 0\n    for char in text {\n        if char == space {\n            count +=\
    \ 1\n            if count == 1 {\n                result.append(underscore)\n\
    \            } else if count == 2 {\n                result.append(dash)\n   \
    \         }\n        } else {\n            result.append(char)\n            count\
    \ = 0\n        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var last_char = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n        last_char = String(char)\n    }\n    return result", "    let\
    \ space = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var result\
    \ = text\n    var previous_char = \"\"\n    var current_char = \"\"\n    var next_char\
    \ = \"\"\n    var index = 0\n    var spaces = 0\n    while index < result.count\
    \ {\n        current_char = String(result[result.index(result.startIndex, offsetBy:\
    \ index)])\n        if index > 0 {\n            previous_char = String(result[result.index(result.startIndex,\
    \ offsetBy: index - 1)])\n        }\n        if index < result.count - 1 {\n \
    \           next_char = String(result[result.index(result.startIndex, offsetBy:\
    \ index + 1)])\n        }\n        if current_char == space {\n            if\
    \ previous_char == space {\n                spaces += 1\n                if spaces\
    \ > 2 {\n                    result.replaceSubrange(result.index(result.startIndex,\
    \ offsetBy: index)..<result.index(result.startIndex, offsetBy: index + 1), with:\
    \ dash)\n                }\n            } else {\n                spaces = 1\n\
    \                result.replaceSubrange(result.index(result.startIndex, offsetBy:\
    \ index)..<result.index(result.startIndex, offsetBy: index + 1), with: underscore)\n\
    \            }\n        } else {\n            spaces = 0\n        }\n        index\
    \ += 1\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var last_char = \"\"\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      space_count += 1\n            if space_count > 2 {\n                continue\n\
    \            }\n        } else {\n            space_count = 0\n        }\n   \
    \     if last_char == \" \" && char == \" \" {\n            result.removeLast()\n\
    \            result.append(\"-\")\n        } else {\n            result.append(char)\n\
    \        }\n        last_char = char\n    }\n    return result", "    let space\
    \ = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var result =\
    \ \"\"\n    var count = 0\n    for char in text {\n        if char == Character(space)\
    \ {\n            count += 1\n            if count == 1 {\n                result\
    \ += underscore\n            } else if count == 2 {\n                result +=\
    \ dash\n            }\n        } else {\n            result += String(char)\n\
    \            count = 0\n        }\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var is_space = false\n    var space_count\
    \ = 0\n    for c in text {\n        if c == \" \" {\n            if is_space {\n\
    \                space_count += 1\n            } else {\n                is_space\
    \ = true\n                space_count = 1\n            }\n        } else {\n \
    \           if is_space {\n                if space_count == 1 {\n           \
    \         result += \"_\"\n                } else if space_count == 2 {\n    \
    \                result += \"_\"\n                } else {\n                 \
    \   result += \"-\"\n                }\n                is_space = false\n   \
    \         }\n            result += String(c)\n        }\n    }\n    if is_space\
    \ {\n        if space_count == 1 {\n            result += \"_\"\n        } else\
    \ if space_count == 2 {\n            result += \"_\"\n        } else {\n     \
    \       result += \"-\"\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    var spaces = 0\n    for char in text {\n        if char == \" \"\
    \ {\n            spaces += 1\n        } else {\n            if spaces > 2 {\n\
    \                result += \"-\\(char)\"\n            } else if spaces == 2 {\n\
    \                result += \"_\\(char)\"\n            } else {\n             \
    \   result += \"\\(char)\"\n            }\n            spaces = 0\n        }\n\
    \    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char in text\
    \ {\n        if char == Character(space) {\n            count += 1\n         \
    \   if count == 1 {\n                result += underscore\n            } else\
    \ if count == 2 {\n                result += dash\n            }\n        } else\
    \ {\n            count = 0\n            result += String(char)\n        }\n  \
    \  }\n    return result", "    var result = \"\"\n    var spaces = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            spaces += 1\n      \
    \  } else {\n            if spaces == 1 {\n                result += \"_\"\n \
    \           } else if spaces > 2 {\n                result += \"-\"\n        \
    \    }\n            result += String(char)\n            spaces = 0\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var last_char = \"\"\n\
    \    var last_last_char = \"\"\n    var consecutive_spaces = 0\n    for char in\
    \ text {\n        if char == \" \" {\n            consecutive_spaces += 1\n  \
    \          if consecutive_spaces == 1 {\n                result += \"_\"\n   \
    \         } else if consecutive_spaces == 2 {\n                result += \"-\"\
    \n            }\n        } else {\n            consecutive_spaces = 0\n      \
    \      result += String(char)\n        }\n        last_last_char = last_char\n\
    \        last_char = String(char)\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    let spaces = CharacterSet.whitespaces\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = \"\"\n    var spaceCount = 0\n    for char in\
    \ text {\n        if spaces.contains(char.unicodeScalars.first!) {\n         \
    \   spaceCount += 1\n            if spaceCount > 2 {\n                result +=\
    \ dash\n                spaceCount = 0\n            } else {\n               \
    \ result += underscore\n            }\n        } else {\n            result +=\
    \ String(char)\n            spaceCount = 0\n        }\n    }\n    return result",
  "    let space = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var\
    \ result = \"\"\n    var count = 0\n    for char in text {\n        if char ==\
    \ Character(space) {\n            count += 1\n            if count == 1 {\n  \
    \              result += underscore\n            } else if count == 2 {\n    \
    \            result += underscore\n            } else if count > 2 {\n       \
    \         result += dash\n            }\n        } else {\n            count =\
    \ 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    let regex = try! NSRegularExpression(pattern: \"\\\\s{2,}\", options:\
    \ [])\n    let range = NSRange(location: 0, length: text.utf16.count)\n    let\
    \ modifiedString = regex.stringByReplacingMatches(in: text, options: [], range:\
    \ range, withTemplate: \"-\")\n    return modifiedString.replacingOccurrences(of:\
    \ \" \", with: \"_\")", "    let text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ text", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"-\"\n            }\n    \
    \    } else {\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 2 {\n                result += \"-\"\n \
    \           }\n        } else {\n            if space_count == 1 {\n         \
    \       result += \"_\"\n            }\n            space_count = 0\n        \
    \    result += String(char)\n        }\n    }\n    return result", "    let result\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    let result2 = result.replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n    return result2", "    var result = text\n    result\
    \ = result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    var consecutive_spaces = 0\n    for char in text {\n        if char\
    \ == \" \" {\n            consecutive_spaces += 1\n            if consecutive_spaces\
    \ > 2 {\n                continue\n            }\n        } else {\n         \
    \   consecutive_spaces = 0\n        }\n        if char == \" \" && last_char ==\
    \ \" \" {\n            result.append(\"-\")\n        } else {\n            result.append(char)\n\
    \        }\n        last_char = char\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var last_char = \"\"\n    var consecutive_spaces\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            if last_char\
    \ == \" \" {\n                consecutive_spaces += 1\n            } else {\n\
    \                consecutive_spaces = 1\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.append(\"-\")\n            } else {\n        \
    \        result.append(\"_\")\n            }\n        } else {\n            result.append(char)\n\
    \            consecutive_spaces = 0\n        }\n        last_char = char\n   \
    \ }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_")', "    var result = text\n    result = result.replacingOccurrences(of: \"\
    \ \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var previousChar: Character?\n\
    \    for char in text {\n        if char == \" \" {\n            if previousChar\
    \ == \" \" {\n                result.append(\"-\")\n            } else {\n   \
    \             result.append(\"_\")\n            }\n        } else {\n        \
    \    result.append(char)\n        }\n        previousChar = char\n    }\n    return\
    \ result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"-\")\n    return result", "    var result = \"\"\n    var space_count = 0\n\
    \    for c in text {\n        if c == \" \" {\n            space_count += 1\n\
    \            if space_count == 1 {\n                result += \"_\"\n        \
    \    } else if space_count == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += String(c)\n\
    \        }\n    }\n    return result", "    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", "    var result = \"\"\n    var last_char = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n        last_char = String(char)\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of: "__", with:
    "-")', "    let text = text.trimmingCharacters(in: .whitespaces)\n    let text\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return text", "    let fixed = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let fixed2 = fixed.replacingOccurrences(of: \"__\"\
    , with: \"-\")\n    return fixed2", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var last_char = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                continue\n         \
    \   }\n        } else {\n            space_count = 0\n        }\n        if char\
    \ == \" \" && last_char == \" \" {\n            result.removeLast()\n        \
    \    result.append(\"-\")\n        } else {\n            result.append(char)\n\
    \        }\n        last_char = char\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    // TODO: Implement\n    return \"\"", "    var result =\
    \ \"\"\n    var last_char = \"\"\n    for char in text {\n        if char == \"\
    \ \" {\n            if last_char == \" \" {\n                result += \"-\"\n\
    \            } else {\n                result += \"_\"\n            }\n      \
    \  } else {\n            result += String(char)\n        }\n        last_char\
    \ = String(char)\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count == 2 {\n                result += \"_\"\n  \
    \          } else {\n                result += \"-\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    let text = text.trimmingCharacters(in:\
    \ .whitespaces)\n    var result = \"\"\n    var count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            count += 1\n            if count\
    \ == 2 {\n                result += \"-\"\n            } else {\n            \
    \    result += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \            count = 0\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    var prev_char = \"\"\n    var space_count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            space_count += 1\n            if\
    \ space_count > 2 {\n                if prev_char != \"-\" {\n               \
    \     result += \"-\"\n                }\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \            space_count = 0\n        }\n        prev_char = String(char)\n  \
    \  }\n    return result", "    var result = \"\"\n    var prev_space = false\n\
    \    var space_count = 0\n    for c in text {\n        if c == \" \" {\n     \
    \       if prev_space {\n                space_count += 1\n            } else\
    \ {\n                space_count = 1\n            }\n            prev_space =\
    \ true\n        } else {\n            if prev_space {\n                if space_count\
    \ > 2 {\n                    result += \"-\"\n                } else {\n     \
    \               result += \"_\"\n                }\n            }\n          \
    \  result += String(c)\n            prev_space = false\n        }\n    }\n   \
    \ return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = text\n    result = result.replacingOccurrences(of:\
    \ space, with: underscore)\n    result = result.replacingOccurrences(of: space\
    \ + space + space, with: dash)\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var prev_space = false\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      if prev_space {\n                space_count += 1\n            } else {\n\
    \                prev_space = true\n                space_count = 1\n        \
    \    }\n        } else {\n            if prev_space {\n                if space_count\
    \ > 2 {\n                    result += \"-\"\n                } else {\n     \
    \               result += \"_\"\n                }\n            }\n          \
    \  prev_space = false\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    if prev_space {\n        if space_count > 2 {\n       \
    \     result += \"-\"\n        } else {\n            result += \"_\"\n       \
    \ }\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "_").replacingOccurrences(of: "___", with: "-")', '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    var result =\
    \ \"\"\n    var last_char = \"\"\n    for char in text {\n        if char == \"\
    \ \" {\n            if last_char == \" \" {\n                result += \"-\"\n\
    \            } else {\n                result += \"_\"\n            }\n      \
    \  } else {\n            result += String(char)\n        }\n        last_char\
    \ = String(char)\n    }\n    return result", "    let text = text.trimmingCharacters(in:\
    \ .whitespaces)\n    let text = text.replacingOccurrences(of: \" \", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let\
    \ text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return text",
  "    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    let new_text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let new_text2 = new_text.replacingOccurrences(of: \"__\", with:\
    \ \"-\")\n    return new_text2", "    var result = \"\"\n    var last_char = \"\
    \"\n    for char in text {\n        if char == \" \" {\n            if last_char\
    \ == \" \" {\n                result += \"-\"\n            } else {\n        \
    \        result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", "    var result = \"\"\n    var previous_char: Character?\n    for\
    \ char in text {\n        if char == \" \" {\n            if previous_char ==\
    \ \" \" {\n                result += \"-\"\n            } else {\n           \
    \     result += \"_\"\n            }\n        } else {\n            result +=\
    \ String(char)\n        }\n        previous_char = char\n    }\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var space_count = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            space_count += 1\n \
    \           if space_count == 1 {\n                result += \"_\"\n         \
    \   } else if space_count == 2 {\n                result += \"_\"\n          \
    \  } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += String(char)\n        }\n\
    \    }\n    return result", "    let text = text.replacingOccurrences(of: \" \"\
    , with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n   \
    \ return text", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var last_char = \"\"\n    var\
    \ last_last_char = \"\"\n    for char in text {\n        if char == \" \" {\n\
    \            if last_char == \" \" {\n                if last_last_char == \"\
    \ \" {\n                    result += \"-\"\n                } else {\n      \
    \              result += \"_\"\n                }\n            } else {\n    \
    \            result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        last_last_char = last_char\n        last_char\
    \ = String(char)\n    }\n    return result", "    var result = \"\"\n    var spaces\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaces\
    \ += 1\n        } else {\n            if spaces == 1 {\n                result\
    \ += \"_\"\n            } else if spaces > 2 {\n                result += \"-\"\
    \n            }\n            result += String(char)\n            spaces = 0\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"-\")\n    return text", "    var result = \"\"\n    var spaces = 0\n    for\
    \ c in text {\n        if c == \" \" {\n            spaces += 1\n        } else\
    \ {\n            if spaces == 1 {\n                result += \"_\"\n         \
    \   } else if spaces > 2 {\n                result += \"-\"\n            }\n \
    \           result += String(c)\n            spaces = 0\n        }\n    }\n  \
    \  return result", "    let new_text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let new_text2 = new_text.replacingOccurrences(of: \"__\", with:\
    \ \"-\")\n    return new_text2", "    let space = \" \"\n    let underscore =\
    \ \"_\"\n    let dash = \"-\"\n    var result = \"\"\n    var spaces = 0\n   \
    \ for char in text {\n        if char == Character(space) {\n            spaces\
    \ += 1\n            if spaces > 2 {\n                result += dash\n        \
    \        spaces = 0\n            } else {\n                result += underscore\n\
    \            }\n        } else {\n            spaces = 0\n            result +=\
    \ String(char)\n        }\n    }\n    return result", "    var result = \"\"\n\
    \    var spaceCount = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaceCount += 1\n            if spaceCount == 1 {\n             \
    \   result += \"_\"\n            } else if spaceCount == 2 {\n               \
    \ result += \"-\"\n            }\n        } else {\n            spaceCount = 0\n\
    \            result += String(char)\n        }\n    }\n    return result", " \
    \   var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var last_char = \"\"\n    var last_last_char\
    \ = \"\"\n    for char in text {\n        if char == \" \" {\n            if last_char\
    \ == \" \" {\n                if last_last_char == \" \" {\n                 \
    \   result.append(\"-\")\n                } else {\n                    result.append(\"\
    _\")\n                }\n            } else {\n                result.append(\"\
    _\")\n            }\n        } else {\n            result.append(char)\n     \
    \   }\n        last_last_char = last_char\n        last_char = char\n    }\n \
    \   return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 2 {\n                result += \"-\"\n            }\n \
    \       } else {\n            spaceCount = 0\n            result += \"\\(char)\"\
    \n        }\n    }\n    return result", "    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", "    var result = \"\"\n    var spaces = 0\n    for char in\
    \ text {\n        if char == \" \" {\n            spaces += 1\n        } else\
    \ {\n            if spaces == 1 {\n                result += \"_\"\n         \
    \   } else if spaces > 2 {\n                result += \"-\"\n            }\n \
    \           result += String(char)\n            spaces = 0\n        }\n    }\n\
    \    return result", "    var result = \"\"\n    var prev = \"\"\n    for char\
    \ in text {\n        if char == \" \" {\n            if prev == \" \" {\n    \
    \            result += \"-\"\n            } else {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \        }\n        prev = String(char)\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    let regex = try! NSRegularExpression(pattern: \"\\\\s+\", options: .caseInsensitive)\n\
    \    let range = NSRange(location: 0, length: text.utf16.count)\n    let result\
    \ = regex.stringByReplacingMatches(in: text, options: [], range: range, withTemplate:\
    \ \"_\")\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_")', "    var result = \"\"\n    var space_count = 0\n    for char in text {\n\
    \        if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = text.replacingOccurrences(of: \" \", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return result", "    var result = \"\"\n    var prev_char\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count == 1 {\n \
    \               result += \"_\"\n            } else if space_count == 2 {\n  \
    \              result += \"-\"\n            }\n        } else {\n            result\
    \ += char\n            space_count = 0\n        }\n        prev_char = String(char)\n\
    \    }\n    return result", "    var result = \"\"\n    var space_count = 0\n\
    \    for char in text {\n        if char == \" \" {\n            space_count +=\
    \ 1\n            if space_count > 2 {\n                result += \"-\"\n     \
    \       } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            space_count = 0\n            result += String(char)\n       \
    \ }\n    }\n    return result", "    var result = \"\"\n    var previous_char\
    \ = Character(\" \")\n    var space_count = 0\n    for char in text {\n      \
    \  if char == \" \" {\n            space_count += 1\n        } else {\n      \
    \      space_count = 0\n        }\n        if space_count == 1 {\n           \
    \ result.append(\"_\")\n        } else if space_count > 1 {\n            result.append(\"\
    -\")\n        } else {\n            result.append(char)\n        }\n        previous_char\
    \ = char\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = \"\"\n    var count = 0\n  \
    \  for char in text {\n        if char == Character(space) {\n            count\
    \ += 1\n            if count == 1 {\n                result += underscore\n  \
    \          } else if count == 2 {\n                result += dash\n          \
    \  }\n        } else {\n            result += String(char)\n            count\
    \ = 0\n        }\n    }\n    return result", "    var result = text\n    result\
    \ = result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    let space_regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s+\", options: [])\n    let underscore_regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s\", options: [])\n    let range = NSRange(location: 0, length: text.count)\n\
    \    let underscore_text = underscore_regex.stringByReplacingMatches(in: text,\
    \ options: [], range: range, withTemplate: \"_\")\n    let fixed_text = space_regex.stringByReplacingMatches(in:\
    \ underscore_text, options: [], range: range, withTemplate: \"-\")\n    return\
    \ fixed_text", "    let text = text.replacingOccurrences(of: \" \", with: \"_\"\
    )\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let\
    \ text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return text",
  "    var result = \"\"\n    var prev = \"\"\n    for c in text {\n        if c ==\
    \ \" \" {\n            if prev == \" \" {\n                result.append(\"-\"\
    )\n            } else {\n                result.append(\"_\")\n            }\n\
    \        } else {\n            result.append(c)\n        }\n        prev = c\n\
    \    }\n    return result", "    var result = \"\"\n    var prev_space = false\n\
    \    var consecutive_spaces = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            if !prev_space {\n                result += \"_\"\n      \
    \          prev_space = true\n            }\n            consecutive_spaces +=\
    \ 1\n        } else {\n            if consecutive_spaces > 2 {\n             \
    \   result += \"-\"\n            }\n            result += String(char)\n     \
    \       prev_space = false\n            consecutive_spaces = 0\n        }\n  \
    \  }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_").replacingOccurrences(of: "__", with: "-")', "    var result = \"\"\n    var\
    \ last_char = \"\"\n    var count = 0\n    for char in text {\n        if char\
    \ == \" \" {\n            if last_char == \" \" {\n                count += 1\n\
    \                if count == 2 {\n                    result += \"-\"\n      \
    \          }\n            } else {\n                result += \"_\"\n        \
    \    }\n        } else {\n            result += String(char)\n            count\
    \ = 0\n        }\n        last_char = String(char)\n    }\n    return result",
  "    var result = \"\"\n    var previous_char: Character?\n    var current_char:\
    \ Character?\n    var next_char: Character?\n    var count = 0\n    for char in\
    \ text {\n        if char == \" \" {\n            if previous_char == \" \" {\n\
    \                count += 1\n            }\n            if count == 2 {\n    \
    \            result.append(\"-\")\n            } else {\n                result.append(\"\
    _\")\n            }\n        } else {\n            result.append(char)\n     \
    \   }\n        previous_char = current_char\n        current_char = next_char\n\
    \        next_char = char\n    }\n    return result", "    var result = \"\"\n\
    \    var space_count = 0\n    for char in text {\n        if char == \" \" {\n\
    \            space_count += 1\n            if space_count == 1 {\n           \
    \     result += \"_\"\n            } else if space_count == 2 {\n            \
    \    result += \"-\"\n            }\n        } else {\n            result += String(char)\n\
    \            space_count = 0\n        }\n    }\n    return result", "    let space\
    \ = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var result =\
    \ \"\"\n    var previous = \"\"\n    var count = 0\n    for char in text {\n \
    \       if char == Character(space) {\n            if previous == space {\n  \
    \              count += 1\n            } else {\n                count = 1\n \
    \           }\n            if count > 2 {\n                result.append(Character(dash))\n\
    \            } else {\n                result.append(Character(underscore))\n\
    \            }\n        } else {\n            result.append(char)\n          \
    \  count = 0\n        }\n        previous = String(char)\n    }\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var last_char = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count > 2 {\n                result += \"-\"\n   \
    \         }\n        } else {\n            space_count = 0\n            result\
    \ += String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let spaces = CharacterSet.whitespaces\n    let underscore\
    \ = CharacterSet(charactersIn: \"_\")\n    let dash = CharacterSet(charactersIn:\
    \ \"-\")\n    var result = text.trimmingCharacters(in: spaces)\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var space_count = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            space_count += 1\n \
    \           if space_count == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var prevChar = Character(\" \")\n\
    \    var spaceCount = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaceCount += 1\n        } else {\n            spaceCount = 0\n \
    \       }\n        if spaceCount == 1 {\n            result.append(\"_\")\n  \
    \      } else if spaceCount > 1 {\n            result.append(\"-\")\n        }\
    \ else {\n            result.append(char)\n        }\n        prevChar = char\n\
    \    }\n    return result", "    let space = \" \"\n    let underscore = \"_\"\
    \n    let dash = \"-\"\n    var result = text\n    result = result.replacingOccurrences(of:\
    \ space, with: underscore)\n    result = result.replacingOccurrences(of: underscore\
    \ + underscore + underscore, with: dash)\n    return result", "    let spaces\
    \ = CharacterSet.whitespaces\n    var result = text.trimmingCharacters(in: spaces)\n\
    \    result = result.replacingOccurrences(of: \" \", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "_").replacingOccurrences(of:
    "___", with: "-")', '    return text.replacingOccurrences(of: " ", with: "_")',
  "    let space = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var\
    \ result = text\n    var is_space = false\n    var count = 0\n    for char in\
    \ text {\n        if char == Character(space) {\n            if is_space {\n \
    \               count += 1\n            } else {\n                is_space = true\n\
    \                count = 1\n            }\n        } else {\n            is_space\
    \ = false\n            count = 0\n        }\n        if count > 2 {\n        \
    \    result = result.replacingOccurrences(of: space, with: dash)\n        } else\
    \ if count > 0 {\n            result = result.replacingOccurrences(of: space,\
    \ with: underscore)\n        }\n    }\n    return result", "    var result = \"\
    \"\n    var last_char = \"\"\n    for char in text {\n        if char == \" \"\
    \ {\n            if last_char == \" \" {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            result += String(char)\n        }\n        last_char = String(char)\n\
    \    }\n    return result", "    let space = \" \"\n    let underscore = \"_\"\
    \n    let dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char\
    \ in text {\n        if char == Character(space) {\n            count += 1\n \
    \           if count == 1 {\n                result += underscore\n          \
    \  } else if count == 2 {\n                result += dash\n            }\n   \
    \     } else {\n            result += String(char)\n            count = 0\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    var prev_space\
    \ = false\n    var consecutive_spaces = 0\n    for char in text {\n        if\
    \ char == \" \" {\n            if !prev_space {\n                result += \"\
    _\"\n                prev_space = true\n            }\n            consecutive_spaces\
    \ += 1\n        } else {\n            if consecutive_spaces > 2 {\n          \
    \      result += \"-\"\n            }\n            result += String(char)\n  \
    \          prev_space = false\n            consecutive_spaces = 0\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var spaces = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            spaces += 1\n      \
    \  } else {\n            if spaces == 1 {\n                result += \"_\"\n \
    \           } else if spaces > 2 {\n                result += \"-\"\n        \
    \    }\n            result += String(char)\n            spaces = 0\n        }\n\
    \    }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_")', "    var result = \"\"\n    var space_count = 0\n    for c in text {\n\
    \        if c == \" \" {\n            space_count += 1\n            if space_count\
    \ > 2 {\n                result += \"-\"\n                space_count = 0\n  \
    \          }\n        } else {\n            if space_count == 1 {\n          \
    \      result += \"_\"\n            }\n            result += String(c)\n     \
    \       space_count = 0\n        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var spaceCount = 0\n    for c in\
    \ text {\n        if c == \" \" {\n            spaceCount += 1\n            if\
    \ spaceCount == 1 {\n                result += \"_\"\n            } else if spaceCount\
    \ == 2 {\n                result += \"_\"\n            } else {\n            \
    \    result += \"-\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += String(c)\n        }\n    }\n    return result",
  "    var result = \"\"\n    var space_count = 0\n    for char in text {\n      \
    \  if char == \" \" {\n            space_count += 1\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = \"\"\n    var spaceCount = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            spaceCount += 1\n            if spaceCount ==\
    \ 1 {\n                result += \"_\"\n            } else if spaceCount == 2\
    \ {\n                result += \"_\"\n            } else {\n                result\
    \ += \"-\"\n            }\n        } else {\n            spaceCount = 0\n    \
    \        result += String(char)\n        }\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_")', "    var result = \"\"\n    var\
    \ previous_char: Character?\n    for char in text {\n        if char == \" \"\
    \ {\n            if previous_char == \" \" {\n                result.append(\"\
    -\")\n            } else {\n                result.append(\"_\")\n           \
    \ }\n        } else {\n            result.append(char)\n        }\n        previous_char\
    \ = char\n    }\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = text\n    if result.contains(space)\
    \ {\n        result = result.replacingOccurrences(of: space, with: underscore)\n\
    \    }\n    if result.contains(underscore + underscore) {\n        result = result.replacingOccurrences(of:\
    \ underscore + underscore, with: dash)\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = \"\"\n    var space_count = 0\n    for char in text {\n      \
    \  if char == \" \" {\n            space_count += 1\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", '    return text.replacingOccurrences(of: " ", with: "_")', "    let\
    \ result = text.replacingOccurrences(of: \" \", with: \"_\")\n    return result",
  "    let text = text.trimmingCharacters(in: .whitespaces)\n    var result = \"\"\
    \n    var spaceCount = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaceCount += 1\n            if spaceCount == 2 {\n             \
    \   result += \"-\"\n            }\n        } else {\n            if spaceCount\
    \ == 1 {\n                result += \"_\"\n            }\n            result +=\
    \ String(char)\n            spaceCount = 0\n        }\n    }\n    return result",
  "    let spaces = CharacterSet.whitespaces\n    let underscores = CharacterSet(charactersIn:\
    \ \"_\")\n    let hyphens = CharacterSet(charactersIn: \"-\")\n    let components\
    \ = text.components(separatedBy: spaces)\n    var result = \"\"\n    for component\
    \ in components {\n        if component.isEmpty {\n            if result.rangeOfCharacter(from:\
    \ underscores) == nil {\n                result.append(\"_\")\n            } else\
    \ if result.rangeOfCharacter(from: hyphens) == nil {\n                result.append(\"\
    -\")\n            }\n        } else {\n            result.append(component)\n\
    \        }\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var prev = \"\"\n    for c in\
    \ text {\n        if c == \" \" {\n            if prev == \" \" {\n          \
    \      result += \"-\"\n            } else {\n                result += \"_\"\n\
    \            }\n        } else {\n            result += String(c)\n        }\n\
    \        prev = String(c)\n    }\n    return result", "    var result = text\n\
    \    result = result.replacingOccurrences(of: \" \", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return result", "    let result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let result2 = result.replacingOccurrences(of: \"__\"\
    , with: \"-\")\n    return result2", "    var newText = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount == 2 {\n                newText += \"-\"\n \
    \           }\n        } else {\n            spaceCount = 0\n            newText\
    \ += String(char)\n        }\n    }\n    return newText", "    var result = \"\
    \"\n    var prev_char = \" \"\n    for char in text {\n        if char == \" \"\
    \ {\n            if prev_char == \" \" {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            result += String(char)\n        }\n        prev_char = String(char)\n\
    \    }\n    return result", "    var result = \"\"\n    var space_count = 0\n\
    \    for char in text {\n        if char == \" \" {\n            space_count +=\
    \ 1\n            if space_count == 1 {\n                result += \"_\"\n    \
    \        } else if space_count == 2 {\n                result += \"_\"\n     \
    \       } else {\n                result += \"-\"\n            }\n        } else\
    \ {\n            space_count = 0\n            result += String(char)\n       \
    \ }\n    }\n    return result", "    var result = \"\"\n    var spaceCount = 0\n\
    \    for char in text {\n        if char == \" \" {\n            spaceCount +=\
    \ 1\n            if spaceCount > 2 {\n                result += \"-\"\n      \
    \      } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            result += String(char)\n            spaceCount = 0\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var space_count = 0\n\
    \    for char in text {\n        if char == \" \" {\n            space_count +=\
    \ 1\n            if space_count > 2 {\n                result += \"-\"\n     \
    \       } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            result += String(char)\n            space_count = 0\n       \
    \ }\n    }\n    return result", '    return text.replacingOccurrences(of: " ",
    with: "_")', '    return text.replacingOccurrences(of: " ", with: "_")', "   \
    \ let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text =\
    \ text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", "    var result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"-\")\n    return result", "    var result = \"\"\n    var spaces = 0\n   \
    \ for char in text {\n        if char == \" \" {\n            spaces += 1\n  \
    \          if spaces == 2 {\n                result += \"_\"\n            }\n\
    \        } else {\n            if spaces > 2 {\n                result += \"-\"\
    \n            }\n            result += String(char)\n            spaces = 0\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            result += String(char)\n            space_count = 0\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count == 1 {\n \
    \               result += \"_\"\n            } else if space_count == 2 {\n  \
    \              result += \"-\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += String(char)\n        }\n        last_char = String(char)\n\
    \    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let result = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_").replacingOccurrences(of: "__", with: "-")', "    var result = \"\"\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      space_count += 1\n            if space_count > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = \"\"\n    var spaceCount = 0\n\
    \    for char in text {\n        if char == Character(space) {\n            spaceCount\
    \ += 1\n            if spaceCount > 2 {\n                result.append(Character(dash))\n\
    \            } else {\n                result.append(Character(underscore))\n\
    \            }\n        } else {\n            spaceCount = 0\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount > 2 {\n                result += \"-\"\n   \
    \         } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            spaceCount = 0\n            result += String(char)\n   \
    \     }\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count == 2 {\n                result += \"_\"\n  \
    \          } else {\n                result += \"-\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    var spaces =\
    \ 0\n    for char in text {\n        if char == \" \" {\n            spaces +=\
    \ 1\n            if spaces == 2 {\n                result += \"-\"\n         \
    \   }\n        } else {\n            spaces = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    let space_regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s+\", options: [])\n    let result = space_regex.stringByReplacingMatches(in:\
    \ text, options: [], range: NSRange(location: 0, length: text.count), withTemplate:\
    \ \"_\")\n    return result", "    let text = text.replacingOccurrences(of: \"\
    \ \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 2 {\n                result += \"-\"\n            }\n \
    \       } else {\n            spaceCount = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count > 2 {\n                result += \"-\"\n            } else\
    \ {\n                result += \"_\"\n            }\n        } else {\n      \
    \      space_count = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count == 2 {\n                result += \"_\"\n  \
    \          } else {\n                result += \"-\"\n            }\n        }\
    \ else {\n            result += String(char)\n            space_count = 0\n  \
    \      }\n    }\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount == 1 {\n                result += \"_\"\n  \
    \          } else if spaceCount == 2 {\n                result += \"_\"\n    \
    \        } else {\n                result += \"-\"\n            }\n        } else\
    \ {\n            spaceCount = 0\n            result += String(char)\n        }\n\
    \    }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_").replacingOccurrences(of: "__", with: "-")', "    let result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"_\"\n            } else {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  space_count = 0\n            result += String(char)\n        }\n    }\n   \
    \ return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 1 {\n                result += \"_\"\n            } else\
    \ if spaceCount == 2 {\n                result += \"_\"\n            } else {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  spaceCount = 0\n            result += String(char)\n        }\n    }\n    return\
    \ result", "    let components = text.components(separatedBy: .whitespaces)\n\
    \    let filtered = components.filter { !$0.isEmpty }\n    let joined = filtered.joined(separator:\
    \ \"_\")\n    let replaced = joined.replacingOccurrences(of: \"__\", with: \"\
    -\")\n    return replaced", "    var result = \"\"\n    var spaces = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            spaces += 1\n      \
    \  } else {\n            if spaces > 2 {\n                result += \"-\"\n  \
    \          } else if spaces > 0 {\n                result += \"_\"\n         \
    \   }\n            result.append(char)\n            spaces = 0\n        }\n  \
    \  }\n    return result", "    let text = text.replacingOccurrences(of: \" \"\
    , with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n   \
    \ return text", "    let space = \" \"\n    let underscore = \"_\"\n    let dash\
    \ = \"-\"\n    var result = text\n    var previousChar = \"\"\n    var currentChar\
    \ = \"\"\n    var nextChar = \"\"\n    for i in 0..<result.count {\n        currentChar\
    \ = String(result[result.index(result.startIndex, offsetBy: i)])\n        if i\
    \ > 0 {\n            previousChar = String(result[result.index(result.startIndex,\
    \ offsetBy: i - 1)])\n        }\n        if i < result.count - 1 {\n         \
    \   nextChar = String(result[result.index(result.startIndex, offsetBy: i + 1)])\n\
    \        }\n        if currentChar == space {\n            if previousChar ==\
    \ space {\n                result.replaceSubrange(result.index(result.startIndex,\
    \ offsetBy: i)..<result.index(result.startIndex, offsetBy: i + 1), with: dash)\n\
    \            } else {\n                result.replaceSubrange(result.index(result.startIndex,\
    \ offsetBy: i)..<result.index(result.startIndex, offsetBy: i + 1), with: underscore)\n\
    \            }\n        }\n    }\n    return result", "    var result = \"\"\n\
    \    var prev = \"\"\n    for c in text {\n        if c == \" \" {\n         \
    \   if prev == \" \" {\n                result += \"-\"\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  result += String(c)\n        }\n        prev = String(c)\n    }\n    return\
    \ result"]
stop_tokens:
- "\n}"

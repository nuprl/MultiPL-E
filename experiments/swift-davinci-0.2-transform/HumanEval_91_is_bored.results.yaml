language: swift
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var count = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp40b1yrb3.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824466
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator: \".\"\
    )\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8ua9v192.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.first == \"I\" {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var count = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_3sanwn2.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter({ $0.hasPrefix(\"I\") }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpongfo2vg.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpty_bldvu.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\").map { $0.trimmingCharacters(in:\
    \ .whitespacesAndNewlines) }\n    return sentences.filter { $0.hasPrefix(\"I\"\
    ) }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpae6w1hlq.swift:11:54: error: reference to member 'trimmingCharacters'\
    \ cannot be resolved without a contextual type\n    let sentences = S.split(separator:\
    \ \".\").map { $0.trimmingCharacters(in: .whitespacesAndNewlines) }\n        \
    \                                             ^\n/tmp/tmpae6w1hlq.swift:11:78:\
    \ error: cannot infer contextual base in reference to member 'whitespacesAndNewlines'\n\
    \    let sentences = S.split(separator: \".\").map { $0.trimmingCharacters(in:\
    \ .whitespacesAndNewlines) }\n                                               \
    \                             ~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var count = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_3sanwn2.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \".?!\").filter { $0.hasPrefix(\"\
    I\") }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpegpcxac7.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".?!\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpgzcq0j20/tmpgzcq0j20.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f9fe34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f9fb2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f9fb2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f9fb2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgzcq0j20                        0x00005587a75677cb <unavailable> + 6091

    5    libc.so.6                          0x00002b9fa0020460 __libc_start_main +
    245

    6    tmpgzcq0j20                        0x00005587a75673a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n\
    \        if char == \".\" || char == \"?\" || char == \"!\" {\n            if\
    \ sentence.hasPrefix(\"I\") {\n                boredoms += 1\n            }\n\
    \            sentence = \"\"\n        } else {\n            sentence.append(char)\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmptri94f5c/tmptri94f5c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae978b2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae978823b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae978823988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9788227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptri94f5c                        0x0000564653a9d56b <unavailable> + 5483

    5    libc.so.6                          0x00002ae978d18460 __libc_start_main +
    245

    6    tmptri94f5c                        0x0000564653a9d149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpty_bldvu.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ \".\")\n    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"!\"))\n    for sentence\
    \ in sentences {\n        if sentence.hasPrefix(\"I\") {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz7cwf2vi.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:13:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:14:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.first == \"I\" {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var count\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_ci66d2w.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824466
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    let boredoms =\
    \ sentences.filter { $0.starts(with: \"I\") }\n    return boredoms.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpl26_4n2a/tmpl26_4n2a.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6952ed1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6952bc8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6952bc8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6952bc77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl26_4n2a                        0x00005639c692f74b <unavailable> + 5963

    5    libc.so.6                          0x00002b69530bd460 __libc_start_main +
    245

    6    tmpl26_4n2a                        0x00005639c692f329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\").map { String($0) }\n\
    \    let boredoms = sentences.filter { $0.starts(with: \"I\") }\n    return boredoms.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp_7mybyv6/tmp_7mybyv6.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3499152c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3498e49b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3498e49988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3498e487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_7mybyv6                        0x000055a01ece882b <unavailable> + 6187

    5    libc.so.6                          0x00002b349933e460 __libc_start_main +
    245

    6    tmp_7mybyv6                        0x000055a01ece8409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpty_bldvu.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator: \".\"\
    )\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".?!\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcae3ywv6.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".?!\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".!?\")\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpfp5naexh.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".!?\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwi0c8xd7.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.split(separator: \".\"\
    )\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\", omittingEmptySubsequences:\
    \ true)\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpm11bezx4/tmpm11bezx4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21c802cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21c7d23b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21c7d23988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21c7d227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm11bezx4                        0x0000559f62fdc72b <unavailable> + 5931

    5    libc.so.6                          0x00002b21c8218460 __libc_start_main +
    245

    6    tmpm11bezx4                        0x0000559f62fdc309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var count = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_3sanwn2.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\").map { String($0) }\n\
    \    let boredoms = sentences.filter { $0.hasPrefix(\"I\") }\n    return boredoms.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpgfwy40rk/tmpgfwy40rk.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63ab290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63aaf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63aaf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63aaf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgfwy40rk                        0x00005593b3abd7bb <unavailable> + 6075

    5    libc.so.6                          0x00002b63ab47c460 __libc_start_main +
    245

    6    tmpgfwy40rk                        0x00005593b3abd399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ \".\")\n    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"!\"))\n    for sentence\
    \ in sentences {\n        if sentence.hasPrefix(\"I\") {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz7cwf2vi.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:13:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:14:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwi0c8xd7.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.first == \"I\" {\n            boredoms += 1\n     \
    \   }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp1yl3rpl.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwi0c8xd7.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n\
    \        if char == \".\" || char == \"?\" || char == \"!\" {\n            if\
    \ sentence.hasPrefix(\"I\") {\n                boredoms += 1\n            }\n\
    \            sentence = \"\"\n        } else {\n            sentence.append(char)\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmptri94f5c/tmptri94f5c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae978b2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae978823b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae978823988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9788227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptri94f5c                        0x0000564653a9d56b <unavailable> + 5483

    5    libc.so.6                          0x00002ae978d18460 __libc_start_main +
    245

    6    tmptri94f5c                        0x0000564653a9d149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.reduce(0) {\n        $0 + ($1.hasPrefix(\"I\") ? 1 :\
    \ 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpvkmgknim.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpl15_n3vj.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpgzcq0j20/tmpgzcq0j20.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f9fe34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f9fb2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f9fb2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f9fb2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgzcq0j20                        0x00005587a75677cb <unavailable> + 6091

    5    libc.so.6                          0x00002b9fa0020460 __libc_start_main +
    245

    6    tmpgzcq0j20                        0x00005587a75673a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n\
    \        if char == \".\" || char == \"?\" || char == \"!\" {\n            if\
    \ sentence.hasPrefix(\"I\") {\n                boredoms += 1\n            }\n\
    \            sentence = \"\"\n        } else {\n            sentence.append(char)\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmptri94f5c/tmptri94f5c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae978b2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae978823b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae978823988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9788227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptri94f5c                        0x0000564653a9d56b <unavailable> + 5483

    5    libc.so.6                          0x00002ae978d18460 __libc_start_main +
    245

    6    tmptri94f5c                        0x0000564653a9d149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ \".\")\n    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"!\"))\n    for sentence\
    \ in sentences {\n        if sentence.hasPrefix(\"I\") {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz7cwf2vi.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:13:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpz7cwf2vi.swift:14:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwi0c8xd7.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbdqzjjwp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\").map(String.init)\n \
    \   let boredoms = sentences.filter { $0.hasPrefix(\"I\") }\n    return boredoms.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp2b19ndbo/tmp2b19ndbo.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c02321c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c02018b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c02018988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c020177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b19ndbo                        0x000055fbec6e27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b2c0250d460 __libc_start_main +
    245

    6    tmp2b19ndbo                        0x000055fbec6e2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n\
    \        sentence.append(char)\n        if char == \".\" || char == \"?\" || char\
    \ == \"!\" {\n            if sentence.hasPrefix(\"I\") {\n                boredoms\
    \ += 1\n            }\n            sentence = \"\"\n        }\n    }\n    return\
    \ boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmp468exbf8/tmp468exbf8.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acbbeddfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acbbead6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acbbead6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acbbead57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp468exbf8                        0x00005601c519056b <unavailable> + 5483

    5    libc.so.6                          0x00002acbbefcb460 __libc_start_main +
    245

    6    tmp468exbf8                        0x00005601c5190149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".!?\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwn5tsoz8.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".!?\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpty_bldvu.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var boredoms =\
    \ 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".!?\")\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpfp5naexh.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".!?\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpp27w5j8k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var sentence = \"\"\n    for char in S {\n\
    \        if char == \".\" || char == \"?\" || char == \"!\" {\n            if\
    \ sentence.hasPrefix(\"I\") {\n                boredoms += 1\n            }\n\
    \            sentence = \"\"\n        } else {\n            sentence.append(char)\n\
    \        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmptri94f5c/tmptri94f5c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae978b2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae978823b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae978823988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9788227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptri94f5c                        0x0000564653a9d56b <unavailable> + 5483

    5    libc.so.6                          0x00002ae978d18460 __libc_start_main +
    245

    6    tmptri94f5c                        0x0000564653a9d149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824400
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    return sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_teop0pb.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ [\".\", \"?\", \"!\"])\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7z4xhcth.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.split(separator: \".\")\n    var count = 0\n\
    \    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \")\n        if words.first == \"I\" {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824466
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        let words =\
    \ sentence.components(separatedBy: \" \")\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgrbc_ij.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpur3y__gs.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8ua9v192.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"\
    ])\n    var boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba0dyjiy.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    let sentences = S.components(separatedBy:\
    \ \".\")\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwi0c8xd7.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    var words = S.components(separatedBy: \"\
    \ \")\n    for word in words {\n        if word == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_xsjymyk.swift:12:19: error: value of type 'String' has no member\
    \ 'components'\n    var words = S.components(separatedBy: \" \")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n\
    \            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp893x8r5b.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824399

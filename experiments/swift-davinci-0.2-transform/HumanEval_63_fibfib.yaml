name: HumanEval_63_fibfib
language: swift
prompt: "\n/// The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n/// fibfib(0) == 0\n/// fibfib(1) == 0\n\
  /// fibfib(2) == 1\n/// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  /// Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n/// >>> fibfib(n: 1)\n/// 0\n/// >>> fibfib(n: 5)\n/// 4\n///\
  \ >>> fibfib(n: 8)\n/// 24\nfunc fibfib(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fibfib(n: 2) == 1)\nassert(fibfib(n: 1)\
  \ == 0)\nassert(fibfib(n: 5) == 4)\nassert(fibfib(n: 8) == 24)\nassert(fibfib(n:\
  \ 10) == 81)\nassert(fibfib(n: 12) == 274)\nassert(fibfib(n: 14) == 927)"
completions: ["    if n == 0 {\n        return 0\n    } else if n == 1 {\n       \
    \ return 0\n    } else if n == 2 {\n        return 1\n    } else {\n        return\
    \ fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    var a = 0\n \
    \   var b = 0\n    var c = 1\n    var d = 0\n    for _ in 0..<n {\n        d =\
    \ a + b + c\n        a = b\n        b = c\n        c = d\n    }\n    return d",
  "    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 0\n \
    \   } else if n == 2 {\n        return 1\n    } else {\n        return fibfib(n:\
    \ n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    var a = 0\n    var b =\
    \ 0\n    var c = 1\n    var d = 0\n    for _ in 0..<n {\n        d = a + b + c\n\
    \        a = b\n        b = c\n        c = d\n    }\n    return d", "    if n\
    \ == 0 {\n        return 0\n    } else if n == 1 {\n        return 0\n    } else\
    \ if n == 2 {\n        return 1\n    } else {\n        return fibfib(n: n-1) +\
    \ fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    if n == 0 {\n        return 0\n\
    \    } else if n == 1 {\n        return 0\n    } else if n == 2 {\n        return\
    \ 1\n    } else {\n        return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n:\
    \ n-3)\n    }", "    if n < 2 {\n        return 0\n    } else if n == 2 {\n  \
    \      return 1\n    } else {\n        return fibfib(n: n-1) + fibfib(n: n-2)\
    \ + fibfib(n: n-3)\n    }", "    if n == 0 {\n        return 0\n    } else if\
    \ n == 1 {\n        return 0\n    } else if n == 2 {\n        return 1\n    }\
    \ else {\n        return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n  \
    \  }", "    var a = 0\n    var b = 0\n    var c = 1\n    var d = 0\n    for _\
    \ in 0..<n {\n        d = a + b + c\n        a = b\n        b = c\n        c =\
    \ d\n    }\n    return d", "    if n == 0 {\n        return 0\n    } else if n\
    \ == 1 {\n        return 0\n    } else if n == 2 {\n        return 1\n    } else\
    \ {\n        return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }",
  "    if n == 0 {\n        return 0\n    } else if n == 1 {\n        return 0\n \
    \   } else if n == 2 {\n        return 1\n    } else {\n        return fibfib(n:\
    \ n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    var a = 0\n    var b =\
    \ 0\n    var c = 1\n    var d = 0\n    for _ in 0..<n {\n        d = a + b + c\n\
    \        a = b\n        b = c\n        c = d\n    }\n    return d", "    if n\
    \ == 0 {\n        return 0\n    } else if n == 1 {\n        return 0\n    } else\
    \ if n == 2 {\n        return 1\n    } else {\n        return fibfib(n: n-1) +\
    \ fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    if n == 0 {\n        return 0\n\
    \    } else if n == 1 {\n        return 0\n    } else if n == 2 {\n        return\
    \ 1\n    } else {\n        return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n:\
    \ n-3)\n    }", "    if n == 0 {\n        return 0\n    } else if n == 1 {\n \
    \       return 0\n    } else if n == 2 {\n        return 1\n    } else {\n   \
    \     return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    if\
    \ n == 0 {\n        return 0\n    } else if n == 1 {\n        return 0\n    }\
    \ else if n == 2 {\n        return 1\n    } else {\n        return fibfib(n: n-1)\
    \ + fibfib(n: n-2) + fibfib(n: n-3)\n    }", "    if n == 0 {\n        return\
    \ 0\n    } else if n == 1 {\n        return 0\n    } else if n == 2 {\n      \
    \  return 1\n    } else {\n        return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n:\
    \ n-3)\n    }", "    var a = 0\n    var b = 0\n    var c = 1\n    for _ in 0..<n\
    \ {\n        a = b\n        b = c\n        c = a + b + c\n    }\n    return a",
  "    var a = 0\n    var b = 0\n    var c = 1\n    var d = 0\n    for _ in 0..<n\
    \ {\n        d = a + b + c\n        a = b\n        b = c\n        c = d\n    }\n\
    \    return d", "    if n == 0 {\n        return 0\n    } else if n == 1 {\n \
    \       return 0\n    } else if n == 2 {\n        return 1\n    } else {\n   \
    \     return fibfib(n: n-1) + fibfib(n: n-2) + fibfib(n: n-3)\n    }"]
stop_tokens:
- "\n}"

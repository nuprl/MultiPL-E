language: swift
name: HumanEval_15_string_sequence
results:
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map(String.init).joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var sequence\
    \ = \"\"\n    for i in 0...n {\n        sequence += \"\\(i) \"\n    }\n    return\
    \ sequence\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmphja6ou73/tmphja6ou73.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b874b1abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b874aea2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b874aea2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b874aea17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphja6ou73                        0x0000558ccc040722 <unavailable> + 5922

    5    libc.so.6                          0x00002b874b397460 __libc_start_main +
    245

    6    tmphja6ou73                        0x0000558ccc040389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var str\
    \ = \"\"\n    for i in 0...n {\n        str += \"\\(i) \"\n    }\n    return str\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmpu3utujek/tmpu3utujek.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16f6b6dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16f6864b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16f6864988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16f68637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu3utujek                        0x000056131aed8722 <unavailable> + 5922

    5    libc.so.6                          0x00002b16f6d59460 __libc_start_main +
    245

    6    tmpu3utujek                        0x000056131aed8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += String(i)\n        if i != n {\n\
    \            s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    return\
    \ (0...n).map { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpzq3ut5nn/tmpzq3ut5nn.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afffbd1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afffba16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afffba16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afffba157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq3ut5nn                        0x00005642e71335d2 <unavailable> + 5586

    5    libc.so.6                          0x00002afffbf0b460 __libc_start_main +
    245

    6    tmpzq3ut5nn                        0x00005642e7133239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var s\
    \ = \"\"\n    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp866lqlj8/tmp866lqlj8.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dde0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ddddcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ddddcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ddddca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp866lqlj8                        0x000055eadd431722 <unavailable> + 5922

    5    libc.so.6                          0x00002b8dde2c0460 __libc_start_main +
    245

    6    tmp866lqlj8                        0x000055eadd431389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(n: 0)\n/// \"0\"\n/// >>> string_sequence(n:\
    \ 5)\n/// \"0 1 2 3 4 5\"\nfunc string_sequence(n: Int) -> String {\n    var result\
    \ = \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmp2o5ok8gv/tmp2o5ok8gv.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7d39a8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7d369fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7d369f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7d369e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2o5ok8gv                        0x000055a284846722 <unavailable> + 5922

    5    libc.so.6                          0x00002ab7d3b94460 __libc_start_main +
    245

    6    tmp2o5ok8gv                        0x000055a284846389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824436

name: HumanEval_88_sort_array
language: swift
prompt: "\n/// Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n/// you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n/// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n/// Note:\n///\
  \ * don't change the given array.\n/// Examples:\n/// >>> sort_array(array: [] as\
  \ [Int])\n/// [] as [Int]\n/// >>> sort_array(array: [5])\n/// [5]\n/// >>> sort_array(array:\
  \ [2, 4, 3, 0, 1, 5])\n/// [0, 1, 2, 3, 4, 5]\n/// >>> sort_array(array: [2, 4,\
  \ 3, 0, 1, 5, 6])\n/// [6, 5, 4, 3, 2, 1, 0]\nfunc sort_array(array: [Int]) -> [Int]\
  \ {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_array(array: [] as [Int]) == [] as\
  \ [Int])\nassert(sort_array(array: [5]) == [5])\nassert(sort_array(array: [2, 4,\
  \ 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5])\nassert(sort_array(array: [2, 4, 3, 0, 1,\
  \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0])\nassert(sort_array(array: [2, 1]) == [1, 2])\n\
  assert(sort_array(array: [15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87])\n\
  assert(sort_array(array: [21, 14, 23, 11]) == [23, 21, 14, 11])"
completions: ["    guard array.count > 1 else { return array }\n    let sum = array[0]\
    \ + array[array.count - 1]\n    let sorted = array.sorted(by: sum % 2 == 0 ? >\
    \ : <)\n    return sorted", "    var result = array\n    if array.count > 1 {\n\
    \        if array[0] + array[array.count - 1] % 2 == 0 {\n            result.sort(by:\
    \ {$0 > $1})\n        } else {\n            result.sort(by: {$0 < $1})\n     \
    \   }\n    }\n    return result", "    var array = array\n    if array.count >\
    \ 1 {\n        let first = array.removeFirst()\n        let last = array.removeLast()\n\
    \        if (first + last) % 2 == 0 {\n            array.sort(by: >)\n       \
    \ } else {\n            array.sort(by: <)\n        }\n        array.insert(first,\
    \ at: 0)\n        array.append(last)\n    }\n    return array", "    var result\
    \ = array\n    if array.count > 1 {\n        if array[0] + array[array.count -\
    \ 1] % 2 == 0 {\n            result.sort(by: >)\n        } else {\n          \
    \  result.sort(by: <)\n        }\n    }\n    return result", "    var result =\
    \ array\n    let sum = array.first! + array.last!\n    if sum % 2 == 0 {\n   \
    \     result.sort(by: >)\n    } else {\n        result.sort(by: <)\n    }\n  \
    \  return result", "    var result = array\n    if array.count > 1 {\n       \
    \ if array[0] + array[array.count - 1] % 2 == 0 {\n            result.sort(by:\
    \ >)\n        } else {\n            result.sort(by: <)\n        }\n    }\n   \
    \ return result", "    var array = array\n    if array.count == 0 {\n        return\
    \ array\n    }\n    if array.count == 1 {\n        return array\n    }\n    if\
    \ array.count == 2 {\n        if array[0] > array[1] {\n            array.swapAt(0,\
    \ 1)\n        }\n        return array\n    }\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        array.sort(by: >)\n    } else {\n        array.sort(by:\
    \ <)\n    }\n    return array", "    var result = array\n    if array.count >\
    \ 1 {\n        if array[0] + array[array.count - 1] % 2 == 0 {\n            result.sort(by:\
    \ >)\n        } else {\n            result.sort(by: <)\n        }\n    }\n   \
    \ return result", "    var array = array\n    if array.count == 0 {\n        return\
    \ array\n    }\n    if array.count == 1 {\n        return array\n    }\n    if\
    \ array.count == 2 {\n        if array[0] > array[1] {\n            array.swapAt(0,\
    \ 1)\n        }\n        return array\n    }\n    if (array[0] + array[array.count\
    \ - 1]) % 2 == 0 {\n        array.sort(by: >)\n    } else {\n        array.sort(by:\
    \ <)\n    }\n    return array", "    var sortedArray = array\n    if array.count\
    \ > 1 {\n        if array[0] + array[array.count - 1] % 2 == 0 {\n           \
    \ sortedArray.sort(by: >)\n        } else {\n            sortedArray.sort(by:\
    \ <)\n        }\n    }\n    return sortedArray", "    guard array.count > 1 else\
    \ { return array }\n    let sum = array[0] + array[array.count - 1]\n    let sorted\
    \ = array.sorted()\n    return sum % 2 == 0 ? sorted.reversed() : sorted", " \
    \   guard array.count > 1 else { return array }\n    let sum = array[0] + array[array.count\
    \ - 1]\n    let sorted = array.sorted()\n    return sum % 2 == 0 ? sorted.reversed()\
    \ : sorted", "    var array = array\n    if array.count > 1 {\n        let first\
    \ = array.removeFirst()\n        let last = array.removeLast()\n        let sum\
    \ = first + last\n        if sum % 2 == 0 {\n            array.sort(by: >)\n \
    \       } else {\n            array.sort(by: <)\n        }\n        array.insert(first,\
    \ at: 0)\n        array.append(last)\n    }\n    return array", "    var result\
    \ = array\n    if array.count > 1 {\n        let first = array.first!\n      \
    \  let last = array.last!\n        if (first + last) % 2 == 0 {\n            result.sort(by:\
    \ >)\n        } else {\n            result.sort(by: <)\n        }\n    }\n   \
    \ return result", "    var result = array\n    for i in 0..<result.count {\n \
    \       for j in i+1..<result.count {\n            if (i + j) % 2 == 0 {\n   \
    \             if result[i] < result[j] {\n                    let temp = result[i]\n\
    \                    result[i] = result[j]\n                    result[j] = temp\n\
    \                }\n            } else {\n                if result[i] > result[j]\
    \ {\n                    let temp = result[i]\n                    result[i] =\
    \ result[j]\n                    result[j] = temp\n                }\n       \
    \     }\n        }\n    }\n    return result", "    var result = array\n    if\
    \ array.count > 1 {\n        if array[0] + array[array.count - 1] % 2 == 0 {\n\
    \            result.sort(by: >)\n        } else {\n            result.sort(by:\
    \ <)\n        }\n    }\n    return result", "    var array = array\n    if array.isEmpty\
    \ {\n        return array\n    }\n    if array.count == 1 {\n        return array\n\
    \    }\n    if (array[0] + array[array.count - 1]) % 2 == 0 {\n        array.sort(by:\
    \ >)\n    } else {\n        array.sort(by: <)\n    }\n    return array", "   \
    \ var array = array\n    if array.count > 1 {\n        if array[0] + array[array.count\
    \ - 1] % 2 == 0 {\n            array.sort(by: >)\n        } else {\n         \
    \   array.sort(by: <)\n        }\n    }\n    return array", "    var result =\
    \ array\n    if array.count > 0 {\n        if array[0] + array[array.count - 1]\
    \ % 2 == 0 {\n            result.sort(by: >)\n        } else {\n            result.sort(by:\
    \ <)\n        }\n    }\n    return result", "    var result = array\n    if result.count\
    \ > 1 {\n        if result[0] + result[result.count - 1] % 2 == 0 {\n        \
    \    result.sort(by: >)\n        } else {\n            result.sort(by: <)\n  \
    \      }\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_33_sort_third
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes a list l and returns a list l' such\
  \ that\n    // l' is identical to l in the indicies that are not divisible by three,\
  \ while its values at the indicies that are divisible by three are equal\n    //\
  \ to the values of the corresponding indicies of l, but sorted.\n    public static\
  \ ArrayList<Integer> sortThird(ArrayList<Integer> l) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(sortThird((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)6, (int)3, (int)4, (int)8, (int)9, (int)2)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)6, (int)3, (int)4, (int)8, (int)9, (int)5)))));\n    assert(sortThird((new\
  \ ArrayList<Integer>(Arrays.asList((int)5, (int)8, (int)3, (int)4, (int)6, (int)9,\
  \ (int)2)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)8, (int)3,\
  \ (int)4, (int)6, (int)9, (int)5)))));\n    assert(sortThird((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)6, (int)9, (int)4, (int)8, (int)3, (int)2)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)6, (int)9, (int)4, (int)8, (int)3, (int)5)))));\n    assert(sortThird((new\
  \ ArrayList<Integer>(Arrays.asList((int)5, (int)6, (int)3, (int)4, (int)8, (int)9,\
  \ (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6,\
  \ (int)3, (int)4, (int)8, (int)9, (int)5, (int)1)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

completions: []
language: java
name: HumanEval_105_by_length
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n    // reverse the resulting array, and then replace each\
  \ digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\"\
  , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    //\
  \ >>> by_length([2, 1, 1, 4, 5, 8, 2, 3])   \n    // [\"Eight\", \"Five\", \"Four\"\
  , \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    // If the array is empty,\
  \ return an empty array:\n    // If the array has any strange number ignore it:\n\
  \    // >>> by_length([1, -1 , 55]) \n    // ['One']\n    public static ArrayList<String>\
  \ byLength(ArrayList<Integer> arr) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(byLength((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)1, (int)4, (int)5, (int)8,\
  \ (int)2, (int)3)))).equals((new ArrayList<String>(Arrays.asList((String)\"Eight\"\
  , (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"\
  Two\", (String)\"One\", (String)\"One\")))));\n    assert(byLength((new ArrayList<Integer>(Arrays.asList()))).equals((new\
  \ ArrayList<String>(Arrays.asList()))));\n    assert(byLength((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)-1, (int)55)))).equals((new ArrayList<String>(Arrays.asList((String)\"One\"\
  )))));\n    assert(byLength((new ArrayList<Integer>(Arrays.asList((int)1, (int)-1,\
  \ (int)3, (int)2)))).equals((new ArrayList<String>(Arrays.asList((String)\"Three\"\
  , (String)\"Two\", (String)\"One\")))));\n    assert(byLength((new ArrayList<Integer>(Arrays.asList((int)9,\
  \ (int)4, (int)8)))).equals((new ArrayList<String>(Arrays.asList((String)\"Nine\"\
  , (String)\"Eight\", (String)\"Four\")))));\n    }\n\n}\n"

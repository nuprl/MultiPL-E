completions: []
language: java
name: HumanEval_145_order_by_points
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function which sorts the given list of integers\n\
  \    // in ascending order according to the sum of their digits.\n    // Note: if\
  \ there are several items with similar sum of their digits,\n    // order them based\
  \ on their index in original list.\n    // For example:\n    public static ArrayList<Integer>\
  \ orderByPoints(ArrayList<Integer> nums) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)11, (int)-1, (int)-11, (int)-12)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-11, (int)1, (int)-12, (int)11)))));\n\
  \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1234, (int)423,\
  \ (int)463, (int)145, (int)2, (int)423, (int)423, (int)53, (int)6, (int)37, (int)3457,\
  \ (int)3, (int)56, (int)0, (int)46)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)2, (int)3, (int)6, (int)53, (int)423, (int)423, (int)423, (int)1234, (int)145,\
  \ (int)37, (int)46, (int)56, (int)463, (int)3457)))));\n    assert(orderByPoints((new\
  \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
  \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)1, (int)-11,\
  \ (int)-32, (int)43, (int)54, (int)-98, (int)2, (int)-3)))).equals((new ArrayList<Integer>(Arrays.asList((int)-3,\
  \ (int)-32, (int)-98, (int)-11, (int)1, (int)2, (int)43, (int)54)))));\n    assert(orderByPoints((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
  \ (int)7, (int)8, (int)9, (int)10, (int)11)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)10, (int)2, (int)11, (int)3, (int)4, (int)5, (int)6, (int)7, (int)8, (int)9)))));\n\
  \    assert(orderByPoints((new ArrayList<Integer>(Arrays.asList((int)0, (int)6,\
  \ (int)6, (int)-76, (int)-21, (int)23, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)-76,\
  \ (int)-21, (int)0, (int)4, (int)23, (int)6, (int)6)))));\n    }\n\n}\n"

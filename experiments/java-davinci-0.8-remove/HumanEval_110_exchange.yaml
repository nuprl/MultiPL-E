completions: []
language: java
name: HumanEval_110_exchange
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this problem, you will implement a function that takes\
  \ two lists of numbers,\n    // and determines whether it is possible to perform\
  \ an exchange of elements\n    // between them to make lst1 a list of only even\
  \ numbers.\n    // There is no limit on the number of exchanged elements between\
  \ lst1 and lst2.\n    // If it is possible to exchange elements between the lst1\
  \ and lst2 to make\n    // all the elements of lst1 to be even, return \"YES\".\n\
  \    // Otherwise, return \"NO\".\n    // For example:\n    // It is assumed that\
  \ the input lists will be non-empty.\n    public static String exchange(ArrayList<Integer>\
  \ lst1, ArrayList<Integer> lst2) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(exchange((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4))), (new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3, (int)4)))).equals((\"YES\")));\n    assert(exchange((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3, (int)4))), (new ArrayList<Integer>(Arrays.asList((int)1, (int)5,\
  \ (int)3, (int)4)))).equals((\"NO\")));\n    assert(exchange((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3, (int)4))), (new ArrayList<Integer>(Arrays.asList((int)2, (int)1,\
  \ (int)4, (int)3)))).equals((\"YES\")));\n    assert(exchange((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)7, (int)3))), (new ArrayList<Integer>(Arrays.asList((int)2, (int)6, (int)4)))).equals((\"\
  YES\")));\n    assert(exchange((new ArrayList<Integer>(Arrays.asList((int)5, (int)7,\
  \ (int)3))), (new ArrayList<Integer>(Arrays.asList((int)2, (int)6, (int)3)))).equals((\"\
  NO\")));\n    assert(exchange((new ArrayList<Integer>(Arrays.asList((int)3, (int)2,\
  \ (int)6, (int)1, (int)8, (int)9))), (new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)5, (int)5, (int)1, (int)1, (int)1)))).equals((\"NO\")));\n    assert(exchange((new\
  \ ArrayList<Integer>(Arrays.asList((int)100, (int)200))), (new ArrayList<Integer>(Arrays.asList((int)200,\
  \ (int)200)))).equals((\"YES\")));\n    }\n\n}\n"

completions: []
language: java
name: HumanEval_8_sum_product
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // For a given list of integers, return a tuple consisting\
  \ of a sum and a product of all the integers in a list.\n    // Empty sum should\
  \ be equal to 0 and empty product should be equal to 1.\n    public static Pair<Integer,\
  \ Integer> sumProduct(ArrayList<Integer> numbers) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(sumProduct((new\
  \ ArrayList<Integer>(Arrays.asList()))).equals((Pair.with(0, 1))));\n    assert(sumProduct((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1)))).equals((Pair.with(3,\
  \ 1))));\n    assert(sumProduct((new ArrayList<Integer>(Arrays.asList((int)100,\
  \ (int)0)))).equals((Pair.with(100, 0))));\n    assert(sumProduct((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)5, (int)7)))).equals((Pair.with(15, 105))));\n    assert(sumProduct((new\
  \ ArrayList<Integer>(Arrays.asList((int)10)))).equals((Pair.with(10, 10))));\n \
  \   }\n\n}\n"

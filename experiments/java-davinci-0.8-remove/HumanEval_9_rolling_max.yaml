completions: []
language: java
name: HumanEval_9_rolling_max
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // From a given list of integers, generate a list of rolling\
  \ maximum element found until given moment\n    // in the sequence.\n    public\
  \ static ArrayList<Integer> rollingMax(ArrayList<Integer> numbers) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(rollingMax((new\
  \ ArrayList<Integer>(Arrays.asList()))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
  \    assert(rollingMax((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3,\
  \ (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3,\
  \ (int)4)))));\n    assert(rollingMax((new ArrayList<Integer>(Arrays.asList((int)4,\
  \ (int)3, (int)2, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
  \ (int)4, (int)4, (int)4)))));\n    assert(rollingMax((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)2, (int)3, (int)100, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)3, (int)3, (int)100, (int)100)))));\n    }\n\n}\n"

name: HumanEval_112_reverse_delete
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Task\n    // We are given two strings s and c, you have\
  \ to deleted all the characters in s that are equal to any character in c\n    //\
  \ then check if the result string is palindrome.\n    // A string is called palindrome\
  \ if it reads the same backward as forward.\n    // You should return a tuple containing\
  \ the result string and True/False for the check.\n    // Example\n    public static\
  \ Pair<String, Boolean> reverseDelete(String s, String c) {\n"
tests: "return Pair.with(\"\",true);\n    }\n    public static void main(String[]\
  \ args) {\n    assert(reverseDelete((\"abcde\"), (\"ae\")).equals((Pair.with(\"\
  bcd\", false))));\n    assert(reverseDelete((\"abcdef\"), (\"b\")).equals((Pair.with(\"\
  acdef\", false))));\n    assert(reverseDelete((\"abcdedcba\"), (\"ab\")).equals((Pair.with(\"\
  cdedc\", true))));\n    assert(reverseDelete((\"dwik\"), (\"w\")).equals((Pair.with(\"\
  dik\", false))));\n    assert(reverseDelete((\"a\"), (\"a\")).equals((Pair.with(\"\
  \", true))));\n    assert(reverseDelete((\"abcdedcba\"), (\"\")).equals((Pair.with(\"\
  abcdedcba\", true))));\n    assert(reverseDelete((\"abcdedcba\"), (\"v\")).equals((Pair.with(\"\
  abcdedcba\", true))));\n    assert(reverseDelete((\"vabba\"), (\"v\")).equals((Pair.with(\"\
  abba\", true))));\n    assert(reverseDelete((\"mamma\"), (\"mia\")).equals((Pair.with(\"\
  \", true))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_78_hex_key
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You have been tasked to write a function that receives \n\
  \    // a hexadecimal number as a string and counts the number of hexadecimal \n\
  \    // digits that are primes (prime number, or a prime, is a natural number \n\
  \    // greater than 1 that is not a product of two smaller natural numbers).\n\
  \    // Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n\
  \    // Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine\
  \ a number of the following digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal\
  \ 13).\n    // Note: you may assume the input is always correct or empty string,\
  \ \n    // and symbols A,B,C,D,E,F are always uppercase.\n    // Examples:\n   \
  \ public static int hexKey(String num) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(hexKey((\"\
  AB\")) == (1));\n    assert(hexKey((\"1077E\")) == (2));\n    assert(hexKey((\"\
  ABED1A33\")) == (4));\n    assert(hexKey((\"2020\")) == (2));\n    assert(hexKey((\"\
  123456789ABCDEF0\")) == (6));\n    assert(hexKey((\"112233445566778899AABBCCDDEEFF00\"\
  )) == (12));\n    assert(hexKey((new String(Arrays.asList()))) == (0));\n    }\n\
  \n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_130_tri
language: rkt
prompt: "#lang racket\n\n;; Everyone knows Fibonacci sequence, it was studied deeply\
  \ by mathematicians in \n;; the last couple centuries. However, what people don't\
  \ know is Tribonacci sequence.\n;; Tribonacci sequence is defined by the recurrence:\n\
  ;; tri(1) = 3\n;; tri(n) = 1 + n / 2, if n is even.\n;; tri(n) =  tri(n - 1) + tri(n\
  \ - 2) + tri(n + 1), if n is odd.\n;; For example:\n;; tri(2) = 1 + (2 / 2) = 2\n\
  ;; tri(4) = 3\n;; tri(3) = tri(2) + tri(1) + tri(4)\n;; = 2 + 3 + 3 = 8 \n;; You\
  \ are given a non-negative integer number n, you have to a return a list of the\
  \ \n;; first n + 1 numbers of the Tribonacci sequence.\n;; Examples:\n;; >>> (tri\
  \ 3)\n;; (list 1 3 2 8)\n(define (tri n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate tri))\n\
  \    (check-equal? (candidate 3) (list 1 3 2 8))\n    (check-equal? (candidate 4)\
  \ (list 1 3 2 8 3))\n    (check-equal? (candidate 5) (list 1 3 2 8 3 15))\n    (check-equal?\
  \ (candidate 6) (list 1 3 2 8 3 15 4))\n    (check-equal? (candidate 7) (list 1\
  \ 3 2 8 3 15 4 24))\n    (check-equal? (candidate 8) (list 1 3 2 8 3 15 4 24 5))\n\
  \    (check-equal? (candidate 9) (list 1 3 2 8 3 15 4 24 5 35))\n    (check-equal?\
  \ (candidate 20) (list 1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11))\n\
  \    (check-equal? (candidate 0) (list 1))\n    (check-equal? (candidate 1) (list\
  \ 1 3))\n))\n\n(test-humaneval)"
completions: ["  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1\
    \ 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ n 3)\n                  (list 1 3 2 8)\n                  (if (= n 4)\n    \
    \                  (list 1 3 2 8 3)\n                      (if (= n 5)\n     \
    \                     (list 1 3 2 8 3 11)\n                          (if (= n\
    \ 6)\n                              (list 1 3 2 8 3 11 21)\n                 \
    \             (if (= n 7)\n                                  (list 1 3 2 8 3 11\
    \ 21 34)\n                                  (if (= n 8)\n                    \
    \                  (list 1 3 2 8 3 11 21 34 55)\n                            \
    \          (if (= n 9)\n                                          (list 1 3 2\
    \ 8 3 11 21 34 55 89)\n                                          (if (= n 10)\n\
    \                                              (list 1 3 2 8 3 11 21 34 55 89\
    \ 144)\n                                              (if (= n 11)\n         \
    \                                         (list 1 3 2 8 3 11 21 34 55 89 144 233)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 3 11 21 34 55 89 144\
    \ 233 377)\n                                                      (if (= n 13)\n\
    \                                                          (list 1 3 2 8 3 11\
    \ 21 34 55 89 144 233 377 610)\n                                             \
    \             (if (= n 14)\n                                                 \
    \             (list 1 3 2 8 3 11 21 34 55 89 144 233 377 610 987)\n          \
    \                                                    (if (= n 15)\n          \
    \                                                        (list 1 3 2 8 3 11 21\
    \ 34 55 89 144 233 377 610 987 1597)\n                                       \
    \                           (if (= n 16)\n                                   \
    \                                   (list 1 3 2 8 3 11 21 34 55 89 144 233 377\
    \ 610 987 1597 2584)\n                                                       \
    \               (if (= n 17)\n                                               \
    \                           (list 1 3 2 8 3 11 21 34 55 89 144 233 377 610 987\
    \ 1597 2584 4181)\n                                                          \
    \                (if (= n 18)\n                                              \
    \                                (list 1 3 2 8 3 11 21 34 55 89 144 233 377 610\
    \ 987 1597 2584 4181 6765)", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 2))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (-\
    \ n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                  \
    \                        (list-ref (tri (- n 1)) (- n 2))\n                  \
    \                        (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n\
    \ 1)) (+ n 1)))) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n    \
    \  (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (tri\
    \ n) (list (+ 1 (/ n 2))))\n                  (cons (tri n) (list (+ (car (tri\
    \ (- n 1))) (car (tri (- n 2))) (car (tri (+ n 1)))))))))))\n", "  (cond\n   \
    \ [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n \
    \   [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n \
    \                                         (list-ref (tri (- n 1)) (- n 2))\n \
    \                                         (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  )))))\n", "  (define (tri-iter n a\
    \ b c)\n    (cond ((= n 0) '())\n          ((= n 1) (list a))\n          ((= n\
    \ 2) (list a b))\n          ((= n 3) (list a b c))\n          (else (cons a (tri-iter\
    \ (- n 1) b c (+ a b c))))))\n  (tri-iter n 1 3 2))\n", "  (if (= n 0)\n     \
    \ (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n \
    \             (list 1 3 2)\n              (if (= (modulo n 2) 0)\n           \
    \       (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri\
    \ (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n\
    \    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                          (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                          (list-ref\
    \ (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n\
    \                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n               \
    \   )))))\n", "  (define (tri-iter n a b c)\n    (if (= n 0)\n        (list a\
    \ b c)\n        (if (even? n)\n            (tri-iter (- n 1) a b (+ c (/ n 2)))\n\
    \            (tri-iter (- n 1) a (+ b c) (+ c (+ b a))))))\n  (tri-iter n 1 3\
    \ 2))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1\
    \ 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (modulo n 2) 0)\n                  (cons (tri (- n 1)) (list (+ 1 (/ n 2))))\n\
    \                  (cons (tri (- n 1)) (list (+ (tri (- n 1)) (tri (- n 2)) (tri\
    \ (+ n 1))))))))))\n", "  (define (tri-iter n a b c)\n    (if (= n 0)\n      \
    \  (list a b c)\n        (if (even? n)\n            (tri-iter (- n 1) a b (+ c\
    \ (/ n 2)))\n            (tri-iter (- n 1) a (+ b c) (+ c (+ b a))))))\n  (tri-iter\
    \ n 1 3 2))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n \
    \   [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                          (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                          (list-ref\
    \ (tri (- n 1)) (+ n 1)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n\
    \ 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1))\n                                \
    \          (list-ref (tri (- n 1)) (- n 2))\n                                \
    \          (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n acc)\n\
    \    (if (= n 0)\n        acc\n        (let ((last (car (reverse acc))))\n   \
    \       (tri-iter (- n 1) (append acc (list (+ last (car (reverse (cdr (reverse\
    \ acc)))) (car (reverse (cdr (reverse (cdr (reverse acc)))))))))))))\n  (tri-iter\
    \ n (list 3)))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n       \
    \   (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n          \
    \    (if (= (modulo n 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n\
    \                  (cons (tri n) (tri (- n 1)))\n                  )))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n\
    \ 2) 0)\n                  (cons (tri n) (cons (/ n 2) (tri (- n 1))))\n     \
    \             (cons (tri n) (cons (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1)))\
    \ (tri (- n 1)))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (modulo n 2) 0)\n                  (cons (tri n) (tri (- n\
    \ 1)))\n                  (cons (tri n) (tri (- n 1)) (tri (- n 2)) (tri (+ n\
    \ 1))))))))\n", "  (define (tri-helper n)\n    (cond ((= n 1) 3)\n          ((even?\
    \ n) (+ 1 (/ n 2)))\n          (else (+ (tri-helper (- n 1)) (tri-helper (- n\
    \ 2)) (tri-helper (+ n 1))))))\n  (map tri-helper (range 0 (+ n 1))))\n", "  (if\
    \ (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n         \
    \ (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                           (list-ref (tri (- n 2)) (-\
    \ n 2))\n                           (list-ref (tri (+ n 1)) (+ n 1)))\n      \
    \                  (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n  \
    \    (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (+ n 1)) n)) (tri (-\
    \ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (let ((l (tri (- n 1))))\n                (append l (list (+ (list-ref l (-\
    \ n 1)) (list-ref l (- n 2)) (list-ref l (- n 3))))))))))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1\
    \ (tri (- n 1))) (cons (tri (- n 2)) (tri (+ n 1)))))))))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n          \
    \                                (list-ref (tri (- n 1)) (- n 2))\n          \
    \                                (list-ref (tri (- n 1)) (+ n 1)))))]))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (add1 (+ (list-ref (tri (- n 1)) (- n 1))\n                    \
    \             (list-ref (tri (- n 2)) (- n 2))\n                             \
    \    (list-ref (tri (+ n 1)) (+ n 1))))\n                        (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 3)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n \
    \   [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n\
    \ 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= n 3)\n                  (list 1 3 2 8)\n                  (if\
    \ (= n 4)\n                      (list 1 3 2 8 13)\n                      (if\
    \ (= n 5)\n                          (list 1 3 2 8 13 21)\n                  \
    \        (if (= n 6)\n                              (list 1 3 2 8 13 21 34)\n\
    \                              (if (= n 7)\n                                 \
    \ (list 1 3 2 8 13 21 34 55)\n                                  (if (= n 8)\n\
    \                                      (list 1 3 2 8 13 21 34 55 89)\n       \
    \                               (if (= n 9)\n                                \
    \          (list 1 3 2 8 13 21 34 55 89 144)\n                               \
    \           (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (+ 1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (+ n\
    \ 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (if (zero? n)\n      (list 1)\n   \
    \   (if (zero? (modulo n 2))\n          (cons (quotient n 2) (tri (- n 1)))\n\
    \          (cons (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))\n", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n\
    \ 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n\
    \ 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons\
    \ 2 (cons (tri-helper 3 n) '()))))]))\n", "  (if (= n 0)\n      (list 1)\n   \
    \   (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n          \
    \        (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (-\
    \ n 2)) (list-ref (tri (+ n 1)) n)) (tri (- n 1))))))))\n", "  (define (tri-iter\
    \ n a b c)\n    (if (= n 0)\n        (list a b c)\n        (if (even? n)\n   \
    \         (tri-iter (- n 1) a b (+ c (/ n 2)))\n            (tri-iter (- n 1)\
    \ a (+ b c) (+ c (+ b a))))))\n  (tri-iter n 1 3 2))\n", "  (cond [(= n 0) (list\
    \ 1)]\n        [(= n 1) (list 1 3)]\n        [(= n 2) (list 1 3 2)]\n        [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n          \
    \                                    (list-ref (tri (- n 1)) (- n 2))\n      \
    \                                        (list-ref (tri (- n 1)) (+ n 1)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                          \
    \ (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (quotient n 2) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (+ n 1))) (tri (- n 1))))))))", "  (define (tri-iter n acc)\n\
    \    (if (= n 0)\n        acc\n        (tri-iter (- n 1) (cons (tri-n n) acc))))\n\
    \  (tri-iter n (list)))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons 2 (tri-helper\
    \ n))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n  \
    \  [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons 2 (tri (- n 3)))))])\n\
    \    )\n  )\n", "  (define (tri-iter n a b c lst)\n    (cond ((= n 0) lst)\n \
    \         ((= n 1) (cons a (cons b (cons c lst))))\n          ((even? n) (tri-iter\
    \ (- n 1) a b (+ a b c) (cons (+ a (/ b 2)) lst)))\n          (else (tri-iter\
    \ (- n 1) a b c (cons (+ a b c) lst)))))\n  (tri-iter n 3 1 2 '()))\n", "  (if\
    \ (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n         \
    \ (if (= n 2)\n              (list 1 3 2)\n              (let ([t (tri (- n 1))])\n\
    \                (append t (list (+ (list-ref t (- n 1)) (list-ref t (- n 2))\
    \ (list-ref t (- n 3))))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 13)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 13 21)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 13 21\
    \ 34)\n                              (if (= n 7)\n                           \
    \       (list 1 3 2 8 13 21 34 55)\n                                  (if (= n\
    \ 8)\n                                      (list 1 3 2 8 13 21 34 55 89)\n  \
    \                                    (if (= n 9)\n                           \
    \               (list 1 3 2 8 13 21 34 55 89 144)\n                          \
    \                (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (cond\n    [(= n\
    \ 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (cons 1 (cons 3 (cons 2 (tri (- n 2)))))])\n)\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                 \
    \ (cons (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n\
    \                  )))))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n  \
    \      acc\n        (if (even? n)\n            (tri-iter (- n 1) (cons (+ 1 (/\
    \ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (caddr\
    \ acc)) acc)))))\n  (tri-iter n (list 3)))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (+ (list-ref (tri\
    \ (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0))) (tri (-\
    \ n 1))))))))\n", "  (if (= n 1)\n      (list 3)\n      (if (= n 2)\n        \
    \  (list 3 2)\n          (if (= n 3)\n              (list 3 2 8)\n           \
    \   (let ((tri-n-1 (tri (- n 1)))\n                    (tri-n-2 (tri (- n 2)))\n\
    \                    (tri-n-3 (tri (- n 3))))\n                (append tri-n-1\
    \ (list (+ (car tri-n-2) (car tri-n-3) (car tri-n-1)))))))))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref\
    \ (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri\
    \ (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (let\
    \ ((last-three (take (reverse acc) 3)))\n          (if (even? n)\n           \
    \   (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))\n              (tri-iter (- n\
    \ 1) (cons (+ (first last-three) (second last-three) (third last-three)) acc))))))\n\
    \  (tri-iter n (list 3)))\n", "  (define (tri-iter n)\n    (if (= n 0)\n     \
    \   (list 1)\n        (let* ([prev-tri (tri-iter (- n 1))]\n               [prev-tri-len\
    \ (length prev-tri)]\n               [prev-tri-last (list-ref prev-tri (- prev-tri-len\
    \ 1))]\n               [prev-tri-second-last (list-ref prev-tri (- prev-tri-len\
    \ 2))]\n               [prev-tri-third-last (list-ref prev-tri (- prev-tri-len\
    \ 3))])\n          (append prev-tri\n                  (list (+ prev-tri-last\
    \ prev-tri-second-last prev-tri-third-last))))))\n  (tri-iter n))\n", "  (cond\
    \ ((= n 0) (list 1))\n        ((= n 1) (list 1 3))\n        ((= n 2) (list 1 3\
    \ 2))\n        (else (let* ((n-1 (tri (- n 1)))\n                     (n-2 (tri\
    \ (- n 2)))\n                     (n-3 (tri (- n 3)))\n                     (n-1-last\
    \ (list-ref n-1 (- (length n-1) 1)))\n                     (n-2-last (list-ref\
    \ n-2 (- (length n-2) 1)))\n                     (n-3-last (list-ref n-3 (- (length\
    \ n-3) 1))))\n                 (append n-1 (list (+ n-1-last n-2-last n-3-last)))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (+ n\
    \ 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (modulo n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n   \
    \               (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0)\
    \ (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n\
    \ 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (quotient n 2) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri\
    \ (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n     \
    \     (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n        \
    \      (if (= (modulo n 2) 0)\n                  (cons (tri n) (list (+ 1 (/ n\
    \ 2))))\n                  (cons (tri n) (list (+ (car (tri (- n 1))) (car (tri\
    \ (- n 2))) (car (tri (+ n 1)))))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri\
    \ (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (if (zero? n)\n\
    \      (list 1)\n      (if (zero? (modulo n 2))\n          (cons (quotient n 2)\
    \ (tri (- n 1)))\n          (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 13)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 13 21)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 13 21 34)\n                         \
    \     (if (= n 7)\n                                  (list 1 3 2 8 13 21 34 55)\n\
    \                                  (if (= n 8)\n                             \
    \         (list 1 3 2 8 13 21 34 55 89)\n                                    \
    \  (if (= n 9)\n                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144)\n                                          (if (= n 10)\n    \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233)\n\
    \                                              (if (= n 11)\n                \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610)\n                                                      (if (= n 13)\n\
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987)\n                                            \
    \              (if (= n 14)\n                                                \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n      \
    \                                                        (if (= n 15)\n      \
    \                                                            (list 1 3 2 8 13\
    \ 21 34 55 89 144 233 377 610 987 1597 2584)\n                               \
    \                                   (if (= n 16)\n                           \
    \                                           (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987 1597 2584 4181)\n                                              \
    \                        (if (= n 17)\n                                      \
    \                                    (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4181 6765)\n                                             \
    \                             (if (= n 18)\n                                 \
    \                                             (list 1 3 2 8 13 21 34 55 89 144\
    \ 233 377 610 987 1597 2584 4", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1)\
    \ (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list\
    \ (+ (list-ref (tri (- n 1)) (- n 1))\n                                      \
    \    (list-ref (tri (- n 1)) (- n 2))\n                                      \
    \    (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n\
    \ 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (let loop ((i 1) (lst (list 1 3 2)))\n\
    \    (if (= i n)\n        lst\n        (loop (+ i 1) (append lst (list (+ (list-ref\
    \ lst (- i 1))\n                                           (list-ref lst (- i\
    \ 2))\n                                           (list-ref lst (+ i 1)))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                \
    \  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref\
    \ (tri (- n 1)) (- n 2))\n                           (list-ref (tri (+ n 1)) n))\n\
    \                        (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1\
    \ (cons 3 (cons 2 (tri-helper n 3 2 1))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (tri (- n 1)) (tri\
    \ (- n 2)) (tri (+ n 1))) (tri (- n 1))))))))\n", "  (define (tri-iter n a b c)\n\
    \    (if (= n 0)\n        (list a b c)\n        (if (even? n)\n            (tri-iter\
    \ (- n 1) a b (+ c (/ n 2)))\n            (tri-iter (- n 1) a (+ b c) (+ c (+\
    \ b a))))))\n  (tri-iter n 1 3 2))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n        \
    \          (if (= n 4)\n                      (list 1 3 2 8 13)\n            \
    \          (if (= n 5)\n                          (list 1 3 2 8 13 21)\n     \
    \                     (if (= n 6)\n                              (list 1 3 2 8\
    \ 13 21 34)\n                              (if (= n 7)\n                     \
    \             (list 1 3 2 8 13 21 34 55)\n                                  (if\
    \ (= n 8)\n                                      (list 1 3 2 8 13 21 34 55 89)\n\
    \                                      (if (= n 9)\n                         \
    \                 (list 1 3 2 8 13 21 34 55 89 144)\n                        \
    \                  (if (= n 10)\n                                            \
    \  (list 1 3 2 8 13 21 34 55 89 144 233)\n                                   \
    \           (if (= n 11)\n                                                  (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377)\n                                      \
    \            (if (= n 12)\n                                                  \
    \    (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987 1597)\n                                       \
    \                       (if (= n 15)\n                                       \
    \                           (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597\
    \ 2584)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n     \
    \                                                                 (if (= n 17)\n\
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n          \
    \                                                                (if (= n 18)\n\
    \                                                                            \
    \  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n\
    \ 1)) 0)) (tri (- n 1))))))))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n\
    \        acc\n        (if (even? n)\n            (tri-iter (- n 1) (cons (+ 1\
    \ (/ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car acc) (cadr acc)\
    \ (caddr acc)) acc)))))\n  (tri-iter n (list 3)))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (tri (-\
    \ n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (-\
    \ n 1)))\n                  )))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(=\
    \ n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1))\n                                \
    \          (list-ref (tri (- n 1)) (- n 2))\n                                \
    \          (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2\
    \ 8)\n                  (if (= n 4)\n                      (list 1 3 2 8 13)\n\
    \                      (if (= n 5)\n                          (list 1 3 2 8 13\
    \ 21)\n                          (if (= n 6)\n                              (list\
    \ 1 3 2 8 13 21 34)\n                              (if (= n 7)\n             \
    \                     (list 1 3 2 8 13 21 34 55)\n                           \
    \       (if (= n 8)\n                                      (list 1 3 2 8 13 21\
    \ 34 55 89)\n                                      (if (= n 9)\n             \
    \                             (list 1 3 2 8 13 21 34 55 89 144)\n            \
    \                              (if (= n 10)\n                                \
    \              (list 1 3 2 8 13 21 34 55 89 144 233)\n                       \
    \                       (if (= n 11)\n                                       \
    \           (list 1 3 2 8 13 21 34 55 89 144 233 377)\n                      \
    \                            (if (= n 12)\n                                  \
    \                    (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n         \
    \                                             (if (= n 13)\n                 \
    \                                         (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987)\n                                                          (if\
    \ (= n 14)\n                                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n                         \
    \                                     (if (= n 15)\n                         \
    \                                         (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987 1597 2584)\n                                                   \
    \               (if (= n 16)\n                                               \
    \                       (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597\
    \ 2584 4181)\n                                                               \
    \       (if (= n 17)\n                                                       \
    \                   (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584\
    \ 4181 6765)\n                                                               \
    \           (if (= n 18)\n                                                   \
    \                           (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597\
    \ 2584 4", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n       \
    \ [(= n 2) (list 1 3 2)]\n        [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                             (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                             (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n\
    \        acc\n        (if (even? n)\n            (tri-iter (- n 1) (cons (+ 1\
    \ (/ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car acc) (cadr acc)\
    \ (caddr acc)) acc)))))\n  (tri-iter n (list 3 1)))\n", "  (if (= n 0)\n     \
    \ (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n \
    \             (list 1 3 2)\n              (if (= (modulo n 2) 0)\n           \
    \       (cons (quotient (+ n 1) 2) (tri (- n 1)))\n                  (cons (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref (tri\
    \ (- n 1)) (- n 2))\n                           (list-ref (tri (+ n 1)) n))\n\
    \                        (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (round (/ (+ n 1) 2)) (tri (- n 1)))\n                  (append (tri (- n 1))\
    \ (list (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(=\
    \ n 2) (list 1 3 2)]\n        [else (append (tri (- n 1)) (list (+ (list-ref (tri\
    \ (- n 1)) (- n 1))\n                                             (list-ref (tri\
    \ (- n 1)) (- n 2))\n                                             (list-ref (tri\
    \ (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n acc)\n    (cond ((= n 0)\
    \ acc)\n          ((= n 1) (cons 3 acc))\n          ((= n 2) (cons 2 (cons 3 acc)))\n\
    \          ((even? n) (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc)))\n         \
    \ (else (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (car (cddr acc))) acc)))))\n\
    \  (tri-iter n '()))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= (modulo n 2) 0)\n                  (cons (+ 1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (+ n 1))) (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 13)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 13 21)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 13 21 34)\n                         \
    \     (if (= n 7)\n                                  (list 1 3 2 8 13 21 34 55)\n\
    \                                  (if (= n 8)\n                             \
    \         (list 1 3 2 8 13 21 34 55 89)\n                                    \
    \  (if (= n 9)\n                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144)\n                                          (if (= n 10)\n    \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233)\n\
    \                                              (if (= n 11)\n                \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610)\n                                                      (if (= n 13)\n\
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987)\n                                            \
    \              (if (= n 14)\n                                                \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n      \
    \                                                        (if (= n 15)\n      \
    \                                                            (list 1 3 2 8 13\
    \ 21 34 55 89 144 233 377 610 987 1597 2584)\n                               \
    \                                   (if (= n 16)\n                           \
    \                                           (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987 1597 2584 4181)\n                                              \
    \                        (if (= n 17)\n                                      \
    \                                    (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4181 6765)\n                                             \
    \                             (if (= n 18)\n                                 \
    \                                             (list 1 3 2 8 13 21 34 55 89 144\
    \ 233 377 610 987 1597 2584 4", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1)\
    \ (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\n     (let* ([prev (tri (-\
    \ n 1))]\n            [prev-1 (list-ref prev (- n 1))]\n            [prev-2 (list-ref\
    \ prev (- n 2))]\n            [prev-3 (list-ref prev (- n 3))])\n       (append\
    \ prev (list (+ prev-1 prev-2 prev-3))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\n     (let* ([prev\
    \ (tri (- n 1))]\n            [prev-1 (list-ref prev (- n 1))]\n            [prev-2\
    \ (list-ref prev (- n 2))]\n            [prev-3 (list-ref prev (- n 3))])\n  \
    \     (append prev (list (+ prev-1 prev-2 prev-3))))]))\n", "  (if (= n 0)\n \
    \     (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                           (list-ref (tri (- n 2)) (-\
    \ n 2))\n                           (list-ref (tri (+ n 1)) (+ n 1)))\n      \
    \                  (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (-\
    \ n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n acc)\n\
    \    (if (= n 0)\n        acc\n        (let ([n-1 (car acc)]\n              [n-2\
    \ (cadr acc)]\n              [n-3 (caddr acc)])\n          (if (even? n)\n   \
    \           (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))\n              (tri-iter\
    \ (- n 1) (cons (+ n-1 n-2 n-3) acc))))))\n  (tri-iter n (list 3 2 1)))\n", " \
    \ (define (tri-iter n acc)\n    (cond [(= n 0) acc]\n          [(= n 1) (cons\
    \ 3 acc)]\n          [(= n 2) (cons 2 (cons 3 acc))]\n          [(= (modulo n\
    \ 2) 0) (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))]\n          [else (tri-iter\
    \ (- n 1) (cons (+ (car acc) (cadr acc) (car (cddr acc))) acc))]))\n  (tri-iter\
    \ n '()))\n", "  (if (= n 0)\n      '()\n      (cons (if (= n 1)\n           \
    \     3\n                (if (even? n)\n                    (+ 1 (/ n 2))\n  \
    \                  (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1)))))\n         \
    \   (tri (- n 1)))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n   \
    \                        (list-ref (tri (- n 2)) (- n 2))\n                  \
    \         (list-ref (tri (+ n 1)) (+ n 1)))\n                        (tri (- n\
    \ 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n\
    \                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n               \
    \            (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref\
    \ (tri (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", " \
    \ (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list\
    \ 1 3 2)]\n    [else\n     (let ([previous-tri (tri (- n 1))])\n       (append\
    \ previous-tri\n               (list (+ (list-ref previous-tri (- n 1))\n    \
    \                    (list-ref previous-tri (- n 2))\n                       \
    \ (list-ref previous-tri (- n 3))))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (-\
    \ n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n\
    \ 1))) (tri (- n 1))))))))\n", "  (define (tri-iter n a b c)\n    (if (= n 0)\n\
    \        (list a b c)\n        (if (even? n)\n            (tri-iter (- n 1) a\
    \ b (+ c (/ n 2)))\n            (tri-iter (- n 1) a (+ b c) (+ c (+ b a))))))\n\
    \  (tri-iter n 1 3 2))\n", "  (define (tri-iter n acc)\n    (cond\n      [(= n\
    \ 0) (reverse acc)]\n      [(= n 1) (reverse (cons 3 acc))]\n      [(= n 2) (reverse\
    \ (cons 2 (cons 3 acc)))]\n      [(even? n) (tri-iter (- n 1) (cons (+ 1 (/ n\
    \ 2)) acc))]\n      [else (tri-iter (- n 1) (cons (+ (list-ref acc 0) (list-ref\
    \ acc 1) (list-ref acc 2)) acc))]))\n  (tri-iter n (list)))\n", "  (define (tri-helper\
    \ n)\n    (cond\n      [(= n 1) 3]\n      [(= n 2) 2]\n      [(= n 3) 8]\n   \
    \   [(even? n) (+ 1 (/ n 2))]\n      [else (+ (tri-helper (- n 1)) (tri-helper\
    \ (- n 2)) (tri-helper (+ n 1)))]))\n  (for/list ([i (in-range (+ n 1))]) (tri-helper\
    \ i)))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(=\
    \ n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri\
    \ (- n 1)) (- n 1))\n                                          (list-ref (tri\
    \ (- n 1)) (- n 2))\n                                          (list-ref (tri\
    \ (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\
    \ (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n\
    \ 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ n 3)\n                  (list 1 3 2 8)\n                  (if (= n 4)\n    \
    \                  (list 1 3 2 8 13)\n                      (if (= n 5)\n    \
    \                      (list 1 3 2 8 13 21)\n                          (if (=\
    \ n 6)\n                              (list 1 3 2 8 13 21 34)\n              \
    \                (if (= n 7)\n                                  (list 1 3 2 8\
    \ 13 21 34 55)\n                                  (if (= n 8)\n              \
    \                        (list 1 3 2 8 13 21 34 55 89)\n                     \
    \                 (if (= n 9)\n                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144)\n                                          (if (=\
    \ n 10)\n                                              (list 1 3 2 8 13 21 34\
    \ 55 89 144 233)\n                                              (if (= n 11)\n\
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377)\n                                                  (if (= n 12)\n\
    \                                                      (list 1 3 2 8 13 21 34\
    \ 55 89 144 233 377 610)\n                                                   \
    \   (if (= n 13)\n                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n                              \
    \                            (if (= n 14)\n                                  \
    \                            (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987\
    \ 1597)\n                                                              (if (=\
    \ n 15)\n                                                                  (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n                    \
    \                                              (if (= n 16)\n                \
    \                                                      (list 1 3 2 8 13 21 34\
    \ 55 89 144 233 377 610 987 1597 2584 4181)\n                                \
    \                                      (if (= n 17)\n                        \
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597 2584 4181 6765)\n                                 \
    \                                         (if (= n 18)\n                     \
    \                                                         (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1)))\
    \ (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n\
    \                  )))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (modulo n 2) 0)\n                  (cons (tri n) (tri (- n\
    \ 1)))\n                  (cons (tri n) (tri (- n 1)))\n                  )))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 21)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 21 55)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 21 55 144)\n                        \
    \      (if (= n 7)\n                                  (list 1 3 2 8 21 55 144\
    \ 377)\n                                  (if (= n 8)\n                      \
    \                (list 1 3 2 8 21 55 144 377 987)\n                          \
    \            (if (= n 9)\n                                          (list 1 3\
    \ 2 8 21 55 144 377 987 2584)\n                                          (if (=\
    \ n 10)\n                                              (list 1 3 2 8 21 55 144\
    \ 377 987 2584 6765)\n                                              (if (= n 11)\n\
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711)\n                                                  (if\
    \ (= n 12)\n                                                      (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765 17711 46368)\n                               \
    \                       (if (= n 13)\n                                       \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711 46368 121393 317811)\n                         \
    \                                     (if (= n 15)\n                         \
    \                                         (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368 121393 317811 832040)\n                                   \
    \                               (if (= n 16)\n                               \
    \                                       (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811 832040 2178309)\n                                \
    \                                      (if (= n 17)\n                        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 12", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1)\
    \ (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\n \
    \                 (list (+ (list-ref (tri (- n 1)) (- n 1))\n                \
    \           (list-ref (tri (- n 1)) (- n 2))\n                           (list-ref\
    \ (tri (- n 1)) (+ n 1))))])]))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons (add1 (/\
    \ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (-\
    \ n 1))\n                           (list-ref (tri (- n 1)) (- n 2))\n       \
    \                    (list-ref (tri (+ n 1)) n))\n                        (tri\
    \ (- n 1))))))))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n\
    \        (if (even? n)\n            (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))\n\
    \            (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (caddr acc)) acc)))))\n\
    \  (tri-iter n (list 3)))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 2))\n                                         \
    \ (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n   \
    \               )))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 2))\n                                         \
    \ (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (-\
    \ n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (+ n\
    \ 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n\
    \                  (cons (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))) (tri (-\
    \ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (if (= n 3)\n                  (list 1 3 2 8)\n                  (if (= n\
    \ 4)\n                      (list 1 3 2 8 21)\n                      (if (= n\
    \ 5)\n                          (list 1 3 2 8 21 55)\n                       \
    \   (if (= n 6)\n                              (list 1 3 2 8 21 55 144)\n    \
    \                          (if (= n 7)\n                                  (list\
    \ 1 3 2 8 21 55 144 377)\n                                  (if (= n 8)\n    \
    \                                  (list 1 3 2 8 21 55 144 377 987)\n        \
    \                              (if (= n 9)\n                                 \
    \         (list 1 3 2 8 21 55 144 377 987 2584)\n                            \
    \              (if (= n 10)\n                                              (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765)\n                                     \
    \         (if (= n 11)\n                                                  (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n                               \
    \                   (if (= n 12)\n                                           \
    \           (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n         \
    \                                             (if (= n 13)\n                 \
    \                                         (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368 121393)\n                                                 \
    \         (if (= n 14)\n                                                     \
    \         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n\
    \                                                              (if (= n 15)\n\
    \                                                                  (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n          \
    \                                                        (if (= n 16)\n      \
    \                                                                (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n    \
    \                                                                  (if (= n 17)\n\
    \                                                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n 1)\n      (list\
    \ 3)\n      (if (= n 2)\n          (list 3 2)\n          (if (= n 3)\n       \
    \       (list 3 2 8)\n              (if (= (modulo n 2) 0)\n                 \
    \ (cons (/ n 2) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n\
    \ 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (cond ((= n 0) (list 1))\n        ((= n 1) (list 1 3))\n        ((= n 2) (list\
    \ 1 3 2))\n        (else (append (tri (- n 1))\n                      (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                               (list-ref (tri\
    \ (- n 1)) (- n 2))\n                               (list-ref (tri (- n 1)) n)))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n\
    \ 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (if (= n 1)\n\
    \      (list 3)\n      (if (= n 2)\n          (list 3 2)\n          (if (= n 3)\n\
    \              (list 3 2 8)\n              (if (= n 4)\n                  (list\
    \ 3 2 8 3)\n                  (if (= n 5)\n                      (list 3 2 8 3\
    \ 11)\n                      (if (= n 6)\n                          (list 3 2\
    \ 8 3 11 19)\n                          (if (= n 7)\n                        \
    \      (list 3 2 8 3 11 19 32)\n                              (if (= n 8)\n  \
    \                                (list 3 2 8 3 11 19 32 55)\n                \
    \                  (if (= n 9)\n                                      (list 3\
    \ 2 8 3 11 19 32 55 89)\n                                      (if (= n 10)\n\
    \                                          (list 3 2 8 3 11 19 32 55 89 144)\n\
    \                                          (if (= n 11)\n                    \
    \                          (list 3 2 8 3 11 19 32 55 89 144 233)\n           \
    \                                   (if (= n 12)\n                           \
    \                       (list 3 2 8 3 11 19 32 55 89 144 233 377)\n          \
    \                                        (if (= n 13)\n                      \
    \                                (list 3 2 8 3 11 19 32 55 89 144 233 377 610)\n\
    \                                                      (if (= n 14)\n        \
    \                                                  (list 3 2 8 3 11 19 32 55 89\
    \ 144 233 377 610 987)\n                                                     \
    \     (if (= n 15)\n                                                         \
    \     (list 3 2 8 3 11 19 32 55 89 144 233 377 610 987 1597)\n               \
    \                                               (if (= n 16)\n               \
    \                                                   (list 3 2 8 3 11 19 32 55\
    \ 89 144 233 377 610 987 1597 2584)\n                                        \
    \                          (if (= n 17)\n                                    \
    \                                  (list 3 2 8 3 11 19 32 55 89 144 233 377 610\
    \ 987 1597 2584 4181)\n                                                      \
    \                (if (= n 18)\n                                              \
    \                            (list 3 2 8 3 11 19 32 55 89 144 233 377 610 987\
    \ 1597 2584 4181 6765)\n                                                     \
    \                     (if (= n 19)\n                                         \
    \                                     (list 3 2 8 3 11 19 32 55 89 144 233 377\
    \ 610 987 1597 2584 4", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1\
    \ 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n\
    \ 1)) (- n 3)))))]))\n", "  (define (tri-iter n a b c)\n    (cond ((= n 0) '())\n\
    \          ((= n 1) (list a))\n          ((= n 2) (list a b))\n          ((= n\
    \ 3) (list a b c))\n          (else (cons a (tri-iter (- n 1) b c (+ a b c))))))\n\
    \  (tri-iter n 1 3 2))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (remainder n 2) 0)\n                  (cons (add1 (quotient\
    \ n 2)) (tri (sub1 n)))\n                  (cons (+ (list-ref (tri (sub1 n)) 0)\
    \ (list-ref (tri (sub2 n)) 0) (list-ref (tri (add1 n)) 0)) (tri (sub1 n))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 13)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 13 21)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 13 21 34)\n                         \
    \     (if (= n 7)\n                                  (list 1 3 2 8 13 21 34 55)\n\
    \                                  (if (= n 8)\n                             \
    \         (list 1 3 2 8 13 21 34 55 89)\n                                    \
    \  (if (= n 9)\n                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144)\n                                          (if (= n 10)\n    \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233)\n\
    \                                              (if (= n 11)\n                \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610)\n                                                      (if (= n 13)\n\
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987)\n                                            \
    \              (if (= n 14)\n                                                \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n      \
    \                                                        (if (= n 15)\n      \
    \                                                            (list 1 3 2 8 13\
    \ 21 34 55 89 144 233 377 610 987 1597 2584)\n                               \
    \                                   (if (= n 16)\n                           \
    \                                           (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987 1597 2584 4181)\n                                              \
    \                        (if (= n 17)\n                                      \
    \                                    (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4181 6765)\n                                             \
    \                             (if (= n 18)\n                                 \
    \                                             (list 1 3 2 8 13 21 34 55 89 144\
    \ 233 377 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n      (if (= n\
    \ 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\
    \ (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n\
    \ 1))))))))\n", "  (define (tri-iter n a b c)\n    (if (= n 0)\n        '()\n\
    \        (cons a (tri-iter (- n 1) b c (+ a b c)))))\n  (tri-iter n 3 1 2))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                \
    \  (cons (add1 (+ (list-ref (tri (- n 1)) (- n 1))\n                         \
    \        (list-ref (tri (- n 2)) (- n 2))\n                                 (list-ref\
    \ (tri (+ n 1)) (+ n 1))))\n                        (tri (- n 1))))))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n\
    \ 2) 0)\n                  (cons (tri (- n 1)) (/ n 2))\n                  (cons\
    \ (tri (- n 1)) (+ (tri (- n 2)) (tri (- n 1)) (tri (+ n 1)))))))))\n", "  (if\
    \ (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n         \
    \ (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n               \
    \   (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 3)\n                      (if (= n 5)\n                          (list 1 3 2\
    \ 8 3 11)\n                          (if (= n 6)\n                           \
    \   (list 1 3 2 8 3 11 21)\n                              (if (= n 7)\n      \
    \                            (list 1 3 2 8 3 11 21 44)\n                     \
    \             (if (= n 8)\n                                      (list 1 3 2 8\
    \ 3 11 21 44 29)\n                                      (if (= n 9)\n        \
    \                                  (list 1 3 2 8 3 11 21 44 29 80)\n         \
    \                                 (if (= n 10)\n                             \
    \                 (list 1 3 2 8 3 11 21 44 29 80 77)\n                       \
    \                       (if (= n 11)\n                                       \
    \           (list 1 3 2 8 3 11 21 44 29 80 77 151)\n                         \
    \                         (if (= n 12)\n                                     \
    \                 (list 1 3 2 8 3 11 21 44 29 80 77 151 154)\n               \
    \                                       (if (= n 13)\n                       \
    \                                   (list 1 3 2 8 3 11 21 44 29 80 77 151 154\
    \ 258)\n                                                          (if (= n 14)\n\
    \                                                              (list 1 3 2 8 3\
    \ 11 21 44 29 80 77 151 154 258 431)\n                                       \
    \                       (if (= n 15)\n                                       \
    \                           (list 1 3 2 8 3 11 21 44 29 80 77 151 154 258 431\
    \ 790)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 3 11 21 44 29 80 77 151 154 258 431 790 1434)\n          \
    \                                                            (if (= n 17)\n  \
    \                                                                        (list\
    \ 1 3 2 8 3 11 21 44 29 80 77 151 154 258 431 790 1434 2682)\n               \
    \                                                           (if (= n 18)\n   \
    \                                                                           (list\
    \ 1 3 2 8 3 11 21 44 29 80 77 151 154 258 431 790 1434 2682 5022)", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n           \
    \       (list 1 3 2 8)\n                  (if (= n 4)\n                      (list\
    \ 1 3 2 8 21)\n                      (if (= n 5)\n                          (list\
    \ 1 3 2 8 21 55)\n                          (if (= n 6)\n                    \
    \          (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n\
    \                                  (list 1 3 2 8 21 55 144 377)\n            \
    \                      (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2)\
    \ (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n\
    \ 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                          \
    \ (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n \
    \                                         (list-ref (tri (- n 1)) (- n 2))\n \
    \                                         (list-ref (tri (- n 1)) (+ n 1)))))]))\n",
  "  (define (tri-iter n acc)\n    (cond ((= n 0) acc)\n          ((even? n) (tri-iter\
    \ (- n 1) (cons (+ 1 (/ n 2)) acc)))\n          (else (tri-iter (- n 1) (cons\
    \ (+ (car acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n (list 3 1)))\n",
  "  (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (tri-iter (-\
    \ n 1) (cons (tri-helper n) acc))))\n  (tri-iter n (list 3)))\n", "  (define (tri-iter\
    \ n a b c)\n    (if (= n 0)\n        (list a b c)\n        (if (even? n)\n   \
    \         (tri-iter (- n 1) a b (+ b c))\n            (tri-iter (- n 1) a (+ a\
    \ b c) c))))\n  (tri-iter n 3 1 2))\n", "  (cond\n    [(= n 0) (list 1)]\n   \
    \ [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (-\
    \ n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n\
    \ 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n   \
    \               )))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (modulo n 2) 0)\n                  (cons (quotient (+ n 1)\
    \ 2) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n\
    \                           (list-ref (tri (- n 1)) (- n 2))\n               \
    \            (list-ref (tri (- n 1)) (+ n 1)))\n                        (tri (-\
    \ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (-\
    \ n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 3)))))]))\n", "  (if (= n 0)\n      '()\n      (cons (if (= n 1) 3 (if (even?\
    \ n) (+ 1 (/ n 2)) (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1)))))\n         \
    \   (tri (- n 1)))))\n", "  (define (tri-iter n acc)\n    (cond ((= n 0) acc)\n\
    \          ((= n 1) (cons 3 acc))\n          ((= n 2) (cons 2 (cons 3 acc)))\n\
    \          ((even? n) (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc)))\n         \
    \ (else (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (car (cddr acc))) acc)))))\n\
    \  (tri-iter n '()))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= (modulo n 2) 0)\n                  (cons (add1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (+ n 1)) n)) (tri (- n 1))))))))\n", " \
    \ (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list\
    \ 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (-\
    \ n 1))\n                                          (list-ref (tri (- n 1)) (-\
    \ n 2))\n                                          (list-ref (tri (- n 1)) (+\
    \ n 1)))))]))\n", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n\
    \        [(= n 2) (list 1 3 2)]\n        [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                                         \
    \    (list-ref (tri (- n 1)) (- n 2))\n                                      \
    \       (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1\
    \ (cons 3 (cons 2 (tri (- n 2)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n \
    \   [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (-\
    \ n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n\
    \ 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (quotient (+ n 1) 2) (tri (- n 1)))\n                  (append (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n     \
    \ (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n      \
    \            (if (= n 4)\n                      (list 1 3 2 8 21)\n          \
    \            (if (= n 5)\n                          (list 1 3 2 8 21 55)\n   \
    \                       (if (= n 6)\n                              (list 1 3 2\
    \ 8 21 55 144)\n                              (if (= n 7)\n                  \
    \                (list 1 3 2 8 21 55 144 377)\n                              \
    \    (if (= n 8)\n                                      (list 1 3 2 8 21 55 144\
    \ 377 987)\n                                      (if (= n 9)\n              \
    \                            (list 1 3 2 8 21 55 144 377 987 2584)\n         \
    \                                 (if (= n 10)\n                             \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765)\n               \
    \                               (if (= n 11)\n                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n       \
    \                                           (if (= n 12)\n                   \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (define (tri-iter n acc)\n    (cond\n      [(= n 0) acc]\n      [(= n 1) (cons\
    \ 3 acc)]\n      [(= n 2) (cons 2 (cons 3 acc))]\n      [(even? n) (tri-iter (-\
    \ n 1) (cons (+ 1 (/ n 2)) acc))]\n      [else (tri-iter (- n 1) (cons (+ (car\
    \ acc) (cadr acc) (caddr acc)) acc))]))\n  (tri-iter n '()))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n\
    \                  (list 1 3 2 8)\n                  (if (= n 4)\n           \
    \           (list 1 3 2 8 21)\n                      (if (= n 5)\n           \
    \               (list 1 3 2 8 21 55)\n                          (if (= n 6)\n\
    \                              (list 1 3 2 8 21 55 144)\n                    \
    \          (if (= n 7)\n                                  (list 1 3 2 8 21 55\
    \ 144 377)\n                                  (if (= n 8)\n                  \
    \                    (list 1 3 2 8 21 55 144 377 987)\n                      \
    \                (if (= n 9)\n                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584)\n                                          (if\
    \ (= n 10)\n                                              (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765)\n                                              (if (=\
    \ n 11)\n                                                  (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711)\n                                             \
    \     (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 121393)\n                                                          (if (= n\
    \ 14)\n                                                              (list 1 3\
    \ 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393 317811 832040)\n                          \
    \                                        (if (= n 16)\n                      \
    \                                                (list 1 3 2 8 21 55 144 377 987\
    \ 2584 6765 17711 46368 121393 317811 832040 2178309)\n                      \
    \                                                (if (= n 17)\n              \
    \                                                            (list 1 3 2 8 21\
    \ 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list 1)\n \
    \     (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n             \
    \ (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n\
    \                  (if (= n 4)\n                      (list 1 3 2 8 21)\n    \
    \                  (if (= n 5)\n                          (list 1 3 2 8 21 55)\n\
    \                          (if (= n 6)\n                              (list 1\
    \ 3 2 8 21 55 144)\n                              (if (= n 7)\n              \
    \                    (list 1 3 2 8 21 55 144 377)\n                          \
    \        (if (= n 8)\n                                      (list 1 3 2 8 21 55\
    \ 144 377 987)\n                                      (if (= n 9)\n          \
    \                                (list 1 3 2 8 21 55 144 377 987 2584)\n     \
    \                                     (if (= n 10)\n                         \
    \                     (list 1 3 2 8 21 55 144 377 987 2584 6765)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n   \
    \                                               (if (= n 12)\n               \
    \                                       (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n   \
    \               (list 1 3 2 8)\n                  (if (= n 4)\n              \
    \        (list 1 3 2 8 21)\n                      (if (= n 5)\n              \
    \            (list 1 3 2 8 21 55)\n                          (if (= n 6)\n   \
    \                           (list 1 3 2 8 21 55 144)\n                       \
    \       (if (= n 7)\n                                  (list 1 3 2 8 21 55 144\
    \ 377)\n                                  (if (= n 8)\n                      \
    \                (list 1 3 2 8 21 55 144 377 987)\n                          \
    \            (if (= n 9)\n                                          (list 1 3\
    \ 2 8 21 55 144 377 987 2584)\n                                          (if (=\
    \ n 10)\n                                              (list 1 3 2 8 21 55 144\
    \ 377 987 2584 6765)\n                                              (if (= n 11)\n\
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711)\n                                                  (if\
    \ (= n 12)\n                                                      (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765 17711 46368)\n                               \
    \                       (if (= n 13)\n                                       \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711 46368 121393 317811)\n                         \
    \                                     (if (= n 15)\n                         \
    \                                         (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368 121393 317811 832040)\n                                   \
    \                               (if (= n 16)\n                               \
    \                                       (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811 832040 2178309)\n                                \
    \                                      (if (= n 17)\n                        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n\
    \                           (list-ref (tri (- n 2)) (- n 2))\n               \
    \            (list-ref (tri (+ n 1)) (+ n 1)))\n                        (tri (-\
    \ n 1))))))))\n", "  (if (zero? n)\n      (list 1)\n      (if (zero? (modulo n\
    \ 2))\n          (cons (quotient n 2) (tri (- n 1)))\n          (append (tri (-\
    \ n 1)) (tri (- n 2)) (tri (+ n 1))))))\n", "  (if (= n 0)\n      (list 1)\n \
    \     (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n             \
    \ (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n\
    \                  (if (= n 4)\n                      (list 1 3 2 8 3)\n     \
    \                 (if (= n 5)\n                          (list 1 3 2 8 3 11)\n\
    \                          (if (= n 6)\n                              (list 1\
    \ 3 2 8 3 11 19)\n                              (if (= n 7)\n                \
    \                  (list 1 3 2 8 3 11 19 32)\n                               \
    \   (if (= n 8)\n                                      (list 1 3 2 8 3 11 19 32\
    \ 50)\n                                      (if (= n 9)\n                   \
    \                       (list 1 3 2 8 3 11 19 32 50 81)\n                    \
    \                      (if (= n 10)\n                                        \
    \      (list 1 3 2 8 3 11 19 32 50 81 131)\n                                 \
    \             (if (= n 11)\n                                                 \
    \ (list 1 3 2 8 3 11 19 32 50 81 131 211)\n                                  \
    \                (if (= n 12)\n                                              \
    \        (list 1 3 2 8 3 11 19 32 50 81 131 211 342)\n                       \
    \                               (if (= n 13)\n                               \
    \                           (list 1 3 2 8 3 11 19 32 50 81 131 211 342 553)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 3 11\
    \ 19 32 50 81 131 211 342 553 885)\n                                         \
    \                     (if (= n 15)\n                                         \
    \                         (list 1 3 2 8 3 11 19 32 50 81 131 211 342 553 885 1438)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 3 11 19 32 50 81 131 211 342 553 885 1438 2323)\n                    \
    \                                                  (if (= n 17)\n            \
    \                                                              (list 1 3 2 8 3\
    \ 11 19 32 50 81 131 211 342 553 885 1438 2323 3765)\n                       \
    \                                                   (if (= n 18)\n           \
    \                                                                   (list 1 3\
    \ 2 8 3 11 19 32 50 81 131 211 342 553 885 1438 23", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n\
    \ 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n\
    \ 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri\
    \ (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (quotient (+ n 1) 2) (tri (- n 1)))\n                  (cons (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref (tri\
    \ (- n 1)) (- n 2))\n                           (list-ref (tri (- n 1)) (+ n 1)))\n\
    \                        (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n\
    \ 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n\
    \ 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n          \
    \                                (list-ref (tri (- n 1)) (- n 2))\n          \
    \                                (list-ref (tri (- n 1)) (+ n 1)))))]))\n", " \
    \ (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list\
    \ 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (-\
    \ n 1))\n                                          (list-ref (tri (- n 1)) (-\
    \ n 2))\n                                          (list-ref (tri (- n 1)) (+\
    \ n 1)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n\
    \    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons 2 (tri (- n 2)))))])\n\
    \  )\n)\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (+ 1 (/ n 2)) (tri (- n 1)))\n \
    \                 (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (-\
    \ n 1)) (- n 2)) (list-ref (tri (- n 1)) (+ n 1))) (tri (- n 1))))))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                          \
    \ (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (tri n) (tri (- n 1)))\n                  (cons (tri\
    \ n) (tri (- n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1)))\
    \ (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n\
    \                  )))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= n 3)\n                  (list 1 3 2 8)\n                  (if\
    \ (= n 4)\n                      (list 1 3 2 8 13)\n                      (if\
    \ (= n 5)\n                          (list 1 3 2 8 13 21)\n                  \
    \        (if (= n 6)\n                              (list 1 3 2 8 13 21 34)\n\
    \                              (if (= n 7)\n                                 \
    \ (list 1 3 2 8 13 21 34 55)\n                                  (if (= n 8)\n\
    \                                      (list 1 3 2 8 13 21 34 55 89)\n       \
    \                               (if (= n 9)\n                                \
    \          (list 1 3 2 8 13 21 34 55 89 144)\n                               \
    \           (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n\
    \ 1)) (- n 3))))))))\n  )\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (modulo n 2) 0)\n                  (cons (+ 1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n   \
    \                        (list-ref (tri (- n 1)) (- n 2))\n                  \
    \         (list-ref (tri (+ n 1)) n))\n                        (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n          \
    \        (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(= n\
    \ 2) (list 1 3 2)]\n        [else (append (tri (- n 1))\n                    \
    \  (list (+ (list-ref (tri (- n 1)) (- n 1))\n                               (list-ref\
    \ (tri (- n 1)) (- n 2))\n                               (list-ref (tri (- n 1))\
    \ (- n 3))))])]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n\
    \    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n\
    \ 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= (modulo n 2) 0)\n                  (cons (add1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (+ n 1)) n)) (tri (- n 1))))))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                          \
    \ (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (round (/ (+ n 1) 2)) (tri (- n 1)))\n              \
    \    (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2))\
    \ (list-ref (tri (+ n 1)) n)) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (tri (-\
    \ n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (-\
    \ n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n      \
    \            (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n   \
    \               (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+\
    \ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (+ n 1)) n)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (append (tri (-\
    \ n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (letrec ([tri-helper (lambda\
    \ (n)\n                         (if (zero? n)\n                             '()\n\
    \                             (cons (tri-rec n) (tri-helper (sub1 n)))))]\n  \
    \         [tri-rec (lambda (n)\n                      (if (zero? n)\n        \
    \                  3\n                          (if (even? n)\n              \
    \                (add1 (quotient n 2))\n                              (add1 (tri-rec\
    \ (sub1 n)) (tri-rec (sub1 (sub1 n))) (tri-rec (add1 n))))))])\n    (tri-helper\
    \ n)))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n\
    \                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (-\
    \ n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n 1))))))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n\
    \ 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n             \
    \     (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref\
    \ (tri (- n 1)) (- n 2))\n                           (list-ref (tri (+ n 1)) n))\n\
    \                        (tri (- n 1))))))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

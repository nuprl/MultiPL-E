language: rkt
name: HumanEval_24_largest_divisor
results:
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (&lt; i n)\n\
    \        (if (zero? (modulo n i))\n            (largest_divisor_iter (+ i 1))\n\
    \            (largest_divisor_iter (- i 1)))\n        i))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpcz54845j.rkt:6:0: read-syntax: expected a `)` to close `(`\n  possible\
    \ cause: indentation suggests a missing `)` before line 15\n  context...:\n  \
    \ /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
  timestamp: 1660028085
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n divisor)\n    (if (=\
    \ (modulo n divisor) 0)\n        (largest_divisor-iter n (+ divisor 1))\n    \
    \    (- divisor 1)))\n  (largest_divisor-iter n 2))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (&lt; i n)\n\
    \        (if (zero? (modulo n i))\n            (largest_divisor-iter n (+ i 1))\n\
    \            (largest_divisor-iter n (+ i 1)))\n        (- n 1)))\n  (largest_divisor-iter\
    \ n 2))\n</code>\nI am trying to understand the following line:\n<code>(if (&lt;\
    \ i n)\n    (if (zero? (modulo n i))\n        (largest_divisor-iter n (+ i 1))\n\
    \        (largest_divisor-iter n (+ i 1)))\n    (- n 1)))\n</code>\nI understand\
    \ that if <code>i</code> is less than <code>n</code>, then we check if <code>n</code>\
    \ is divisible by <code>i</code>. If it is, we call the function again with <code>i</code>\
    \ incremented by 1. If it is not, we call the function again with <code>i</code>\
    \ incremented by 1.\nWhat I don't understand is why we call the function again\
    \ with <code>i</code> incremented by 1 in both cases. I would have thought that\
    \ if <code>n</code> is divisible by <code>i</code>, we would call the function\
    \ again with <code>i</code> incremented by 1, but if <code>n</code> is not divisible\
    \ by <code>i</code>, we would call the function again with <code>i</code> incremented\
    \ by 2.\nI would have thought that the following would be more logical:\n<code>(if\
    \ (&lt; i n)\n    (if (zero? (modulo n i))\n        (largest_divisor-iter n (+\
    \ i 1))\n        (largest_divisor-iter n (+ i 2)))\n    (- n 1)))\n</code>\nBut\
    \ this doesn't work. Can anyone explain why?\n\n\nA:\n\nThe code is correct. The\
    \ reason it works is that the <code>if</code> statement is only executed when\
    \ <code>i</code> is less than <code>n</code>, so the <code>if</code> statement\n\
    (require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpz6wka7e9.rkt:6:0: read-syntax: expected a `)` to close `(`\n  possible\
    \ cause: indentation suggests a missing `)` before line 14\n  context...:\n  \
    \ /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
  timestamp: 1660028085
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (zero? (modulo\
    \ n i))\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (helper n i)\n    (if (= n i)\n        n\n  \
    \      (if (= (modulo n i) 0)\n            (helper n (+ i 1))\n            (helper\
    \ n (+ i 1)))))\n  (helper n 2))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_helper n i)\n    (if (= i n)\n\
    \        (- n 1)\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor_helper\
    \ n (+ i 1)))))\n  (largest_divisor_helper n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpebmfnvio.rkt:20:4

    actual:     2

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpebmfnvio.rkt:21:4

    actual:     6

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpebmfnvio.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpebmfnvio.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (find-divisor n test-divisor)\n    (cond ((>\
    \ (square test-divisor) n) n)\n          ((divides? test-divisor n)\n        \
    \   (find-divisor n (+ test-divisor 1)))\n          (else (find-divisor n (+ test-divisor\
    \ 1)))))\n  (find-divisor n 2))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpyc_hb67o.rkt:8:15: square: unbound identifier\n  in: square\n \
    \ location...:\n   /tmp/tmpyc_hb67o.rkt:8:15\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= n i)\n\
    \        1\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor-iter\
    \ n (+ i 1)))))\n  (largest_divisor-iter n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptsv0mp0d.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptsv0mp0d.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n m)\n    (if (= (remainder n m) 0)\n\
    \        m\n        (divisor n (- m 1))))\n  (divisor n (- n 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= 0 (modulo\
    \ n i))\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl59zl4od.rkt:18:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl59zl4od.rkt:19:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpl59zl4od.rkt:22:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n i)\n    (if (= (modulo n i) 0)\n \
    \       i\n        (divisor n (+ i 1))))\n  (divisor n 2))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx40z7kf5.rkt:18:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx40z7kf5.rkt:19:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx40z7kf5.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx40z7kf5.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:18:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:19:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:22:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (or (= i\
    \ n) (= (modulo n i) 0))\n        i\n        (largest_divisor-iter n (+ i 1))))\n\
    \  (largest_divisor-iter n 2))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpljc_elp_.rkt:18:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpljc_elp_.rkt:19:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpljc_elp_.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpljc_elp_.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n i)\n    (if (= (modulo n i) 0)\n \
    \       i\n        (divisor n (- i 1))))\n  (divisor n (- n 1)))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_helper n i)\n    (if (= n i)\n\
    \        0\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor_helper\
    \ n (+ i 1)))))\n  (largest_divisor_helper n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjdi_0qg.rkt:20:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjdi_0qg.rkt:21:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjdi_0qg.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmppjdi_0qg.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (zero? (modulo\
    \ n i))\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= n i)\n\
    \        1\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor_iter\
    \ n (+ i 1)))))\n  (largest_divisor_iter n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpul03dnu7.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpul03dnu7.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= n i)\n\
    \        n\n        (if (= (modulo n i) 0)\n            (largest_divisor-iter\
    \ n (+ i 1))\n            (largest_divisor-iter n (+ i 1)))))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqmd3mp3.rkt:20:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqmd3mp3.rkt:21:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqmd3mp3.rkt:22:4

    actual:     10

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqmd3mp3.rkt:23:4

    actual:     100

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplqmd3mp3.rkt:24:4

    actual:     49

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (find-divisor n test-divisor)\n    (cond ((>\
    \ (square test-divisor) n) n)\n          ((divides? test-divisor n)\n        \
    \   (find-divisor n (+ test-divisor 1)))\n          (else (find-divisor n (+ test-divisor\
    \ 1)))))\n  (find-divisor n 2))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpyc_hb67o.rkt:8:15: square: unbound identifier\n  in: square\n \
    \ location...:\n   /tmp/tmpyc_hb67o.rkt:8:15\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter current-divisor)\n    (if\
    \ (= (remainder n current-divisor) 0)\n        current-divisor\n        (largest_divisor_iter\
    \ (- current-divisor 1))))\n  (largest_divisor_iter (/ n 2)))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0a3ks47g.rkt:18:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0a3ks47g.rkt:19:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp0a3ks47g.rkt:22:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (iter i)\n    (if (= (modulo n i) 0)\n      \
    \  i\n        (iter (- i 1))))\n  (iter (- n 1)))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (ld n d)\n    (if (= (remainder n d) 0)\n   \
    \     d\n        (ld n (- d 1))))\n  (ld n (- n 1)))\n\n(require rackunit)\n\n\
    (define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= n i)\n\
    \        1\n        (if (= (remainder n i) 0)\n            i\n            (largest-divisor-iter\
    \ n (+ i 1)))))\n  (largest-divisor-iter n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2us51kuc.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2us51kuc.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:18:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:19:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1ti0dqks.rkt:22:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:18:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:19:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:22:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n d)\n    (if (= (remainder n d) 0)\n\
    \        d\n        (divisor n (- d 1))))\n  (divisor n (- n 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= n i)\n\
    \        n\n        (if (= (modulo n i) 0)\n            (largest_divisor_iter\
    \ n (+ i 1))\n            (largest_divisor_iter n (+ i 1)))))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:20:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:21:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:22:4

    actual:     10

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:23:4

    actual:     100

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:24:4

    actual:     49

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter current-divisor n)\n  \
    \  (if (= (remainder n current-divisor) 0)\n        current-divisor\n        (largest_divisor-iter\
    \ (- current-divisor 1) n)))\n  (largest_divisor-iter (- n 1) n))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= 0 (modulo\
    \ n i))\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (find-divisor n test-divisor)\n    (cond ((>\
    \ (square test-divisor) n) n)\n          ((divides? test-divisor n) (find-divisor\
    \ n (+ test-divisor 1)))\n          (else (find-divisor n (+ test-divisor 1)))))\n\
    \  (find-divisor n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n \
    \   (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal?\
    \ (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpgw9ajkki.rkt:8:15: square: unbound identifier\n  in: square\n \
    \ location...:\n   /tmp/tmpgw9ajkki.rkt:8:15\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= 0 (modulo\
    \ n i))\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= n i)\n\
    \        1\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor-iter\
    \ n (+ i 1)))))\n  (largest_divisor-iter n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptsv0mp0d.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptsv0mp0d.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (iter i)\n    (if (= (modulo n i) 0)\n      \
    \  (if (= i 1)\n            1\n            (iter (- i 1)))\n        (iter (- i\
    \ 1))))\n  (iter (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\
    \n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpncf4kcpv.rkt:22:4

    actual:     1

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpncf4kcpv.rkt:23:4

    actual:     1

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpncf4kcpv.rkt:24:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n d)\n    (if (= (remainder\
    \ n d) 0)\n        d\n        (largest_divisor-iter n (- d 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor-iter test-divisor)\n    (if (&gt; (modulo\
    \ n test-divisor) 0)\n        (divisor-iter (+ test-divisor 1))\n        test-divisor))\n\
    \  (divisor-iter 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpmqg_36sw.rkt:6:0: read-syntax: expected a `)` to close `(`\n  possible\
    \ cause: indentation suggests a missing `)` before line 13\n  context...:\n  \
    \ /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
  timestamp: 1660028090
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor-iter test-divisor)\n    (if (&gt; (modulo\
    \ n test-divisor) 0)\n        (divisor-iter (+ test-divisor 1))\n        test-divisor))\n\
    \  (divisor-iter 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: SyntaxError
  stderr: "/tmp/tmpmqg_36sw.rkt:6:0: read-syntax: expected a `)` to close `(`\n  possible\
    \ cause: indentation suggests a missing `)` before line 13\n  context...:\n  \
    \ /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:186:17:\
    \ body\n   /work/arjunguha-research-group/software/racket/collects/syntax/module-reader.rkt:183:2:\
    \ wrap-internal\n   /work/arjunguha-research-group/software/racket/collects/racket/../syntax/module-reader.rkt:67:9:\
    \ wrap-internal/wrapper\n"
  stdout: ''
  timestamp: 1660028090
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n d)\n    (if (= (remainder n d) 0)\n\
    \        d\n        (divisor n (- d 1))))\n  (divisor n (- n 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest-divisor-iter (- i 1))))\n  (largest-divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbzz2trpd.rkt:18:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbzz2trpd.rkt:19:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpbzz2trpd.rkt:22:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (helper n i)\n    (if (= 0 (modulo n i))\n  \
    \      i\n        (helper n (+ i 1))))\n  (helper n 2))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5bqmui3.rkt:18:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5bqmui3.rkt:19:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5bqmui3.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpi5bqmui3.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor-iter candidate n)\n    (if (= (modulo\
    \ n candidate) 0)\n        candidate\n        (divisor-iter (- candidate 1) n)))\n\
    \  (divisor-iter (- n 1) n))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:18:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:19:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkbc6clie.rkt:22:4\n\
    \nmodulo: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= n i)\n\
    \        n\n        (if (= (modulo n i) 0)\n            (largest_divisor_iter\
    \ n (+ i 1))\n            (largest_divisor_iter n (+ i 1)))))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:20:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:21:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:22:4

    actual:     10

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:23:4

    actual:     100

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp7bstgxw.rkt:24:4

    actual:     49

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (let loop ([i (- n 1)])\n    (if (zero? (modulo n i))\n\
    \        i\n        (loop (- i 1)))))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n d)\n    (if (= (remainder n d) 0)\n\
    \        d\n        (divisor n (- d 1))))\n  (divisor n (- n 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (+ i 1))))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn0hfsorx.rkt:18:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn0hfsorx.rkt:19:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn0hfsorx.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn0hfsorx.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest-divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest-divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqdoo6h6n.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor n d)\n    (if (= (remainder n d) 0)\n\
    \        d\n        (divisor n (- d 1))))\n  (divisor n (- n 1)))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n\
    \    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal?\
    \ (candidate 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal?\
    \ (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= 0 (modulo\
    \ n i))\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter x)\n    (if (even? x)\n\
    \        (largest_divisor-iter (/ x 2))\n        (if (= x 1)\n            1\n\
    \            (if (= (remainder n x) 0)\n                x\n                (largest_divisor-iter\
    \ (- x 1))))))\n  (largest_divisor-iter n))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9hx2vyp5.rkt:22:4

    actual:     3

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9hx2vyp5.rkt:23:4

    actual:     7

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9hx2vyp5.rkt:25:4

    actual:     25

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp9hx2vyp5.rkt:26:4

    actual:     49

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028091
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i n)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (+ i 1) n)))\n  (largest_divisor_iter\
    \ 1 n))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpobz27fk0.rkt:20:4

    actual:     1

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpobz27fk0.rkt:21:4

    actual:     1

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpobz27fk0.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028092
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= n i)\n\
    \        (error \"No divisors found\")\n        (if (= (modulo n i) 0)\n     \
    \       i\n            (largest_divisor_iter n (+ i 1)))))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    ERROR

    name:       check-equal?

    location:   /tmp/tmp56xkwyf8.rkt:20:4


    No divisors found

    --------------------

    --------------------

    ERROR

    name:       check-equal?

    location:   /tmp/tmp56xkwyf8.rkt:21:4


    No divisors found

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56xkwyf8.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp56xkwyf8.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028092
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (find-divisor n test-divisor)\n    (cond ((>\
    \ (square test-divisor) n) n)\n          ((divides? test-divisor n)\n        \
    \   (find-divisor n (+ test-divisor 1)))\n          (else (find-divisor n (+ test-divisor\
    \ 1)))))\n  (find-divisor n 2))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpyc_hb67o.rkt:8:15: square: unbound identifier\n  in: square\n \
    \ location...:\n   /tmp/tmpyc_hb67o.rkt:8:15\n"
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter n (- i 1))))\n  (largest_divisor_iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n divisor)\n    (if (=\
    \ (remainder n divisor) 0)\n        (largest-divisor-iter n (- divisor 1))\n \
    \       divisor))\n  (largest-divisor-iter n (- n 1)))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxey88tt2.rkt:18:4

    actual:     2

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxey88tt2.rkt:19:4

    actual:     6

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxey88tt2.rkt:20:4

    actual:     9

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxey88tt2.rkt:21:4

    actual:     99

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpxey88tt2.rkt:22:4

    actual:     48

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028092
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter i)\n    (if (= (remainder\
    \ n i) 0)\n        i\n        (largest_divisor-iter (- i 1))))\n  (largest_divisor-iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor_iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor_iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest-divisor-iter n i)\n    (if (zero? (modulo\
    \ n i))\n        i\n        (largest-divisor-iter n (- i 1))))\n  (largest-divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028092
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (divisor-iter test-divisor)\n    (if (= (remainder\
    \ n test-divisor) 0)\n        test-divisor\n        (divisor-iter (- test-divisor\
    \ 1))))\n  (divisor-iter (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n\
    \    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n   \
    \ (check-equal? (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\
    \n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppyh8_1nh.rkt:18:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 3/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppyh8_1nh.rkt:19:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 7/2\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppyh8_1nh.rkt:22:4\n\
    \nremainder: contract violation\n  expected: integer?\n  given: 49/2\n--------------------\n"
  stdout: ''
  timestamp: 1660028092
- exit_code: 1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (find-divisor n test-divisor)\n    (cond ((>\
    \ (square test-divisor) n) n)\n          ((divides? test-divisor n) (find-divisor\
    \ n (+ test-divisor 1)))\n          (else (find-divisor n (+ test-divisor 1)))))\n\
    \  (find-divisor n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n\
    \  (let (( candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n \
    \   (check-equal? (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal?\
    \ (candidate 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "/tmp/tmpgw9ajkki.rkt:8:15: square: unbound identifier\n  in: square\n \
    \ location...:\n   /tmp/tmpgw9ajkki.rkt:8:15\n"
  stdout: ''
  timestamp: 1660028091
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor-iter n (- i 1))))\n  (largest_divisor-iter\
    \ n (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal?\
    \ (candidate 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate\
    \ 100) 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor-iter n i)\n    (if (= (modulo\
    \ n i) 0)\n        (largest_divisor-iter n (+ i 1))\n        (- i 1)))\n  (largest_divisor-iter\
    \ n 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:20:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:21:4

    actual:     2

    expected:   50

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwvndzk0w.rkt:22:4

    actual:     1

    expected:   7

    --------------------

    '
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (- n 1)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: -1
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter i)\n    (if (= (modulo\
    \ n i) 0)\n        i\n        (largest_divisor_iter (- i 1))))\n  (largest_divisor_iter\
    \ (/ n 2)))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ largest_divisor))\n    (check-equal? (candidate 3) 1)\n    (check-equal? (candidate\
    \ 7) 1)\n    (check-equal? (candidate 10) 5)\n    (check-equal? (candidate 100)\
    \ 50)\n    (check-equal? (candidate 49) 7)\n))\n\n(test-humaneval)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028089
- exit_code: 0
  program: "#lang racket\n\n;; For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n;; >>> (largest_divisor 15)\n;; 5\n(define\
    \ (largest_divisor n)\n  (define (largest_divisor_iter n i)\n    (if (= n i)\n\
    \        0\n        (if (= (modulo n i) 0)\n            i\n            (largest_divisor_iter\
    \ n (+ i 1)))))\n  (largest_divisor_iter n 2))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate largest_divisor))\n    (check-equal?\
    \ (candidate 3) 1)\n    (check-equal? (candidate 7) 1)\n    (check-equal? (candidate\
    \ 10) 5)\n    (check-equal? (candidate 100) 50)\n    (check-equal? (candidate\
    \ 49) 7)\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6mzw77b9.rkt:20:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6mzw77b9.rkt:21:4

    actual:     0

    expected:   1

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6mzw77b9.rkt:22:4

    actual:     2

    expected:   5

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp6mzw77b9.rkt:23:4

    actual:     2

    expected:   50

    --------------------

    '
  stdout: ''
  timestamp: 1660028092

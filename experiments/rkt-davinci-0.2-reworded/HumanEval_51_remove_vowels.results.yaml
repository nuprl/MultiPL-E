name: HumanEval_51_remove_vowels
language: rkt
results:
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmp7idihaf4.rkt:17:6: char-vowel?: unbound identifier\n  in: char-vowel?\n\
    \  location...:\n   /tmp/tmp7idihaf4.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk0stk1wn.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpk0stk1wn.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpk0stk1wn.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpk0stk1wn.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpk0stk1wn.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpk0stk1wn.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpk0stk1wn.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpre87jadi.rkt:17:6: char-vowel?: unbound identifier\n  in: char-vowel?\n\
    \  location...:\n   /tmp/tmpre87jadi.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyw80g1mo.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpyw80g1mo.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpyw80g1mo.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpyw80g1mo.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpyw80g1mo.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpyw80g1mo.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpyw80g1mo.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpy6tnwvoo.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpy6tnwvoo.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpu3400x0m.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpu3400x0m.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) \"\"]\n    [(vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (string-append (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpzvvyup4r.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpzvvyup4r.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkb0w2_vh.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpkb0w2_vh.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpkb0w2_vh.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpkb0w2_vh.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpkb0w2_vh.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpkb0w2_vh.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpkb0w2_vh.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmp7wbyd6da.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmp7wbyd6da.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmplgozyos0.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmplgozyos0.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpryprfakh.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpryprfakh.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8_z_smh_.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp8_z_smh_.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp8_z_smh_.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp8_z_smh_.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp8_z_smh_.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp8_z_smh_.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp8_z_smh_.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmp4dsp59s7.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmp4dsp59s7.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmp6rvk5onf.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmp6rvk5onf.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) \"\"]\n    [(vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (string-append (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpixrk20z3.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpixrk20z3.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate remove_vowels))\n    (check-equal? (candidate \"\")\
    \ \"\")\n    (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n\
    \    (check-equal? (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate\
    \ \"eeeee\") \"\")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal?\
    \ (candidate \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\"\
    )\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmp1xf8a73a.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmp1xf8a73a.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) text]\n    [(vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate remove_vowels))\n    (check-equal? (candidate \"\") \"\")\n   \
    \ (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n    (check-equal?\
    \ (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate \"eeeee\") \"\
    \")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal? (candidate\
    \ \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\")\n))\n\n\
    (test-humaneval)"
  stdout: ''
  stderr: "/tmp/tmpfo28zwh1.rkt:17:6: vowel?: unbound identifier\n  in: vowel?\n \
    \ location...:\n   /tmp/tmpfo28zwh1.rkt:17:6\n"
  exit_code: 1
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1q1eelgz.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp1q1eelgz.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmp1q1eelgz.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp1q1eelgz.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp1q1eelgz.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmp1q1eelgz.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmp1q1eelgz.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) empty]\n   \
    \ [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
    \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
    ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
    )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate\
    \ \"acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
    \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdoll4lkr.rkt:25:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpdoll4lkr.rkt:26:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpdoll4lkr.rkt:29:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpdoll4lkr.rkt:30:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpdoll4lkr.rkt:31:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpdoll4lkr.rkt:32:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmpdoll4lkr.rkt:33:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
    \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
    \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>>\
    \ (remove_vowels \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"\
    zbcd\"\n(define (remove_vowels text)\n  (cond\n    [(empty? text) \"\"]\n    [(member\
    \ (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n\
    \     (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate remove_vowels))\n    (check-equal? (candidate \"\") \"\")\n   \
    \ (check-equal? (candidate \"abcdef\nghijklm\") \"bcdf\nghjklm\")\n    (check-equal?\
    \ (candidate \"fedcba\") \"fdcb\")\n    (check-equal? (candidate \"eeeee\") \"\
    \")\n    (check-equal? (candidate \"acBAA\") \"cB\")\n    (check-equal? (candidate\
    \ \"EcBOO\") \"cB\")\n    (check-equal? (candidate \"ybcd\") \"ybcd\")\n))\n\n\
    (test-humaneval)"
  stdout: ''
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppjoysubt.rkt:26:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmppjoysubt.rkt:27:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"abcdef\\nghijklm\"\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmppjoysubt.rkt:30:4\n\
    \nfirst: contract violation\n  expected: (and/c list? (not/c empty?))\n  given:\
    \ \"fedcba\"\n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmppjoysubt.rkt:31:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"eeeee\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmppjoysubt.rkt:32:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"acBAA\"\
    \n--------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmppjoysubt.rkt:33:4\n\nfirst: contract violation\n  expected:\
    \ (and/c list? (not/c empty?))\n  given: \"EcBOO\"\n--------------------\n--------------------\n\
    ERROR\nname:       check-equal?\nlocation:   /tmp/tmppjoysubt.rkt:34:4\n\nfirst:\
    \ contract violation\n  expected: (and/c list? (not/c empty?))\n  given: \"ybcd\"\
    \n--------------------\n"
  exit_code: 0
  status: Exception

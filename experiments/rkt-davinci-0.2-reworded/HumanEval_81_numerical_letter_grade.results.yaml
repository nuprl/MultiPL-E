language: rkt
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"Error\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgazxi1b.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgazxi1b.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgazxi1b.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmptgazxi1b.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"\
    ]\n       [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>=\
    \ grade 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"\
    B-\"]\n       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>=\
    \ grade 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"\
    D\"]\n       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -0.1) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:52:4

    actual:     ''("E" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(empty? grades) empty]\n        [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n       \
    \ [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:48:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:50:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -0.1) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpwyjmxhqj.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond ((>= grade 4.0) \"A+\")\n  \
    \             ((>= grade 3.7) \"A\")\n               ((>= grade 3.3) \"A-\")\n\
    \               ((>= grade 3.0) \"B+\")\n               ((>= grade 2.7) \"B\"\
    )\n               ((>= grade 2.3) \"B-\")\n               ((>= grade 2.0) \"C+\"\
    )\n               ((>= grade 1.7) \"C\")\n               ((>= grade 1.3) \"C-\"\
    )\n               ((>= grade 1.0) \"D+\")\n               ((>= grade 0.7) \"D\"\
    )\n               ((>= grade 0.0) \"D-\")\n               (else \"E\")))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuymyoql1.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuymyoql1.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuymyoql1.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpuymyoql1.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(>= grades 4.0) \"A+\"]\n        [(>= grades 3.7) \"A\"]\n\
    \        [(>= grades 3.3) \"A-\"]\n        [(>= grades 3.0) \"B+\"]\n        [(>=\
    \ grades 2.7) \"B\"]\n        [(>= grades 2.3) \"B-\"]\n        [(>= grades 2.0)\
    \ \"C+\"]\n        [(>= grades 1.7) \"C\"]\n        [(>= grades 1.3) \"C-\"]\n\
    \        [(>= grades 1.0) \"D+\"]\n        [(>= grades 0.7) \"D\"]\n        [(>=\
    \ grades 0.0) \"D-\"]\n        [else \"E\"]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: "--------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnn4racba.rkt:45:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(4.0 3 1.7 2 3.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnn4racba.rkt:46:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.2)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnn4racba.rkt:47:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.5)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnn4racba.rkt:48:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(0.0)\n--------------------\n\
    --------------------\nERROR\nname:       check-equal?\nlocation:   /tmp/tmpnn4racba.rkt:49:4\n\
    \n>=: contract violation\n  expected: real?\n  given: '(1.0 0.3 1.5 2.8 3.3)\n\
    --------------------\n--------------------\nERROR\nname:       check-equal?\n\
    location:   /tmp/tmpnn4racba.rkt:50:4\n\n>=: contract violation\n  expected: real?\n\
    \  given: '(0.0 0.7)\n--------------------\n"
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(empty? grades) empty]\n        [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n       \
    \ [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:48:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:50:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmplva6gdrx.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -0.1) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(empty? grades) empty]\n        [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n       \
    \ [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:48:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:50:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4b7qe0yw.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4b7qe0yw.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4b7qe0yw.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp4b7qe0yw.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(>= (car grades) 4.0) \"A+\"]\n    [(>= (car grades)\
    \ 3.7) \"A\"]\n    [(>= (car grades) 3.3) \"A-\"]\n    [(>= (car grades) 3.0)\
    \ \"B+\"]\n    [(>= (car grades) 2.7) \"B\"]\n    [(>= (car grades) 2.3) \"B-\"\
    ]\n    [(>= (car grades) 2.0) \"C+\"]\n    [(>= (car grades) 1.7) \"C\"]\n   \
    \ [(>= (car grades) 1.3) \"C-\"]\n    [(>= (car grades) 1.0) \"D+\"]\n    [(>=\
    \ (car grades) 0.7) \"D\"]\n    [(>= (car grades) 0.0) \"D-\"]\n    [else \"E\"\
    ]))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3 1.7 2 3.5))\
    \ (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate (list\
    \ 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"D-\"\
    ))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:46:4

    actual:     "A+"

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:47:4

    actual:     "D+"

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:48:4

    actual:     "D-"

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:49:4

    actual:     "D-"

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:50:4

    actual:     "D+"

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphogmtq8p.rkt:51:4

    actual:     "D-"

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -0.1) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpx3ry4xpf.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(>= (car grades) 4.0) \"A+\"]\n        [(>= (car grades) 3.7)\
    \ \"A\"]\n        [(>= (car grades) 3.3) \"A-\"]\n        [(>= (car grades) 3.0)\
    \ \"B+\"]\n        [(>= (car grades) 2.7) \"B\"]\n        [(>= (car grades) 2.3)\
    \ \"B-\"]\n        [(>= (car grades) 2.0) \"C+\"]\n        [(>= (car grades) 1.7)\
    \ \"C\"]\n        [(>= (car grades) 1.3) \"C-\"]\n        [(>= (car grades) 1.0)\
    \ \"D+\"]\n        [(>= (car grades) 0.7) \"D\"]\n        [(>= (car grades) 0.0)\
    \ \"D-\"]\n        [else \"E\"]))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:45:4

    actual:     "A+"

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:46:4

    actual:     "D+"

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:47:4

    actual:     "D-"

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:48:4

    actual:     "D-"

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:49:4

    actual:     "D+"

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpaiacd3n_.rkt:50:4

    actual:     "D-"

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp_ir95961.rkt:52:4

    actual:     ''("E" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [(>= x 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp7ed72v_f.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(>=\
    \ gpa 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmps5xr50qu.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           ))\n\
    \       grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let\
    \ (( candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0\
    \ 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbhsj33n_.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbhsj33n_.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbhsj33n_.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbhsj33n_.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond [(empty? grades) empty]\n        [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first grades)\
    \ 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n       \
    \ [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:46:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:47:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:48:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:49:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:50:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmphf6q6mmk.rkt:51:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x) (cond\n                    [(>= x 4.0) \"A+\"]\n\
    \                    [(>= x 3.7) \"A\"]\n                    [(>= x 3.3) \"A-\"\
    ]\n                    [(>= x 3.0) \"B+\"]\n                    [(>= x 2.7) \"\
    B\"]\n                    [(>= x 2.3) \"B-\"]\n                    [(>= x 2.0)\
    \ \"C+\"]\n                    [(>= x 1.7) \"C\"]\n                    [(>= x\
    \ 1.3) \"C-\"]\n                    [(>= x 1.0) \"D+\"]\n                    [(>=\
    \ x 0.7) \"D\"]\n                    [(>= x 0.0) \"D-\"]\n                   \
    \ [(>= x 0.0) \"E\"]))\n        grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjbbg6jz.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjbbg6jz.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjbbg6jz.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpbjbbg6jz.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040161
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n\
    (test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpocei0m6m.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (cond\n    [(empty? grades) empty]\n    [(> (first grades) 3.7) (cons\
    \ \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades) 3.3)\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n\n(require rackunit)\n\n(define\
    \ (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal?\
    \ (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n\
    \    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate\
    \ (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"\
    E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"\
    D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list\
    \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:48:4

    actual:     ''("C-")

    expected:   ''("D+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:49:4

    actual:     ''("D")

    expected:   ''("D-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:51:4

    actual:     ''("D+" "D" "C" "B+" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpp800_tp_.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmp2xphxvfk.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpgh_2xh_i.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"\
    ]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n       \
    \    [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa\
    \ 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"\
    C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n   \
    \        [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [(=\
    \ gpa 0.0) \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpqgw47u3v.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:48:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:51:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:52:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpmy3ctfbr.rkt:53:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"\
    ]\n       [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>=\
    \ grade 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"\
    B-\"]\n       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>=\
    \ grade 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"\
    D\"]\n       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n\n(require\
    \ rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0.0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpiw71u7zx.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n          \
    \     ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n               ((>=\
    \ x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n               ((>= x 2.3)\
    \ \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>= x 1.7) \"C\"\
    )\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0) \"D+\")\n  \
    \             ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\")\n       \
    \        (else \"E\")))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:47:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:50:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:51:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpn7mns6ge.rkt:52:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160
- exit_code: 0
  program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7)) (list \"E\" \"\
    D-\"))\n))\n\n(test-humaneval)"
  status: Exception
  stderr: '--------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:49:4

    actual:     ''("A+" "B+" "C" "C+" "A-")

    expected:   ''("A+" "B" "C-" "C" "A-")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:52:4

    actual:     ''("D-")

    expected:   ''("E")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:53:4

    actual:     ''("D+" "D-" "C-" "B" "A-")

    expected:   ''("D" "D-" "C-" "B" "B+")

    --------------------

    --------------------

    FAILURE

    name:       check-equal?

    location:   /tmp/tmpubc0o94e.rkt:54:4

    actual:     ''("D-" "D")

    expected:   ''("E" "D-")

    --------------------

    '
  stdout: ''
  timestamp: 1660040160

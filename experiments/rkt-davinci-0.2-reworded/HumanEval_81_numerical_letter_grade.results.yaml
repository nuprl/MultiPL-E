name: HumanEval_81_numerical_letter_grade
language: rkt
results:
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj4fgn0rh.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpj4fgn0rh.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpj4fgn0rh.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpj4fgn0rh.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp0yb70b2f.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmp0yb70b2f.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp0yb70b2f.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmp0yb70b2f.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj93s1skm.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpj93s1skm.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpj93s1skm.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpj93s1skm.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpc0toqvwr.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpc0toqvwr.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpc0toqvwr.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpc0toqvwr.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpycvnrtky.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpycvnrtky.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpycvnrtky.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpycvnrtky.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0 0.7)) (list \"E\" \"D-\"\
    ))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsuzndzfz.rkt:49:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpsuzndzfz.rkt:52:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpsuzndzfz.rkt:53:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpsuzndzfz.rkt:54:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpgutke2e1.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpgutke2e1.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpgutke2e1.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpgutke2e1.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsr3nb1hs.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpsr3nb1hs.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpsr3nb1hs.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpsr3nb1hs.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvf7pj7gn.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpvf7pj7gn.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpvf7pj7gn.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpvf7pj7gn.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpj1d7fpy2.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpj1d7fpy2.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpj1d7fpy2.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpj1d7fpy2.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmppby0hif7.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmppby0hif7.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmppby0hif7.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmppby0hif7.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_ws6zlzd.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmp_ws6zlzd.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp_ws6zlzd.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmp_ws6zlzd.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond [(>= x 4.0) \"A+\"]\n          \
    \     [(>= x 3.7) \"A\"]\n               [(>= x 3.3) \"A-\"]\n               [(>=\
    \ x 3.0) \"B+\"]\n               [(>= x 2.7) \"B\"]\n               [(>= x 2.3)\
    \ \"B-\"]\n               [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"\
    ]\n               [(>= x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n  \
    \             [(>= x 0.7) \"D\"]\n               [(>= x 0.0) \"D-\"]\n       \
    \        [else \"E\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0 0.7)) (list \"E\" \"D-\"\
    ))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp8lfzis9z.rkt:47:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmp8lfzis9z.rkt:50:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp8lfzis9z.rkt:51:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmp8lfzis9z.rkt:52:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           ((>= x 4.0) \"A+\")\n\
    \           ((>= x 3.7) \"A\")\n           ((>= x 3.3) \"A-\")\n           ((>=\
    \ x 3.0) \"B+\")\n           ((>= x 2.7) \"B\")\n           ((>= x 2.3) \"B-\"\
    )\n           ((>= x 2.0) \"C+\")\n           ((>= x 1.7) \"C\")\n           ((>=\
    \ x 1.3) \"C-\")\n           ((>= x 1.0) \"D+\")\n           ((>= x 0.7) \"D\"\
    )\n           ((>= x 0.0) \"D-\")\n           (else \"E\")))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpjvzjcyrg.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpjvzjcyrg.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpjvzjcyrg.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpjvzjcyrg.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpnig01vau.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpnig01vau.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpnig01vau.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpnig01vau.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpr1kqx6ky.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpr1kqx6ky.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpr1kqx6ky.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpr1kqx6ky.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let ((\
    \ candidate numerical_letter_grade))\n    (check-equal? (candidate (list 4.0 3\
    \ 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal? (candidate\
    \ (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5)) (list \"\
    D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n    (check-equal?\
    \ (candidate (list 1 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    ))\n    (check-equal? (candidate (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpqzumxe5o.rkt:47:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpqzumxe5o.rkt:50:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpqzumxe5o.rkt:51:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpqzumxe5o.rkt:52:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else\
    \ \"F\"]))\n       grades))\n\n(require rackunit)\n\n(define (test-humaneval)\
    \ \n\n  (let (( candidate numerical_letter_grade))\n    (check-equal? (candidate\
    \ (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\" \"C\" \"A-\"))\n    (check-equal?\
    \ (candidate (list 1.2)) (list \"D+\"))\n    (check-equal? (candidate (list 0.5))\
    \ (list \"D-\"))\n    (check-equal? (candidate (list 0.0)) (list \"E\"))\n   \
    \ (check-equal? (candidate (list 1 0.3 1.5 2.8 3.3)) (list \"D\" \"D-\" \"C-\"\
    \ \"B\" \"B+\"))\n    (check-equal? (candidate (list 0 0.7)) (list \"E\" \"D-\"\
    ))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5icp39x6.rkt:49:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmp5icp39x6.rkt:52:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp5icp39x6.rkt:53:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmp5icp39x6.rkt:54:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n\
    \           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>=\
    \ x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"\
    ]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>=\
    \ x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"\
    ]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n\
    \n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpn516qnvw.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpn516qnvw.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpn516qnvw.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpn516qnvw.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; It is the last week of the semester and the teacher\
    \ has to give the grades\n;; to students. The teacher has been making her own\
    \ algorithm for grading.\n;; The only problem is, she has lost the code she used\
    \ for grading.\n;; She has given you a list of GPAs for some students and you\
    \ have to write \n;; a function that can output a list of letter grades using\
    \ the following table:\n;; GPA       |    Letter grade\n;; 4.0               \
    \ A+\n;; > 3.7                A \n;; > 3.3                A- \n;; > 3.0      \
    \          B+\n;; > 2.7                B \n;; > 2.3                B-\n;; > 2.0\
    \                C+\n;; > 1.7                C\n;; > 1.3                C-\n;;\
    \ > 1.0                D+ \n;; > 0.7                D \n;; > 0.0             \
    \   D-\n;; 0.0                E\n;; Example:\n;; >>> (grade_equation (list 4.0\
    \ 3 1.7 2 3.5))\n;; (list \"A+\" \"B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade\
    \ grades)\n  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0)\
    \ \"A+\"]\n           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"\
    ]\n           [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n   \
    \        [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n       \
    \    [(>= grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>=\
    \ grade 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade\
    \ 0.0) \"D-\"]\n           [else \"E\"]))\n       grades))\n\n(require rackunit)\n\
    \n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
    \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
    \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n  \
    \  (check-equal? (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate\
    \ (list 0.0)) (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8\
    \ 3.3)) (list \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate\
    \ (list 0 0.7)) (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg7e9d1c6.rkt:48:4\n\
    actual:     '(\"A+\" \"B+\" \"C\" \"C+\" \"A-\")\nexpected:   '(\"A+\" \"B\" \"\
    C-\" \"C\" \"A-\")\n--------------------\n--------------------\nFAILURE\nname:\
    \       check-equal?\nlocation:   /tmp/tmpg7e9d1c6.rkt:51:4\nactual:     '(\"\
    D-\")\nexpected:   '(\"E\")\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpg7e9d1c6.rkt:52:4\nactual:     '(\"\
    D+\" \"D-\" \"C-\" \"B\" \"A-\")\nexpected:   '(\"D\" \"D-\" \"C-\" \"B\" \"B+\"\
    )\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\n\
    location:   /tmp/tmpg7e9d1c6.rkt:53:4\nactual:     '(\"D-\" \"D\")\nexpected:\
    \   '(\"E\" \"D-\")\n--------------------\n"
  exit_code: 0
  status: Exception

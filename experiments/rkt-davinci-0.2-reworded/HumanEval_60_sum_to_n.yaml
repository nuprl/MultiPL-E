name: HumanEval_60_sum_to_n
language: rkt
prompt: "#lang racket\n\n;; sum_to_n is a function that sums numbers from 1 to n.\n\
  ;; >>> (sum_to_n 30)\n;; 465\n;; >>> (sum_to_n 100)\n;; 5050\n;; >>> (sum_to_n 5)\n\
  ;; 15\n;; >>> (sum_to_n 10)\n;; 55\n;; >>> (sum_to_n 1)\n;; 1\n(define (sum_to_n\
  \ n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_to_n))\n\
  \    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 6) 21)\n    (check-equal?\
  \ (candidate 11) 66)\n    (check-equal? (candidate 30) 465)\n    (check-equal? (candidate\
  \ 100) 5050)\n))\n\n(test-humaneval)"
completions: ["  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if\
    \ (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n    \
    \  1\n      (+ n (sum_to_n (- n 1)))))\n", "  (define (sum_to_n_iter n sum)\n\
    \    (if (= n 0)\n        sum\n        (sum_to_n_iter (- n 1) (+ sum n))))\n \
    \ (sum_to_n_iter n 0))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n\
    \ 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", " \
    \ (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n\
    \      1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n      1\n     \
    \ (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n\
    \ (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n",
  "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n \
    \     1\n      (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+\
    \ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (-\
    \ n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n", " \
    \ (define (sum_to_n_iter i sum)\n    (if (= i n)\n        sum\n        (sum_to_n_iter\
    \ (+ i 1) (+ sum i))))\n  (sum_to_n_iter 1 0))\n", "  (if (= n 1)\n      1\n \
    \     (+ n (sum_to_n (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n\
    \ (- n 1)))))\n", "  (if (= n 1)\n      1\n      (+ n (sum_to_n (- n 1)))))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_157_right_angle_triangle
language: rkt
prompt: "#lang racket\n\n;; Given the lengths of the three sides of a triangle. Return\
  \ #t if the three\n;; sides form a right-angled triangle, #f otherwise.\n;; A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n;; 90 degree.\n\
  ;; Example:\n;; >>> (right_angle_triangle 3 4 5)\n;; #t\n;; >>> (right_angle_triangle\
  \ 1 2 3)\n;; #f\n(define (right_angle_triangle a b c)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate right_angle_triangle))\n\
  \    (check-equal? (candidate 3 4 5) #t)\n    (check-equal? (candidate 1 2 3) #f)\n\
  \    (check-equal? (candidate 10 6 8) #t)\n    (check-equal? (candidate 2 2 2) #f)\n\
  \    (check-equal? (candidate 7 24 25) #t)\n    (check-equal? (candidate 10 5 7)\
  \ #f)\n    (check-equal? (candidate 5 12 13) #t)\n    (check-equal? (candidate 15\
  \ 8 17) #t)\n    (check-equal? (candidate 48 55 73) #t)\n    (check-equal? (candidate\
  \ 1 1 1) #f)\n    (check-equal? (candidate 2 2 10) #f)\n))\n\n(test-humaneval)"
completions: ["  (and (and (<= a b) (<= b c))\n       (or (= (+ (* a a) (* b b)) (*\
    \ c c))\n           (= (+ (* a a) (* c c)) (* b b))\n           (= (+ (* b b)\
    \ (* c c)) (* a a)))))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square\
    \ c)))\n          (= (square b) (+ (square a) (square c)))\n          (= (square\
    \ c) (+ (square a) (square b))))\n     #t]\n    [else #f]))\n", "  (cond\n   \
    \ [(and (> a 0) (> b 0) (> c 0))\n     (and (>= (+ (* a a) (* b b)) (* c c))\n\
    \          (>= (+ (* a a) (* c c)) (* b b))\n          (>= (+ (* b b) (* c c))\
    \ (* a a)))]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n\
    \           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a)\
    \ (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2)\
    \ (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n         \
    \ (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (let ((a2\
    \ (* a a))\n        (b2 (* b b))\n        (c2 (* c c)))\n    (or (= (+ a2 b2)\
    \ c2)\n        (= (+ a2 c2) b2)\n        (= (+ b2 c2) a2))))\n", "  (cond\n  \
    \  [(and (= (sqr a) (+ (sqr b) (sqr c))) (= (sqr b) (+ (sqr a) (sqr c))) (= (sqr\
    \ c) (+ (sqr a) (sqr b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (> a 0)\
    \ (> b 0) (> c 0))\n     (or (and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n \
    \             (= a b))\n         (and (= (expt b 2) (+ (expt a 2) (expt c 2)))\n\
    \              (= b c))\n         (and (= (expt c 2) (+ (expt a 2) (expt b 2)))\n\
    \              (= a c)))]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b\
    \ b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c\
    \ (sqrt (+ (* a a) (* b b)))))\n       (or (= a (sqrt (+ (* b b) (* c c))))\n\
    \           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a)\
    \ (* b b)))))))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (=\
    \ b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       (and (> a 0) (> b 0) (> c 0))))\n", "  (cond\n    [(and (= (square a)\
    \ (+ (square b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n\
    \          (= (square c) (+ (square a) (square b))))\n     #t]\n    [else #f]))\n",
  "  (cond\n    [(and (= (sqr a) (+ (sqr b) (sqr c)))\n          (= (sqr b) (+ (sqr\
    \ a) (sqr c)))\n          (= (sqr c) (+ (sqr a) (sqr b)))) #t]\n    [else #f]))\n",
  "  (and (> a 0) (> b 0) (> c 0)\n       (or (= (expt a 2) (+ (expt b 2) (expt c\
    \ 2)))\n           (= (expt b 2) (+ (expt a 2) (expt c 2)))\n           (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))))\n", "  (cond\n    [(and (= a (sqrt (+ (*\
    \ b b) (* c c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c\
    \ (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n", "  (and (= (square a)\
    \ (+ (square b) (square c)))\n       (= (square b) (+ (square a) (square c)))\n\
    \       (= (square c) (+ (square a) (square b)))))\n", "  (and (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (=\
    \ (sqr a) (+ (sqr b) (sqr c)))\n          (= (sqr b) (+ (sqr a) (sqr c)))\n  \
    \        (= (sqr c) (+ (sqr a) (sqr b)))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (= (square a) (+ (square b) (square c)))\n          (= (square b) (+\
    \ (square a) (square c)))\n          (= (square c) (+ (square a) (square b))))\n\
    \     #t]\n    [else #f]))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (* c\
    \ c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+ (*\
    \ a a) (* b b))))) #t]\n    [else #f]))\n", "  (cond ((and (= (expt a 2) (+ (expt\
    \ b 2) (expt c 2)))\n              (= (expt b 2) (+ (expt a 2) (expt c 2)))\n\
    \              (= (expt c 2) (+ (expt a 2) (expt b 2))))\n         #t)\n     \
    \   (else #f)))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n\
    \          (= (square b) (+ (square a) (square c)))\n          (= (square c) (+\
    \ (square a) (square b)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (square\
    \ a) (+ (square b) (square c))) (= (square b) (+ (square a) (square c))) (= (square\
    \ c) (+ (square a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (or (= a (sqrt (+ (* b b) (* c c))))\n             (= b (sqrt (+ (* a a) (*\
    \ c c))))\n             (= c (sqrt (+ (* a a) (* b b)))))\n          (and (> a\
    \ 0) (> b 0) (> c 0))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b\
    \ b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c\
    \ (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (square\
    \ a) (+ (square b) (square c)))\n          (= (square b) (+ (square a) (square\
    \ c)))\n          (= (square c) (+ (square a) (square b)))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n          (= (square\
    \ b) (+ (square a) (square c)))\n          (= (square c) (+ (square a) (square\
    \ b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b\
    \ 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n      \
    \    (= (expt c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n",
  "  (and (and (< a (+ b c)) (> a (- b c)))\n       (and (< b (+ a c)) (> b (- a c)))\n\
    \       (and (< c (+ a b)) (> c (- a b)))))\n", "  (cond\n    [(and (= (expt a\
    \ 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c\
    \ 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and\
    \ (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c\
    \ c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and\
    \ (<= a b c)\n       (= (expt a 2) (+ (expt b 2) (expt c 2)))))\n", "  (and (or\
    \ (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n\
    \           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (=\
    \ a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n\
    \           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (<= a b\
    \ c)\n       (or (= (expt a 2) (+ (expt b 2) (expt c 2)))\n           (= (expt\
    \ b 2) (+ (expt a 2) (expt c 2)))\n           (= (expt c 2) (+ (expt a 2) (expt\
    \ b 2))))))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b\
    \ (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b\
    \ (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (and (and (<= a b) (<= b c))\n       (or (= (expt a 2) (+\
    \ (expt b 2) (expt c 2)))\n           (= (expt b 2) (+ (expt a 2) (expt c 2)))\n\
    \           (= (expt c 2) (+ (expt a 2) (expt b 2))))))\n", "  (cond\n    [(and\
    \ (> a 0) (> b 0) (> c 0))\n     (cond\n       [(= (expt a 2) (+ (expt b 2) (expt\
    \ c 2))) #t]\n       [(= (expt b 2) (+ (expt a 2) (expt c 2))) #t]\n       [(=\
    \ (expt c 2) (+ (expt a 2) (expt b 2))) #t]\n       [else #f])]\n    [else #f]))\n",
  "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt\
    \ b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt\
    \ b 2))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (> a 0) (> b 0) (>\
    \ c 0))\n     (let* ([a2 (* a a)]\n            [b2 (* b b)]\n            [c2 (*\
    \ c c)])\n       (or (= (+ a2 b2) c2)\n           (= (+ a2 c2) b2)\n         \
    \  (= (+ b2 c2) a2)))]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b)\
    \ (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= a (sqrt (+ (*\
    \ b b) (* c c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c\
    \ (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n", "  (cond\n    [(and (>\
    \ a 0) (> b 0) (> c 0))\n     (and\n       (or (= (sqr a) (+ (sqr b) (sqr c)))\n\
    \           (= (sqr b) (+ (sqr a) (sqr c)))\n           (= (sqr c) (+ (sqr a)\
    \ (sqr b))))\n       (and\n         (>= a b)\n         (>= b c)))]\n    [else\n\
    \     #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b\
    \ (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (and\n   (and (<= a b) (<= b c))\n   (or (= (+ (* a a) (*\
    \ b b)) (* c c))\n       (= (+ (* a a) (* c c)) (* b b))\n       (= (+ (* b b)\
    \ (* c c)) (* a a)))))\n", "  (and (<= a b c)\n       (= (expt a 2) (+ (expt b\
    \ 2) (expt c 2)))))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n       \
    \    (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (* c c))))\n      \
    \    (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+ (* a a) (* b b)))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(and (< a b) (< a c))\n     (if (= (expt\
    \ a 2) (+ (expt b 2) (expt c 2)))\n         #t\n         #f)]\n    [(and (< b\
    \ a) (< b c))\n     (if (= (expt b 2) (+ (expt a 2) (expt c 2)))\n         #t\n\
    \         #f)]\n    [(and (< c a) (< c b))\n     (if (= (expt c 2) (+ (expt a\
    \ 2) (expt b 2)))\n         #t\n         #f)]\n    [else #f]))\n", "  (let ([a2\
    \ (sqr a)]\n        [b2 (sqr b)]\n        [c2 (sqr c)])\n    (or (and (= a2 (+\
    \ b2 c2)) (= a b c))\n        (and (= b2 (+ a2 c2)) (= a b c))\n        (and (=\
    \ c2 (+ a2 b2)) (= a b c)))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b\
    \ 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n      \
    \    (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (= (sqr a) (+ (sqr b) (sqr c))) (= (sqr b) (+ (sqr a) (sqr c))) (=\
    \ (sqr c) (+ (sqr a) (sqr b)))) #t]\n    [else #f]))\n", "  (and (<= a b c)\n\
    \       (= (expt a 2) (+ (expt b 2) (expt c 2)))))\n", "  (and (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))\n       (and (or (= a (sqrt (- (* b b)\
    \ (* c c))))\n                (= b (sqrt (- (* a a) (* c c))))\n             \
    \   (= c (sqrt (- (* a a) (* b b)))))\n            (and (or (= a (sqrt (- (* c\
    \ c) (* b b))))\n                     (= b (sqrt (- (* c c) (* a a))))\n     \
    \                (= c (sqrt (- (* a a) (* b b)))))))))\n", "  (and (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (define (square x)\
    \ (* x x))\n  (define (hypotenuse a b)\n    (sqrt (+ (square a) (square b))))\n\
    \  (define (is-right-angle? a b c)\n    (and (or (= a (hypotenuse b c))\n    \
    \         (= b (hypotenuse a c))\n             (= c (hypotenuse a b)))\n     \
    \    #t))\n  (is-right-angle? a b c))\n", "  (cond\n    [(and (= (expt a 2) (+\
    \ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n\
    \          (= (expt c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       (or (= a b) (=\
    \ a c) (= b c))))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square\
    \ c)))\n          (= (square b) (+ (square a) (square c)))\n          (= (square\
    \ c) (+ (square a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (> a 0) (> b 0) (> c 0))\n     (if (or (= (expt a 2) (+ (expt b 2) (expt c 2)))\n\
    \             (= (expt b 2) (+ (expt a 2) (expt c 2)))\n             (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))\n         #t\n         #f)]\n    [else #f]))\n",
  "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt\
    \ b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt\
    \ b 2)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (*\
    \ c c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+\
    \ (* a a) (* b b))))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b\
    \ b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c\
    \ (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (sqr a)\
    \ (+ (sqr b) (sqr c))) (= (sqr b) (+ (sqr a) (sqr c))) (= (sqr c) (+ (sqr a) (sqr\
    \ b)))) #t]\n    [else #f]))\n", "  (and (> a 0) (> b 0) (> c 0)\n       (or (=\
    \ (sqrt (+ (* a a) (* b b))) c)\n           (= (sqrt (+ (* a a) (* c c))) b)\n\
    \           (= (sqrt (+ (* b b) (* c c))) a))))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (expt\
    \ a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt\
    \ c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n\
    \    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\
    \ #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n    \
    \       (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (*\
    \ b b)))))\n       #t))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (= (square a) (+ (square b) (square c)))\n          (= (square b) (+ (square\
    \ a) (square c)))\n          (= (square c) (+ (square a) (square b)))) #t]\n \
    \   [else #f]))\n", "  (and (>= a b c)\n       (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))))\n", "  (cond\n    [(and (or (= a (sqrt (+ (* b b) (* c c))))\n    \
    \         (= b (sqrt (+ (* a a) (* c c))))\n             (= c (sqrt (+ (* a a)\
    \ (* b b)))))\n          (and (> a 0) (> b 0) (> c 0))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (and (<= a b) (<= b c))\n          (or (= (+ (* a a) (* b b))\
    \ (* c c))\n              (= (+ (* a a) (* c c)) (* b b))\n              (= (+\
    \ (* b b) (* c c)) (* a a))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (> a 0) (> b 0) (> c 0))\n     (let ([max (max a b c)])\n       (cond\n    \
    \     [(= max a) (= (+ (* b b) (* c c)) (* a a))]\n         [(= max b) (= (+ (*\
    \ a a) (* c c)) (* b b))]\n         [(= max c) (= (+ (* a a) (* b b)) (* c c))]))]\n\
    \    [else #f]))\n", "  (define (square x) (* x x))\n  (define (is-right-angle-triangle\
    \ a b c)\n    (and (or (= (square a) (+ (square b) (square c)))\n            \
    \ (= (square b) (+ (square a) (square c)))\n             (= (square c) (+ (square\
    \ a) (square b))))\n         (and (> a 0) (> b 0) (> c 0))))\n  (is-right-angle-triangle\
    \ a b c))\n", "  (and (>= a b c)\n       (= (expt a 2)\n          (+ (expt b 2)\n\
    \             (expt c 2)))))\n", "  (if (and (<= a b c)\n           (<= (+ a b)\
    \ c))\n      #f\n      (if (and (<= a b c)\n               (<= (+ a c) b))\n \
    \         #f\n          (if (and (<= a b c)\n                   (<= (+ b c) a))\n\
    \              #f\n              (if (and (<= a b c)\n                       (<=\
    \ (+ a b) c)\n                       (<= (+ a c) b)\n                       (<=\
    \ (+ b c) a))\n                  #t\n                  #f)))))\n", "  (cond\n\
    \    [(and (= a (sqrt (+ (* b b) (* c c))))\n          (= b (sqrt (+ (* a a) (*\
    \ c c))))\n          (= c (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n          (= (square\
    \ b) (+ (square a) (square c)))\n          (= (square c) (+ (square a) (square\
    \ b))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (> a 0) (> b 0) (>\
    \ c 0))\n     (cond\n       [(= (expt a 2) (+ (expt b 2) (expt c 2))) #t]\n  \
    \     [(= (expt b 2) (+ (expt a 2) (expt c 2))) #t]\n       [(= (expt c 2) (+\
    \ (expt a 2) (expt b 2))) #t]\n       [else #f])]\n    [else #f]))\n", "  (and\n\
    \   (and (<= a (+ b c)) (>= a (- b c)))\n   (and (<= b (+ a c)) (>= b (- a c)))\n\
    \   (and (<= c (+ a b)) (>= c (- a b)))\n   (or\n    (and (= a (sqrt (+ (sqr b)\
    \ (sqr c))))\n         (= b (sqrt (+ (sqr a) (sqr c))))\n         (= c (sqrt (+\
    \ (sqr a) (sqr b)))))\n    (and (= a (sqrt (+ (sqr b) (sqr c))))\n         (=\
    \ b (sqrt (+ (sqr a) (sqr c))))\n         (= c (sqrt (+ (sqr a) (sqr b)))))\n\
    \    (and (= a (sqrt (+ (sqr b) (sqr c))))\n         (= b (sqrt (+ (sqr a) (sqr\
    \ c))))\n         (= c (sqrt (+ (sqr a) (sqr b)))))\n    )))\n", "  (cond\n  \
    \  [(and (= (square a) (+ (square b) (square c)))\n          (= (square b) (+\
    \ (square a) (square c)))\n          (= (square c) (+ (square a) (square b))))\n\
    \     #t]\n    [else #f]))\n", "  (let ([a2 (square a)]\n        [b2 (square b)]\n\
    \        [c2 (square c)])\n    (or (and (= a2 (+ b2 c2)) (= a b))\n        (and\
    \ (= b2 (+ a2 c2)) (= b c))\n        (and (= c2 (+ a2 b2)) (= a c)))))\n", " \
    \ (and (>= a b c)\n       (= (+ (* a a) (* b b)) (* c c))))\n", "  (cond\n   \
    \ [(and (<= a b) (<= b c))\n     (and (<= (- c b) a) (<= (- b a) c))]\n    [(and\
    \ (<= a c) (<= c b))\n     (and (<= (- b c) a) (<= (- c a) b))]\n    [(and (<=\
    \ b a) (<= a c))\n     (and (<= (- c a) b) (<= (- a b) c))]\n    [(and (<= b c)\
    \ (<= c a))\n     (and (<= (- a c) b) (<= (- c b) a))]\n    [(and (<= c a) (<=\
    \ a b))\n     (and (<= (- b a) c) (<= (- a c) b))]\n    [(and (<= c b) (<= b a))\n\
    \     (and (<= (- a b) c) (<= (- b c) a))]))\n", "  (cond\n    [(and (= (expt\
    \ a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt\
    \ c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (>= a b) (>= a c))\n     (and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))]\n    [(and (>= b a) (>= b c))\n     (and (=\
    \ (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt a 2) (+ (expt b 2)\
    \ (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))]\n    [(and\
    \ (>= c a) (>= c b))\n     (and (= (expt c 2) (+ (expt a 2) (expt b 2)))\n   \
    \       (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt\
    \ a 2) (expt c 2))))]))\n", "  (and\n   (and (<= a b) (<= b c))\n   (and (<= (+\
    \ (* a a) (* b b)) (* c c))\n        (<= (* c c) (+ (* a a) (* b b))))))\n", " \
    \ (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a)\
    \ (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))))\n", "  (cond\n    [(and (= (square a)\
    \ (+ (square b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n\
    \          (= (square c) (+ (square a) (square b))))\n     #t]\n    [else #f]))\n",
  "  (cond\n    [(and (= (sqr a) (+ (sqr b) (sqr c)))\n          (= (sqr b) (+ (sqr\
    \ a) (sqr c)))\n          (= (sqr c) (+ (sqr a) (sqr b))))\n     #t]\n    [else\
    \ #f]))\n", "  (cond\n    [(and (> a 0) (> b 0) (> c 0))\n     (and (= (expt a\
    \ 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c\
    \ 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and\
    \ (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c\
    \ c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n\
    \    [(and (> a 0) (> b 0) (> c 0))\n     (and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (or (= (expt a 2) (+ (expt b 2) (expt c 2)))\n           \
    \   (= (expt b 2) (+ (expt a 2) (expt c 2)))\n              (= (expt c 2) (+ (expt\
    \ a 2) (expt b 2)))))\n     ]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (*\
    \ b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (=\
    \ c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (or (= a\
    \ (sqrt (+ (* b b) (* c c))))\n             (= b (sqrt (+ (* a a) (* c c))))\n\
    \             (= c (sqrt (+ (* a a) (* b b)))))\n          (and (> a 0) (> b 0)\
    \ (> c 0))) #t]\n    [else #f]))\n", "  (cond\n    [(and (= (square a) (+ (square\
    \ b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n      \
    \    (= (square c) (+ (square a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\n\
    \     #t]\n    [else #f]))\n", "  (cond\n    [(and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n             (= b (sqrt (+ (* a a) (* c c))))\n             (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n          (and (> a 0) (> b 0) (> c 0))) #t]\n    [else\
    \ #f]))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square c))) (= (square\
    \ b) (+ (square a) (square c))) (= (square c) (+ (square a) (square b)))) #t]\n\
    \    [else #f]))\n", "  (cond\n    [(= a (sqrt (+ (square b) (square c)))) #t]\n\
    \    [(= b (sqrt (+ (square a) (square c)))) #t]\n    [(= c (sqrt (+ (square a)\
    \ (square b)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       (or (= a (sqrt (+ (* b b) (* c c))))\n      \
    \     (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b\
    \ b)))))))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt\
    \ (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n      \
    \ #t))\n", "  (cond\n    [(and (= (sqr a) (+ (sqr b) (sqr c)))\n          (= (sqr\
    \ b) (+ (sqr a) (sqr c)))\n          (= (sqr c) (+ (sqr a) (sqr b)))) #t]\n  \
    \  [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (=\
    \ b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (* c c))))\n      \
    \    (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+ (* a a) (* b b)))))\
    \ #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n    \
    \       (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (*\
    \ b b)))))\n       #t))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square\
    \ c))) (= (square b) (+ (square a) (square c))) (= (square c) (+ (square a) (square\
    \ b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (= (sqr a) (+ (sqr b) (sqr\
    \ c)))\n          (= (sqr b) (+ (sqr a) (sqr c)))\n          (= (sqr c) (+ (sqr\
    \ a) (sqr b)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (>= a b) (>= a c))\
    \ (and (= (expt a 2) (+ (expt b 2) (expt c 2))) #t)]\n    [(and (>= b a) (>= b\
    \ c)) (and (= (expt b 2) (+ (expt a 2) (expt c 2))) #t)]\n    [(and (>= c a) (>=\
    \ c b)) (and (= (expt c 2) (+ (expt a 2) (expt b 2))) #t)]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n\
    \    [(and (= a (sqrt (+ (* b b) (* c c))))\n          (= b (sqrt (+ (* a a) (*\
    \ c c))))\n          (= c (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n",
  "  (and (<= a b c)\n       (= (expt a 2) (+ (expt b 2) (expt c 2)))))\n", "  (cond\n\
    \    [(and (>= a b) (>= a c)) (and (= (expt a 2) (+ (expt b 2) (expt c 2))) #t)]\n\
    \    [(and (>= b a) (>= b c)) (and (= (expt b 2) (+ (expt a 2) (expt c 2))) #t)]\n\
    \    [(and (>= c a) (>= c b)) (and (= (expt c 2) (+ (expt a 2) (expt b 2))) #t)]\n\
    \    [else #f]))\n", "  (and (>= a b c)\n       (= (expt a 2)\n          (+ (expt\
    \ b 2)\n             (expt c 2)))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt\
    \ b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n    \
    \      (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (= a (sqrt (+ (* b b) (* c c))))\n          (= b (sqrt (+ (* a a) (*\
    \ c c))))\n          (= c (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (>= a b) (>= a c)) (and (= (+ (* b b) (* c c)) (* a a)) #t)]\n\
    \    [(and (>= b a) (>= b c)) (and (= (+ (* a a) (* c c)) (* b b)) #t)]\n    [(and\
    \ (>= c a) (>= c b)) (and (= (+ (* a a) (* b b)) (* c c)) #t)]\n    [else #f]))\n",
  "  (cond\n    [(and (> a 0) (> b 0) (> c 0))\n     (cond\n       [(and (= (expt\
    \ a 2) (+ (expt b 2) (expt c 2)))\n             (= a b))\n        #t]\n      \
    \ [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n             (= a c))\n    \
    \    #t]\n       [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n            \
    \ (= b c))\n        #t]\n       [else\n        #f])]\n    [else\n     #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and\
    \ (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c\
    \ c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       (and (> a 0) (>\
    \ b 0) (> c 0))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt c\
    \ 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (> a 0) (> b 0) (> c 0))\n     (let ([sides (list a b c)])\n       (define (is-right-angle?\
    \ sides)\n         (let ([sorted-sides (sort sides <)])\n           (define (square\
    \ x) (* x x))\n           (define (sum-of-squares sides)\n             (cond\n\
    \               [(null? sides) 0]\n               [else (+ (square (car sides))\
    \ (sum-of-squares (cdr sides)))]))\n           (= (square (car sorted-sides))\
    \ (sum-of-squares (cdr sorted-sides)))))\n       (is-right-angle? sides))]\n \
    \   [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (=\
    \ b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a)\
    \ (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))))\n", "  (cond\n  \
    \  [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(and (and (&lt; a b) (&lt; a c))\n \
    \         (and (&lt; (+ (* a a) (* b b)) (* c c))\n               (&gt; (+ (*\
    \ a a) (* b b)) (* c c))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and\
    \ (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a\
    \ 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n \
    \   [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (=\
    \ b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (* c c))))\n      \
    \    (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+ (* a a) (* b b)))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n", "  (cond\n \
    \   [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (=\
    \ (square a) (+ (square b) (square c)))\n          (= (square b) (+ (square a)\
    \ (square c)))\n          (= (square c) (+ (square a) (square b))))\n     #t]\n\
    \    [else #f]))\n", "  (cond\n    [(and (= (sqr a) (+ (sqr b) (sqr c)))\n   \
    \       (= (sqr b) (+ (sqr a) (sqr c)))\n          (= (sqr c) (+ (sqr a) (sqr\
    \ b))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (= (square a) (+ (square\
    \ b) (square c))) (= (square b) (+ (square a) (square c))) (= (square c) (+ (square\
    \ a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (<= a b) (<= b\
    \ c)) (and (= (+ (* a a) (* b b)) (* c c)) #t)]\n    [(and (<= a c) (<= c b))\
    \ (and (= (+ (* a a) (* c c)) (* b b)) #t)]\n    [(and (<= b a) (<= a c)) (and\
    \ (= (+ (* b b) (* a a)) (* c c)) #t)]\n    [(and (<= b c) (<= c a)) (and (= (+\
    \ (* b b) (* c c)) (* a a)) #t)]\n    [(and (<= c a) (<= a b)) (and (= (+ (* c\
    \ c) (* a a)) (* b b)) #t)]\n    [(and (<= c b) (<= b a)) (and (= (+ (* c c) (*\
    \ b b)) (* a a)) #t)]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       (and (or (= a b) (= a c) (= b c)))))\n", "  (cond\n\
    \    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\
    \ #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n    \
    \       (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (*\
    \ b b)))))\n       #t))\n", "  (and (and (< a (+ b c))\n            (< b (+ a\
    \ c))\n            (< c (+ a b)))\n       (or (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n           (= (expt b 2) (+ (expt a 2) (expt c 2)))\n           (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))))\n", "  (and (or (= a (sqrt (+ (* b b) (*\
    \ c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt\
    \ (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (square a) (+\
    \ (square b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n\
    \          (= (square c) (+ (square a) (square b)))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (>= a b) (>= a c)) (and (= (+ (* b b) (* c c)) (* a a)) #t)]\n\
    \    [(and (>= b a) (>= b c)) (and (= (+ (* a a) (* c c)) (* b b)) #t)]\n    [(and\
    \ (>= c a) (>= c b)) (and (= (+ (* a a) (* b b)) (* c c)) #t)]\n    [else #f]))\n",
  "  (cond\n    [(and (>= a b) (>= a c))\n     (and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))]\n    [(and (>= b a) (>= b c))\n     (and (=\
    \ (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt a 2) (+ (expt b 2)\
    \ (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))]\n    [(and\
    \ (>= c a) (>= c b))\n     (and (= (expt c 2) (+ (expt a 2) (expt b 2)))\n   \
    \       (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt\
    \ a 2) (expt c 2))))]))\n", "  (cond\n    [(and (and (< a b) (< a c))\n      \
    \    (and (< (+ (* a a) (* b b)) (* c c))\n               (< (+ (* a a) (* c c))\
    \ (* b b))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (= (square a)\
    \ (+ (square b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n\
    \          (= (square c) (+ (square a) (square b))))\n     #t]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n\
    \    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))\
    \ #t]\n    [else #f]))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (and (and (<= a\
    \ b) (<= b c))\n       (or (= (expt a 2) (+ (expt b 2) (expt c 2)))\n        \
    \   (= (expt b 2) (+ (expt a 2) (expt c 2)))\n           (= (expt c 2) (+ (expt\
    \ a 2) (expt b 2))))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n", "  (and (or\
    \ (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n\
    \           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (=\
    \ a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n\
    \           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and\
    \ (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a\
    \ 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2)))) #t]\n \
    \   [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (=\
    \ b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n\
    \          (= (square b) (+ (square a) (square c)))\n          (= (square c) (+\
    \ (square a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (or (=\
    \ a (sqrt (+ (* b b) (* c c))))\n             (= b (sqrt (+ (* a a) (* c c))))\n\
    \             (= c (sqrt (+ (* a a) (* b b)))))\n          (and (<= a b) (<= b\
    \ c)))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (and (<= a b) (<= b\
    \ c))\n          (and (<= a (+ b c)) (<= b (+ a c)) (<= c (+ a b))))\n     #t]\n\
    \    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n          \
    \ (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n\
    \       #t))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n\
    \          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+\
    \ (expt a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (and (or (= a (sqrt (+\
    \ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n          \
    \ (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (square\
    \ a) (+ (square b) (square c)))\n          (= (square b) (+ (square a) (square\
    \ c)))\n          (= (square c) (+ (square a) (square b))))\n     #t]\n    [else\
    \ #f]))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n   \
    \       (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt\
    \ a 2) (expt b 2)))) #t]\n    [else #f]))\n", "  (cond\n    [(and (> a 0) (> b\
    \ 0) (> c 0))\n     (and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (=\
    \ (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2)\
    \ (expt b 2))))]\n    [else #f]))\n", "  (cond\n    [(and (= (square a) (+ (square\
    \ b) (square c)))\n          (= (square b) (+ (square a) (square c)))\n      \
    \    (= (square c) (+ (square a) (square b)))) #t]\n    [else #f]))\n", "  (cond\n\
    \    [(and (= (square a) (+ (square b) (square c)))\n          (= (square b) (+\
    \ (square a) (square c)))\n          (= (square c) (+ (square a) (square b))))\n\
    \     #t]\n    [else #f]))\n", "  (cond\n    [(= a (sqrt (+ (sqr b) (sqr c))))\
    \ #t]\n    [(= b (sqrt (+ (sqr a) (sqr c)))) #t]\n    [(= c (sqrt (+ (sqr a) (sqr\
    \ b)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n\
    \           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a)\
    \ (* b b)))))\n       #t))\n", "  (cond\n    [(and (= (square a) (+ (square b)\
    \ (square c)))\n          (= (square b) (+ (square a) (square c)))\n         \
    \ (= (square c) (+ (square a) (square b))))\n     #t]\n    [else #f]))\n", " \
    \ (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a)\
    \ (* c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", " \
    \ (cond\n    [(and (= (square a) (+ (square b) (square c)))\n          (= (square\
    \ b) (+ (square a) (square c)))\n          (= (square c) (+ (square a) (square\
    \ b))))\n     #t]\n    [else #f]))\n", "  (cond\n    [(and (= a (sqrt (+ (* b\
    \ b) (* c c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt\
    \ (+ (* a a) (* b b))))) #t]\n    [else #f]))\n", "  (cond\n    [(and (= a (sqrt\
    \ (+ (* b b) (* c c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n        \
    \  (= c (sqrt (+ (* a a) (* b b))))) #t]\n    [else #f]))\n", "  (let ([max (max\
    \ a b c)])\n    (and (= (sqr max) (+ (sqr a) (sqr b) (sqr c)))\n         (or (=\
    \ max a) (= max b) (= max c)))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt\
    \ b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n    \
    \      (= (expt c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n",
  "  (and\n   (or (= a (sqrt (+ (* b b) (* c c))))\n       (= b (sqrt (+ (* a a) (*\
    \ c c))))\n       (= c (sqrt (+ (* a a) (* b b)))))\n   (and\n    (> a 0)\n  \
    \  (> b 0)\n    (> c 0))))\n", "  (cond\n    [(and (= a (sqrt (+ (* b b) (* c\
    \ c))))\n          (= b (sqrt (+ (* a a) (* c c))))\n          (= c (sqrt (+ (*\
    \ a a) (* b b))))) #t]\n    [else #f]))\n", "  (and (<= a b c)\n       (= (expt\
    \ a 2) (+ (expt b 2) (expt c 2)))))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt\
    \ b 2) (expt c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n    \
    \      (= (expt c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n",
  "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (*\
    \ c c))))\n           (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n", "  (if\
    \ (and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n           (= (expt b 2) (+ (expt\
    \ a 2) (expt c 2)))\n           (= (expt c 2) (+ (expt a 2) (expt b 2))))\n  \
    \    #t\n      #f))\n", "  (cond\n    [(and (= (expt a 2) (+ (expt b 2) (expt\
    \ c 2)))\n          (= (expt b 2) (+ (expt a 2) (expt c 2)))\n          (= (expt\
    \ c 2) (+ (expt a 2) (expt b 2))))\n     #t]\n    [else #f]))\n", "  (cond\n \
    \   [(and (= (square a) (+ (square b) (square c))) (= (square b) (+ (square a)\
    \ (square c))) (= (square c) (+ (square a) (square b)))) #t]\n    [else #f]))\n",
  "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n          (= (square\
    \ b) (+ (square a) (square c)))\n          (= (square c) (+ (square a) (square\
    \ b)))) #t]\n    [else #f]))\n", "  (and (or (= a (sqrt (+ (* b b) (* c c))))\n\
    \           (= b (sqrt (+ (* a a) (* c c))))\n           (= c (sqrt (+ (* a a)\
    \ (* b b)))))\n       #t))\n", "  (cond\n    [(and (> a 0) (> b 0) (> c 0))\n\
    \     (and (= (expt a 2) (+ (expt b 2) (expt c 2)))\n          (= (expt b 2) (+\
    \ (expt a 2) (expt c 2)))\n          (= (expt c 2) (+ (expt a 2) (expt b 2))))]\n\
    \    [else #f]))\n", "  (cond\n    [(and (= (square a) (+ (square b) (square c)))\n\
    \          (= (square b) (+ (square a) (square c)))\n          (= (square c) (+\
    \ (square a) (square b))))\n     #t]\n    [else #f]))\n", "  (and (or (= a (sqrt\
    \ (+ (* b b) (* c c))))\n           (= b (sqrt (+ (* a a) (* c c))))\n       \
    \    (= c (sqrt (+ (* a a) (* b b)))))\n       #t))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

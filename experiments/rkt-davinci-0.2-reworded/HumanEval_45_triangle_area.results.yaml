name: HumanEval_45_triangle_area
language: rkt
results:
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (/ (* a h)\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmplxvs1w1f.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmplxvs1w1f.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmplxvs1w1f.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3hts8h6w.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3hts8h6w.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp3hts8h6w.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpi2ui7cwg.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpi2ui7cwg.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpi2ui7cwg.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmths5wg2.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmths5wg2.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpmths5wg2.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (/ (* a h)\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg60nmk8r.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg60nmk8r.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpg60nmk8r.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_tzwsm5y.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_tzwsm5y.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp_tzwsm5y.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_k15ppk6.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_k15ppk6.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp_k15ppk6.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (/ (* a h)\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsn_3faqy.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpsn_3faqy.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpsn_3faqy.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (/ (* a h)\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkzd_vi7p.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpkzd_vi7p.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpkzd_vi7p.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5zwugbtd.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp5zwugbtd.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp5zwugbtd.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg08vync2.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpg08vync2.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpg08vync2.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp__hagggs.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp__hagggs.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp__hagggs.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbzo44a62.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpbzo44a62.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpbzo44a62.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxx199o6y.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxx199o6y.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpxx199o6y.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf916k7mu.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpf916k7mu.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpf916k7mu.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3x0l0x9j.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3x0l0x9j.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp3x0l0x9j.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpq83zdk7z.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpq83zdk7z.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpq83zdk7z.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_oju83sm.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmp_oju83sm.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmp_oju83sm.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (* (/ a 2)\
    \ h))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmyqhxref.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpmyqhxref.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpmyqhxref.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception
- program: "#lang racket\n\n;; Given length of a side and high return area for a triangle.\n\
    ;; >>> (triangle_area 5 3)\n;; 7.5\n(define (triangle_area a h)\n  (/ (* a h)\
    \ 2))\n\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate\
    \ triangle_area))\n    (check-equal? (candidate 5 3) 7.5)\n    (check-equal? (candidate\
    \ 2 2) 2.0)\n    (check-equal? (candidate 10 8) 40.0)\n))\n\n(test-humaneval)"
  stdout: ''
  stderr: "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxk38jsnf.rkt:14:4\n\
    actual:     15/2\nexpected:   7.5\n--------------------\n--------------------\n\
    FAILURE\nname:       check-equal?\nlocation:   /tmp/tmpxk38jsnf.rkt:15:4\nactual:\
    \     2\nexpected:   2.0\n--------------------\n--------------------\nFAILURE\n\
    name:       check-equal?\nlocation:   /tmp/tmpxk38jsnf.rkt:16:4\nactual:     40\n\
    expected:   40.0\n--------------------\n"
  exit_code: 0
  status: Exception

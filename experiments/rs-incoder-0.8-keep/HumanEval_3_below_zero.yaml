name: HumanEval_3_below_zero
language: rs
prompt: "/// You're given a list of deposit and withdrawal operations on a bank account\
  \ that starts with\n/// zero balance. Your task is to detect if at any point the\
  \ balance of account fallls below zero, and\n/// at that point function should return\
  \ True. Otherwise it should return False.\n/// >>> below_zero([1, 2, 3])\n/// False\n\
  /// >>> below_zero([1, 2, -4, 5])\n/// True\nfn below_zero(operations: Vec<isize>)\
  \ -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = below_zero;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ false);\n    assert_eq!(candidate(vec![1, 2, -3, 1, 2, -3]), false);\n    assert_eq!(candidate(vec![1,\
  \ 2, -4, 5, 6]), true);\n    assert_eq!(candidate(vec![1, -1, 2, -2, 5, -5, 4, -4]),\
  \ false);\n    assert_eq!(candidate(vec![1, -1, 2, -2, 5, -5, 4, -5]), true);\n\
  \    assert_eq!(candidate(vec![1, -2, 2, -2, 5, -5, 4, -4]), true);\n}\n"
completions: []
stop_tokens:
- "\n}"

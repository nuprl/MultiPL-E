{
  "name": "HumanEval_140_fix_spaces",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"--\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0gx0nqf.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7jb8iv5s.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nq8fwdy.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 0) {\n            if (sb.charAt(0) == ' ') {\n                sb.deleteCharAt(0);\n            }\n            if (sb.charAt(sb.length() - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n            }\n            if (sb.length() > 2) {\n                for (int i = 0; i < sb.length() - 2; i++) {\n                    if (sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                        sb.replace(i, i + 2, \"-\");\n                    }\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp12fhhj3g.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo48kzme.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"__\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3t9o60_.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        if(sb.length() > 2 && sb.charAt(sb.length() - 2) == ' ') {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw66g6mf_.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctwbmbso.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n                while (i < text.length() && text.charAt(i) == ' ') {\n                    sb.append('-');\n                    i++;\n                }\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpze3grjex.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ' && sb.charAt(i + 2) == ' ') {\n                    sb.replace(i, i + 3, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vwlx7sn.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        if (sb.length() > 2) {\n            for (int i = 0; i < sb.length() - 2; i++) {\n                if (sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblti548c.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n                while (i < text.length() && text.charAt(i) == ' ') {\n                    sb.append('-');\n                    i++;\n                }\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpze3grjex.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfo5eyiqb.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nq8fwdy.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 0 && sb.charAt(sb.length() - 1) == ' ') {\n            sb.deleteCharAt(sb.length() - 1);\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mx17xv9.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 0) {\n            if(sb.charAt(0) == ' ') {\n                sb.deleteCharAt(0);\n            }\n            if(sb.charAt(sb.length() - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n            }\n            if(sb.length() > 2) {\n                for(int i = 0; i < sb.length() - 2; i++) {\n                    if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                        sb.deleteCharAt(i);\n                    }\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_kd9z7yn.java:51)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wuauxi3.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" -\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30hj83jm.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_bu3t4g.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemmucfe.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2 && sb.charAt(sb.length() - 1) == ' ') {\n            sb.deleteCharAt(sb.length() - 1);\n            sb.append('-');\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmbb9kx4.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb8myecj.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" -\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30hj83jm.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiart7mnx.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb98_bnw7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7jb8iv5s.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8hmn4dc.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8hmn4dc.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11ekgzvm.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_22faxvo.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiart7mnx.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n                while (i < text.length() && text.charAt(i) == ' ') {\n                    sb.append('-');\n                    i++;\n                }\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpze3grjex.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemmucfe.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ') {\n                    sb.replace(i, i + 2, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuftjvovj.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtvbgrbz.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb98_bnw7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            for (int i = 0; i < sb.length() - 2; i++) {\n                if (sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ' && sb.charAt(i + 2) == ' ') {\n                    sb.replace(i, i + 3, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9zcr6mv.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        if(sb.length() > 2) {\n            for(int i = 0; i < sb.length() - 2; i++) {\n                if(sb.charAt(i) == ' ' && sb.charAt(i + 1) == ' ' && sb.charAt(i + 2) == ' ') {\n                    sb.replace(i, i + 3, \"-\");\n                }\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph60358zs.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0h0dmu7.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 0) {\n            if(sb.charAt(0) == ' ') {\n                sb.deleteCharAt(0);\n            }\n            if(sb.charAt(sb.length() - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n            }\n            if(sb.length() > 1 && sb.charAt(sb.length() - 2) == ' ') {\n                sb.deleteCharAt(sb.length() - 2);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczs_yu80.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            return sb.toString().replaceAll(\"( ){2,}\", \"_\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1d9q60r7.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        if(sb.length() > 2) {\n            while(sb.charAt(sb.length() - 1) == ' ') {\n                sb.deleteCharAt(sb.length() - 1);\n            }\n            while(sb.charAt(0) == ' ') {\n                sb.deleteCharAt(0);\n            }\n            sb.append('-');\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1fe_mql.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"__\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5r265_4.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(text.charAt(i));\n            }\n        }\n        if(sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"__\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4cavz_v.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_bu3t4g.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppx40ks9y.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wuauxi3.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8hmn4dc.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        if(sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq9lyc6u3.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n            i++;\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugi676kf.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctwbmbso.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppx40ks9y.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if(result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8hmn4dc.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \"-\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctwbmbso.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvnr8r2j.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiart7mnx.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4glzq_u.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" -\");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30hj83jm.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wuauxi3.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfuj5r8c.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_bu3t4g.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11ekgzvm.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"-\" + sb.substring(sb.length() - 2, sb.length()));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiart7mnx.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            if(text.charAt(i) == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518t10it.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        if (sb.length() > 2) {\n            sb.replace(sb.length() - 2, sb.length(), \"__\");\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgg6du68.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (i < text.length()) {\n            if (text.charAt(i) == ' ') {\n                sb.append('_');\n                i++;\n            } else {\n                sb.append(text.charAt(i));\n                i++;\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293349,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_bu3t4g.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if(c == ' ') {\n                sb.append('_');\n            }\n            else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wuauxi3.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        String result = sb.toString();\n        if (result.contains(\"  \")) {\n            result = result.replaceAll(\"  \", \" - \");\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvmp09hd.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string text, replace all spaces in it with underscores, \n    // and if a string has more than 2 consecutive spaces, \n    // then replace all consecutive spaces with - \n    // >>> fix_spaces(\" Example\")\n    // \"Example\"\n    // >>> fix_spaces(\" Example 1\")\n    // \"Example_1\"\n    // >>> fix_spaces(\" Example 2\")\n    // \"_Example_2\"\n    // >>> fix_spaces(\" Example 3\")\n    // \"_Example-3\"\n    public static String fixSpaces(String text) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (c == ' ') {\n                sb.append('_');\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n",
      "timestamp": 1664293348,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mhhvmo1.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
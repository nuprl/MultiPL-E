{
  "name": "HumanEval_73_smallest_change",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list arr of integers, find the minimum number of elements that\n    // need to be changed to make the array array list palindromic. A palindromic array array list is an array array list that\n    // is read the same backwards and forwards. In one change, you can change one element to any other element.\n    // For example:\n    // >>> smallest_change([1,2,3,5,4,7,9,6])\n    // 4\n    // >>> smallest_change([1, 2, 3, 4, 3, 2, 2])\n    // 1\n    // >>> smallest_change([1, 2, 3, 2, 1])\n    // 0\n    public static long smallestChange(ArrayList<Long> arr) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)5l, (long)4l, (long)7l, (long)9l, (long)6l)))) == (4l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)3l, (long)2l, (long)2l)))) == (1l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)2l)))) == (1l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)4l, (long)2l)))) == (1l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)2l, (long)1l)))) == (0l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)1l, (long)3l)))) == (0l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(smallestChange((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    }\n\n}\n",
  "completions": [
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long diff = arr.get(i) - arr.get(j);\n                    if (diff < 0) {\n                        diff = -diff;\n                    }\n                    if (diff < min) {\n                        min = diff;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            long sum = 0;\n            for(int j = 0; j < arr.size(); j++) {\n                sum += arr.get(j);\n            }\n            if(sum == 0) {\n                return 0;\n            }\n            if(sum < min) {\n                min = sum;\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) != min) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - (arr.get(i) - min) % diff);\n        }\n        return sum;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr < min) {\n                min = curr;\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr > max) {\n                max = curr;\n            }\n        }\n        long diff = max - min;\n        long min_change = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr == min) {\n                continue;\n            }\n            long max_change = diff;\n            for (int j = i + 1; j < arr.size(); j++) {\n                long curr_next = arr.get(j);\n                if (curr_next == curr) {\n                    continue;\n                }\n                long min_change_next = Math.min(Math.abs(curr_next - curr), Math.abs(curr_next - max));\n                max_change = Math.min(max_change, min_change_next);\n            }\n            min_change = Math.min(min_change, max_change);\n        }\n        return min_change;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if(curr < min) {\n                min = curr;\n            }\n        }\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if(curr > max) {\n                max = curr;\n            }\n        }\n        long diff = max - min;\n        long min_diff = diff;\n        for(int i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if(curr == min || curr == max) {\n                continue;\n            }\n            long diff_curr = max - curr;\n            if(diff_curr < min_diff) {\n                min_diff = diff_curr;\n            }\n        }\n        return min_diff;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i);\n        }\n        long diff2 = sum - max;\n        return Math.min(diff, diff2);",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i));\n        }\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - arr.get(i) % (max - min + 1) + min);\n        }\n        return sum;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr < min) {\n                min = curr;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) {\n                    diff = -diff;\n                }\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long diff = arr.get(i) - arr.get(j);\n                    if (diff < min) {\n                        min = diff;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return max - min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) diff *= -1;\n                if (diff < min) min = diff;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) diff = -diff;\n                if (diff < min) min = diff;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i+1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if(val < min) {\n                min = val;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long min_change = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp2 = arr.get(j);\n                if (temp2 == temp) {\n                    arr.set(i, temp2);\n                    arr.set(j, temp);\n                    min_change = Math.min(min_change, Math.abs(i - j));\n                    break;\n                }\n            }\n        }\n        return min_change;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i) - min;\n        }\n        return sum - diff;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long diff = arr.get(i) - arr.get(j);\n                    if (diff < min) {\n                        min = diff;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(isPalindrome(temp)) {\n                    min = Math.min(min, temp);\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().reduce((a, b) -> Math.min(a, b)).get();\n        long max = arr.stream().reduce((a, b) -> Math.max(a, b)).get();\n        long sum = arr.stream().reduce((a, b) -> a + b).get();\n        long diff = max - min;\n        long count = arr.stream().reduce((a, b) -> a + b).get();\n        long result = diff / count;\n        return result;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().reduce(Long::max).get();\n        long max = arr.stream().reduce(Long::min).get();\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - (arr.size() - i));\n        }\n        return sum - diff;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long sum = arr.get(i) + arr.get(j);\n                if(sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long sum = arr.stream().mapToLong(x -> x).sum();\n        long min_diff = Long.MAX_VALUE;\n        for(long i = min; i <= max; i++) {\n            long diff = arr.stream().filter(x -> x == i).count();\n            if(diff < min_diff) {\n                min_diff = diff;\n            }\n        }\n        return min_diff;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - (sum + diff));\n        }\n        return sum;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i == j) {\n                    continue;\n                }\n                long temp = arr.get(i) + arr.get(j);\n                if (arr.get(i) > arr.get(j)) {\n                    temp = arr.get(i) - arr.get(j);\n                }\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long result = arr.stream().mapToLong(x -> x - min).filter(x -> x > 0).min().getAsLong();\n        return result;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if(val < min) {\n                min = val;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) {\n                    diff = -diff;\n                }\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long diff = arr.get(i) - arr.get(i - 1);\n            if (diff < min) {\n                min = diff;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i+1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr < min) {\n                min = curr;\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr > max) {\n                max = curr;\n            }\n        }\n        long diff = max - min;\n        long min_change = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr == min) {\n                continue;\n            }\n            long max_change = diff;\n            for (int j = i + 1; j < arr.size(); j++) {\n                long curr_next = arr.get(j);\n                if (curr_next == curr) {\n                    continue;\n                }\n                long min_change_next = Math.min(Math.abs(curr - curr_next), Math.abs(curr_next - curr));\n                max_change = Math.min(max_change, min_change_next);\n            }\n            min_change = Math.min(min_change, max_change);\n        }\n        return min_change;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            long sum = 0;\n            for(int j = 0; j < arr.size(); j++) {\n                sum += arr.get(j);\n            }\n            if(sum < min) {\n                min = sum;\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) - min > diff) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(Long::longValue).min().getAsLong();\n        long max = arr.stream().mapToLong(Long::longValue).max().getAsLong();\n        long diff = max - min;\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if (val == min || val == max) {\n                continue;\n            }\n            long newVal = val + diff;\n            if (newVal < 0) {\n                newVal = 0;\n            }\n            arr.set(i, newVal);\n            count++;\n        }\n        return count;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i == j) {\n                    continue;\n                }\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i);\n        }\n        long min_change = diff / 2;\n        if (sum % diff != 0) {\n            min_change++;\n        }\n        long max_change = diff / 2;\n        if (sum % diff != 0) {\n            max_change++;\n        }\n        long min_change_sum = 0;\n        long max_change_sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < min_change) {\n                min_change_sum += arr.get(i);\n            }\n            if (arr.get(i) > max_change) {\n                max_change_sum += arr.get(i);\n            }\n        }\n        if (min_change_sum > max_change_sum) {\n            return min_change;\n        } else {\n            return max_change;\n        }",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if(val < min) {\n                count++;\n            } else if(val > max) {\n                count++;\n            } else {\n                count += diff;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i == j) {\n                    continue;\n                }\n                long diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - (sum + min));\n        }\n        return sum;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == arr.get(j) + arr.get(i)) {\n                    min = Math.min(min, arr.get(i) + arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().reduce(Long::max).get();\n        long max = arr.stream().reduce(Long::min).get();\n        long sum = arr.stream().reduce(0L, (a, b) -> a + b, (a, b) -> a + b);\n        long diff = max - min;\n        long min_diff = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp == sum) {\n                    return 0;\n                }\n                if (temp < sum) {\n                    continue;\n                }\n                if (temp > sum) {\n                    continue;\n                }\n                if (temp < min) {\n                    min = temp;\n                    min_diff = diff;\n                }\n                if (temp > max) {\n                    max = temp;\n                }\n                diff = max - min;\n            }\n        }\n        return min_diff;",
    "        long min = arr.get(0);\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        return max - min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(Long::longValue).min().getAsLong();\n        long max = arr.stream().mapToLong(Long::longValue).max().getAsLong();\n        long diff = max - min;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i) - min;\n        }\n        return sum - diff;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().reduce(Long::max).get();\n        long max = arr.stream().reduce(Long::min).get();\n        long diff = max - min;\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if (val < min) {\n                continue;\n            }\n            if (val > max) {\n                continue;\n            }\n            count++;\n            if (val - min < diff) {\n                diff = val - min;\n            }\n            if (max - val < diff) {\n                diff = max - val;\n            }\n        }\n        return count;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i-1));\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long sum = arr.stream().mapToLong(x -> x).sum();\n        long sum2 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum3 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum4 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum5 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum6 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum7 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum8 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum9 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum10 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum11 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum12 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum13 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).getAsLong();\n        long sum14 = arr.stream().mapToLong(x -> x).reduce((x, y) -> x + y).get",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long sum = arr.stream().mapToLong(x -> x).sum();\n        long diff = max - min;\n        long count = arr.size();\n        long result = 0;\n        while (diff > 0) {\n            diff /= 2;\n            result++;\n        }\n        return result;",
    "        long min = arr.stream().mapToLong(Long::longValue).min().getAsLong();\n        long max = arr.stream().mapToLong(Long::longValue).max().getAsLong();\n        long diff = max - min;\n        long count = 0;\n        for (long i = min; i <= max; i++) {\n            if (isPalindromic(arr, i)) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long sum = arr.get(i) + arr.get(j);\n                if(sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            long sum = 0;\n            for(int j = 0; j < arr.size(); j++) {\n                sum += arr.get(j);\n            }\n            if(sum == 0) {\n                min = 0;\n                break;\n            }\n            if(sum < min) {\n                min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i == j) {\n                    continue;\n                }\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long min_change = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp2 = arr.get(j);\n                    long temp3 = temp + temp2;\n                    if (temp3 == 0) {\n                        continue;\n                    }\n                    if (temp3 > max) {\n                        continue;\n                    }\n                    if (temp3 < min) {\n                        continue;\n                    }\n                    if (temp3 == temp) {\n                        continue;\n                    }\n                    if (temp3 < temp) {\n                        continue;\n                    }\n                    if (temp3 > temp) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n                    if (temp3 < temp2) {\n                        continue;\n                    }\n                    if (temp3 > temp2) {\n                        continue;\n                    }\n",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = arr.get(0);\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return max - min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i) - arr.get(i - 1));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long val = arr.get(i);\n            if (val < min) {\n                min = val;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) {\n                    diff = -diff;\n                }\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr < min) {\n                min = curr;\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr > max) {\n                max = curr;\n            }\n        }\n        long diff = max - min;\n        long min_change = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long next = arr.get((i + 1) % arr.size());\n            if (curr == next) {\n                continue;\n            }\n            long diff = Math.abs(curr - next);\n            if (diff < min_change) {\n                min_change = diff;\n            }\n        }\n        return min_change;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - max);\n        }\n        return sum - min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if(diff < 0) {\n                    diff = -diff;\n                }\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for(long i : arr) {\n            min = Math.min(min, i);\n            max = Math.max(max, i);\n        }\n        long sum = 0;\n        for(long i = min; i <= max; i++) {\n            sum += arr.contains(i) ? 0 : 1;\n        }\n        return sum;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long count = 0;\n        for(long i = min; i <= max; i++) {\n            if(isPalindromic(arr, i)) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, arr.get(i) - arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp2 = arr.get(j);\n                if(temp == temp2) {\n                    min = Math.min(min, j - i);\n                    break;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i));\n            max = Math.max(max, arr.get(i));\n        }\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i) - min;\n        }\n        if (sum % 2 == 0) {\n            return 0;\n        }\n        long half = sum / 2;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) - min >= half) {\n                return half;\n            }\n        }\n        return sum;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(isPalindromic(arr, i, j)) {\n                    min = Math.min(min, temp);\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) != min) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < 0) {\n                    diff = -diff;\n                }\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i));\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - max);\n        }\n        return sum + Math.abs(max - min);",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long min_diff = diff;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n                if (temp > max) {\n                    max = temp;\n                }\n                if (temp < min_diff) {\n                    min_diff = temp;\n                }\n            }\n        }\n        return min_diff;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i+1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (arr.get(i) != arr.get(j)) {\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if(temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            if(temp < min) {\n                min = temp;\n            }\n        }\n        long min_change = arr.size() - 1;\n        for(int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            if(temp != min) {\n                arr.set(i, temp + min);\n                min_change = Math.min(min_change, i);\n                arr.set(i, temp);\n            }\n        }\n        return min_change;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long diff = arr.get(i) - arr.get(j);\n                if (diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == arr.get(j) + arr.get(i)) {\n                    min = Math.min(min, arr.get(i) + arr.get(j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (arr.get(i) > arr.get(j)) {\n                    temp = arr.get(i) - arr.get(j);\n                }\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        return min;",
    "        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) != min) {\n                count++;\n            }\n        }\n        return count;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            long sum = 0;\n            for(int j = 0; j < arr.size(); j++) {\n                sum += arr.get(j);\n            }\n            min = Math.min(min, sum);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i+1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if(temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j) {\n                    long temp = arr.get(i) + arr.get(j);\n                    if (temp < min) {\n                        min = temp;\n                    }\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            min = Math.min(min, arr.get(i));\n            max = Math.max(max, arr.get(i));\n        }\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += Math.abs(arr.get(i) - (max + min));\n        }\n        return sum;",
    "        long min = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < min) {\n                min = arr.get(i);\n            }\n        }\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        long diff = max - min;\n        long min_change = diff + 1;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) + arr.get(j) == arr.get(j) + arr.get(i)) {\n                    if(arr.get(i) + arr.get(j) < arr.get(j) + arr.get(i)) {\n                        min_change = Math.min(min_change, arr.get(i) + arr.get(j) - arr.get(j) - arr.get(i));\n                    }\n                }\n            }\n        }\n        return min_change;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(i - j));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    min = Math.min(min, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp < min) {\n                    min = temp;\n                }\n            }\n        }\n        return min;",
    "        long min = arr.stream().mapToLong(x -> x).min().getAsLong();\n        long max = arr.stream().mapToLong(x -> x).max().getAsLong();\n        long diff = max - min;\n        long min_change = diff + 1;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long temp = arr.get(i) + arr.get(j);\n                if (temp == arr.get(i) * 2) {\n                    arr.set(i, temp);\n                    arr.set(j, temp);\n                    min_change = Math.min(min_change, Math.abs(arr.get(i) - arr.get(j)));\n                }\n            }\n        }\n        return min_change;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
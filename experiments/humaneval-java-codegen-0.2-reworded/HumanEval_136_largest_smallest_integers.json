{
  "name": "HumanEval_136_largest_smallest_integers",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Create a function that returns a pair (a, b), where 'a' is\n    // the largest of negative integers, and 'b' is the smallest\n    // of positive integers in an array array list.\n    // If there is no negative or positive integers, return them as null.\n    // Examples:\n    // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7]) \n    // (None, 1)\n    // >>> largest_smallest_integers([]) \n    // (None, None)\n    // >>> largest_smallest_integers([0]) \n    // (None, None)\n    public static Pair<Optional<Long>, Optional<Long>> largestSmallestIntegers(ArrayList<Long> lst) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l, (long)5l, (long)7l)))).equals(Pair.with(Optional.of(Optional.empty()), Optional.of(1l))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l, (long)5l, (long)7l, (long)0l)))).equals(Pair.with(Optional.of(Optional.empty()), Optional.of(1l))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)4l, (long)5l, (long)6l, (long)-2l)))).equals(Pair.with(-2l, 1l)));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)3l, (long)6l, (long)2l, (long)7l, (long)-7l)))).equals(Pair.with(-7l, 2l)));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)7l, (long)3l, (long)8l, (long)4l, (long)9l, (long)2l, (long)5l, (long)-9l)))).equals(Pair.with(-9l, 2l)));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList()))).equals(Pair.with(Optional.of(Optional.empty()), Optional.of(Optional.empty()))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)0l)))).equals(Pair.with(Optional.of(Optional.empty()), Optional.of(Optional.empty()))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)-5l, (long)-6l)))).equals(Pair.with(Optional.of(-1l), Optional.of(Optional.empty()))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)-5l, (long)-6l, (long)0l)))).equals(Pair.with(Optional.of(-1l), Optional.of(Optional.empty()))));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)-6l, (long)-4l, (long)-4l, (long)-3l, (long)1l)))).equals(Pair.with(-3l, 1l)));\n    assert(largestSmallestIntegers((new ArrayList<Long>(Arrays.asList((long)-6l, (long)-4l, (long)-4l, (long)-3l, (long)-100l, (long)1l)))).equals(Pair.with(-3l, 1l)));\n    }\n\n}\n",
  "completions": [
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        if (min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min > 0 && max < 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min < 0 && max < 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min > 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = lst.get(0);\n        long min = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        return null;",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = null;\n        Long max = null;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (min == null || i < min) {\n                    min = i;\n                }\n            } else if (i > 0) {\n                if (max == null || i > max) {\n                    max = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = lst.stream().max(Long::compare).get();\n        Long min = lst.stream().min(Long::compare).get();\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = lst.get(0);\n        long min = lst.get(0);\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        if (min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min < 0) {\n            return new Pair<>(Optional.empty(), Optional.of(max));\n        }\n        if (max > 0) {\n            return new Pair<>(Optional.of(min), Optional.empty());\n        }\n        return new Pair<>(Optional.of(min), Optional.of(max));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(long i : lst) {\n            if(i > max) {\n                max = i;\n            }\n            if(i < min) {\n                min = i;\n            }\n        }\n        if(max == Long.MIN_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                min = Math.min(i, min);\n            } else {\n                max = Math.max(i, max);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if(lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = lst.stream().max(Long::compare).orElse(0L);\n        Long min = lst.stream().min(Long::compare).orElse(0L);\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compareTo).get();\n        Long max = lst.stream().max(Long::compareTo).get();\n        if(min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if(min > 0) {\n            return new Pair<>(Optional.of(max), Optional.empty());\n        }\n        return new Pair<>(Optional.empty(), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) return new Pair<>(Optional.empty(), Optional.empty());\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(long i : lst) {\n            if(i < 0) {\n                if(i > max) max = i;\n            } else {\n                if(i < min) min = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long num : lst) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for(Long i : lst) {\n            if(i < min) {\n                min = i;\n            }\n            if(i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(i > max) {\n                    max = i;\n                }\n            } else if(i > 0) {\n                if(i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));\n        }",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        if (max < 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.of(-max));\n        } else if (min > 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.of(min), Optional.empty());\n        } else {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(i > max) {\n                    max = i;\n                }\n            } else {\n                if(i < min) {\n                    min = i;\n                }\n            }\n        }\n        if(max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else if (min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(i > max) {\n                    max = i;\n                }\n            }\n            if(i > 0) {\n                if(i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = null;\n        Long max = null;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (min == null) {\n                    min = i;\n                } else {\n                    min = Math.min(min, i);\n                }\n            } else if (i > 0) {\n                if (max == null) {\n                    max = i;\n                } else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return new Pair<>(Optional.ofNullable(min), Optional.ofNullable(max));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        long max = 0, min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            }\n            if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compareTo).get();\n        Long max = lst.stream().max(Long::compareTo).get();\n        if (min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min < 0) {\n            return new Pair<>(Optional.empty(), Optional.of(max));\n        }\n        if (max > 0) {\n            return new Pair<>(Optional.of(min), Optional.empty());\n        }\n        return new Pair<>(Optional.of(min), Optional.of(max));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = Long.MAX_VALUE;\n        Long max = Long.MIN_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                min = Math.min(min, i);\n            }\n            if (i > 0) {\n                max = Math.max(max, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        Long min = null, max = null;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (min == null) {\n                    min = i;\n                } else {\n                    min = Math.min(min, i);\n                }\n            } else if (i > 0) {\n                if (max == null) {\n                    max = i;\n                } else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.ofNullable(min), Optional.ofNullable(max));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        if (min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min < 0) {\n            return new Pair<>(Optional.empty(), Optional.of(max));\n        }\n        if (max > 0) {\n            return new Pair<>(Optional.of(min), Optional.empty());\n        }\n        return new Pair<>(Optional.of(min), Optional.of(max));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        if(min < 0 && max > 0) return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = 0;\n        long min = 0;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        \n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                max = Math.max(max, i);\n            }\n            if(i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        \n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if(lst.isEmpty()) return new Pair<>(Optional.empty(), Optional.empty());\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for(Long i : lst) {\n            if(i < min) min = i;\n            if(i > max) max = i;\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = null, max = null;\n        for (Long i : lst) {\n            if (min == null || i < min) {\n                min = i;\n            }\n            if (max == null || i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        return null;",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        Long min = null;\n        Long max = null;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (min == null || i < min) {\n                    min = i;\n                }\n            } else {\n                if (max == null || i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == null && max == null) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else if (min == null) {\n            return new Pair<>(Optional.empty(), Optional.of(max));\n        } else if (max == null) {\n            return new Pair<>(Optional.of(min), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(min), Optional.of(max));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(i > max) {\n                    max = i;\n                }\n            } else {\n                if(i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            }\n            if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(i > max) {\n                    max = i;\n                }\n            } else {\n                if(i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = lst.stream().max(Long::compare).get();\n        long min = lst.stream().min(Long::compare).get();\n        if (max < 0 && min > 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        } else if (max < 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.of(min));\n        } else if (min > 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.empty());\n        } else {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compareTo).get();\n        Long max = lst.stream().max(Long::compareTo).get();\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compare).get();\n        Long max = lst.stream().max(Long::compare).get();\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long max = lst.stream().max(Long::compareTo).orElse(0L);\n        Long min = lst.stream().min(Long::compareTo).orElse(0L);\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = null;\n        Long max = null;\n        for (Long i : lst) {\n            if (min == null || i < min) {\n                min = i;\n            }\n            if (max == null || i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if(lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for(Long i : lst) {\n            if(i < 0) {\n                max = Math.max(i, max);\n            }\n            if(i > 0) {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else if (i > 0) {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(i, max);\n            } else {\n                min = Math.min(i, min);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        Long min = null;\n        Long max = null;\n        for(Long i : lst) {\n            if(i < 0) {\n                if(min == null) {\n                    min = i;\n                } else {\n                    min = Math.min(min, i);\n                }\n            } else if(i > 0) {\n                if(max == null) {\n                    max = i;\n                } else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return new Pair<>(Optional.ofNullable(min), Optional.ofNullable(max));",
    "        if(lst.size() == 0) return new Pair<>(Optional.empty(), Optional.empty());\n        Long min = lst.get(0), max = lst.get(0);\n        for(Long i : lst) {\n            if(i < min) min = i;\n            if(i > max) max = i;\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE && min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = null;\n        Long max = null;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (min == null) {\n                    min = i;\n                } else {\n                    min = Math.min(min, i);\n                }\n            } else if (i > 0) {\n                if (max == null) {\n                    max = i;\n                } else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        return null;",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        return null;",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.stream().min(Long::compareTo).get();\n        Long max = lst.stream().max(Long::compareTo).get();\n        if (min < 0 && max > 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        if (min < 0) {\n            return new Pair<>(Optional.empty(), Optional.of(max));\n        }\n        if (max > 0) {\n            return new Pair<>(Optional.of(min), Optional.empty());\n        }\n        return new Pair<>(Optional.of(min), Optional.of(max));",
    "        if (lst.size() == 0) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));",
    "        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<>(Optional.ofNullable(max), Optional.ofNullable(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long max = Long.MIN_VALUE;\n        Long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        Long min = lst.get(0);\n        Long max = lst.get(0);\n        for (Long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == Long.MIN_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else if (min == Long.MAX_VALUE) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        } else {\n            return new Pair<>(Optional.of(max), Optional.of(min));\n        }",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long min = lst.get(0);\n        long max = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i) < min) {\n                min = lst.get(i);\n            }\n            if (lst.get(i) > max) {\n                max = lst.get(i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.size() == 0) {\n            return new Pair<Optional<Long>, Optional<Long>>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return new Pair<Optional<Long>, Optional<Long>>(Optional.of(max), Optional.of(min));",
    "        if (lst.isEmpty()) {\n            return new Pair<>(Optional.empty(), Optional.empty());\n        }\n        long max = Long.MIN_VALUE;\n        long min = Long.MAX_VALUE;\n        for (Long i : lst) {\n            if (i < 0) {\n                max = Math.max(max, i);\n            } else {\n                min = Math.min(min, i);\n            }\n        }\n        return new Pair<>(Optional.of(max), Optional.of(min));"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
{
  "name": "HumanEval_97_multiply",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n            }\n            b /= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdqgrze8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a = 0;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                b = 0;\n            } else {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn37uszhc.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82lafuhy.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngcw3goq.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                if (b > 0) {\n                    result += a % 10 * b % 10;\n                    a /= 10;\n                    b /= 10;\n                } else {\n                    result += a % 10 * b;\n                    a /= 10;\n                }\n            } else {\n                if (b > 0) {\n                    result += a * b % 10;\n                    b /= 10;\n                } else {\n                    result += a * b;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms_u0xg1.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else if (b > 0) {\n                result += a % 10 * b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpijj7zcd4.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                result += a % 10;\n                a /= 10;\n            } else if(b > a) {\n                result += b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpji290o9n.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a > 0 || b > 0) {\n            if(a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if(b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58_zp88b.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n            }\n            b /= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdqgrze8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a * b;\n            a = a / 10;\n            b = b / 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebu0cdri.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82lafuhy.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a /= 10;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                b /= 10;\n                a = 0;\n            } else {\n                result += a * b / 10;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                if (b > 0) {\n                    result += a % 10 * b % 10;\n                    a /= 10;\n                    b /= 10;\n                } else {\n                    result += a % 10 * b;\n                    a /= 10;\n                }\n            } else {\n                if (b > 0) {\n                    result += a * b % 10;\n                    b /= 10;\n                } else {\n                    result += a * b;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms_u0xg1.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0) {\n            if (a % 10 != 0) {\n                result += b * a % 10;\n            }\n            a /= 10;\n            i++;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmbmc24j8.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                a -= b;\n            } else if(a < b) {\n                b -= a;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qiphl_4.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyxbphpu.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                result += a % 10 * b;\n                a /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * a / 10;\n                a /= 10;\n            } else if (b % 10 == 0) {\n                result += a * b / 10;\n                b /= 10;\n            } else {\n                result += a * b / 10 + a * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ldz3uje.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a = 0;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                b = 0;\n            } else {\n                result += a * b / 10;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxa9evp9.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += b % 10 * b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanfwvter.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while(a != 0 || b != 0) {\n            if(a > 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else if(b > 0) {\n                result += b % 10 * a % 10;\n                b /= 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4oav61w.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmhs8g3g.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82lafuhy.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngcw3goq.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a * b;\n            a = a / 10;\n            b = b / 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebu0cdri.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 > 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ly5piav.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                a /= 10;\n            } else if (b % 10 == 0) {\n                result += a;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpj6f0hj.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a /= 10;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                b /= 10;\n                a = 0;\n            } else {\n                result += a * b / 10;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno0jmon3.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2t2t5p.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 != 0) {\n                result += b * a % 10;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8o1nom6u.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a * b;\n            a = a / 10;\n            b = b / 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebu0cdri.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpauqo446v.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a % 10;\n                b = b / 10;\n            } else if (a < b) {\n                a = a / 10;\n                b = b % 10;\n            } else {\n                a = a / 10;\n                b = b / 10;\n            }\n            result = result + a * b;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyxbphpu.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngcw3goq.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * a / 10;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a * b / 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b / 10 + b * a / 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhq5r4dc.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a -= b;\n            } else if (a < b) {\n                b -= a;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgkd1fyv_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngcw3goq.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno0jmon3.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if(b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vi4m8mv.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a % 10;\n            a = a / 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a % b;\n            } else {\n                b = b % a;\n            }\n            result = result + a;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\tat Problem.multiply(tmpfkodaph1.java:25)\n\tat Problem.main(tmpfkodaph1.java:34)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += b % 10 * b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kqi3z3w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a % 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if(b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkhvss2_n.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            }\n            else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            }\n            else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80r0vr_o.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b * a;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a * b;\n            } else {\n                result += a * b;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10 * a % 10;\n                b /= 10;\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp76oluq8i.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10 * a % 10;\n                a /= 10;\n            } else {\n                result += b % 10 * a % 10;\n                a /= 10;\n                b /= 10;\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7nygnw5.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 != 0) {\n                result += b * (a % 10);\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyhqc8eia.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a > 0) {\n                a = a % 10;\n                result = result + (a * b) % 10;\n                b = b % 10;\n            } else {\n                a = a % 10;\n                b = b % 10;\n            }\n            i++;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_r54_xqv.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a % 10;\n            a = a / 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeb09r8bj.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 > 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ly5piav.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i38i10h.java:42)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0) {\n            if(a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw10pti0_.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a -= b;\n            } else if (a < b) {\n                b -= a;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgkd1fyv_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_r54_xqv.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxa9evp9.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphknk_7_y.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b * a;\n                b = 0;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a * b;\n                a = 0;\n            } else {\n                result += a * b;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2t2t5p.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0 && b != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else if (a != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else if (b != 0) {\n                result += a * b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0sy5zry.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            result += a % 10 * b % 10;\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2yfwlzlz.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n            }\n            b /= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdqgrze8.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        int i = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += b % 10 * b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kqi3z3w.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                a /= 10;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                b /= 10;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphl06dipb.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if(b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vi4m8mv.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                a -= b;\n                b = 0;\n            } else if(a < b) {\n                b -= a;\n                a = 0;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * a;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmuv4nbuo.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno0jmon3.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if(b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpok468jvm.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphknk_7_y.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_r54_xqv.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b * a % 10;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2esvokf.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82lafuhy.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a -= b;\n            } else if (a < b) {\n                b -= a;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgkd1fyv_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                result += b;\n                a /= 10;\n                b = 0;\n            } else if(b % 10 == 0) {\n                result += a;\n                b /= 10;\n                a = 0;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8buh_ga.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293141,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2t2t5p.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2t2t5p.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n            else if(b % 10 != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293141,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphknk_7_y.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b * a % 10;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2esvokf.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprlpq0x6r.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293126,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprlpq0x6r.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82lafuhy.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            }\n            else if(b % 10 != 0) {\n                result += a * b % 10;\n                b /= 10;\n            }\n            else {\n                result += a * b;\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjsheh1d.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 != 0) {\n                result += b * a % 10;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8o1nom6u.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpberfgpda.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a -= b;\n                result += 1;\n            } else if (a < b) {\n                b -= a;\n                result += 10;\n            } else {\n                a = 0;\n                b = 0;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsn_k5ny3.java:38)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n            } else {\n                a /= 10;\n            }\n            if (b % 10 != 0) {\n                result += b % 10 * a;\n                b /= 10;\n            } else {\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpngcw3goq.java:40)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a > b) {\n                a = a - b;\n            } else {\n                b = b - a;\n            }\n            result = result + a;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if(b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpus5ih0p4.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a = a % 10;\n                b = b / 10;\n            } else {\n                a = a / 10;\n                b = b % 10;\n            }\n            result = result + a * b;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0) {\n            if(a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vexykfo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else {\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbofnwak.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b * 10;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a * 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293128,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpetgld3qu.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a != 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b != 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_okrb1e6.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if(b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2t2t5p.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b * (a / 10);\n                a = 0;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a * (b / 10);\n                a = 0;\n                b = 0;\n            } else {\n                result += a * b % 10;\n                a = a % 10;\n                b = b % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293143,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293124,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkhvss2_n.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a > 0 || b > 0) {\n            if(a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if(b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58_zp88b.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a > 0 || b > 0) {\n            if (a > 0) {\n                result += a % 10;\n                a /= 10;\n            }\n            if (b > 0) {\n                result += b % 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy6mntc9.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj528e_2x.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else if (b % 10 != 0) {\n                result += a * b % 10;\n                a /= 10;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3s8mvoa.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                result += b;\n                b = 0;\n            } else if (b % 10 == 0) {\n                result += a;\n                a = 0;\n            } else {\n                result += a * b % 10;\n                a = a * 10 % 10;\n                b = b * 10 % 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbvbdp7k.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += b % 10;\n                b /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293137,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            result += a % 10 * b % 10;\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293125,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2yfwlzlz.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 == 0 && b % 10 == 0) {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            } else if(a % 10 == 0) {\n                result += a * b;\n                a /= 10;\n            } else if(b % 10 == 0) {\n                result += a * b;\n                b /= 10;\n            } else {\n                result += a * b;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293128,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpis88rf3k.java:43)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a > b) {\n                a -= b;\n            } else if (a < b) {\n                b -= a;\n            } else {\n                a = 0;\n                b = 0;\n            }\n            result += a * 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgkd1fyv_.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 != 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b /= 10;\n            } else {\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293127,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbofnwak.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n                a /= 10;\n                b *= 10;\n            } else {\n                a /= 10;\n                b *= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293128,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9e3tuo54.java:36)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while(a != 0 || b != 0) {\n            if(a % 10 != 0) {\n                result += b % 10;\n            }\n            b /= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293128,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj364v7v1.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == 0) {\n                a /= 10;\n                result += b % 10;\n                b /= 10;\n            } else if (b % 10 == 0) {\n                b /= 10;\n                result += a % 10;\n                a /= 10;\n            } else {\n                result += a % 10 * b % 10;\n                a /= 10;\n                b /= 10;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293123,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyxbphpu.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            b *= 10;\n            a /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphemf4ipp.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 > 0) {\n                result += a % 10 * b;\n            }\n            a /= 10;\n            b /= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9m9m71z.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Complete the function that takes two integers and returns \n    // the product of their unit digits.\n    // Assume the input is always valid.\n    // Examples:\n    // >>> multiply(148, 412)\n    // 16\n    // >>> multiply(19, 28)\n    // 72\n    // >>> multiply(2020, 1851)\n    // 0\n    // >>> multiply(14,-15)\n    // 20\n    public static long multiply(long a, long b) {\n        long result = 0;\n        while (a != 0) {\n            if (a % 10 == 0) {\n                result += b;\n            }\n            a /= 10;\n            b *= 10;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(multiply((148l), (412l)) == (16l));\n    assert(multiply((19l), (28l)) == (72l));\n    assert(multiply((2020l), (1851l)) == (0l));\n    assert(multiply((14l), (-15l)) == (20l));\n    assert(multiply((76l), (67l)) == (42l));\n    assert(multiply((17l), (27l)) == (49l));\n    assert(multiply((0l), (1l)) == (0l));\n    assert(multiply((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1664293122,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleq92nmo.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "HumanEval_117_select_words",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given a string s and a natural number n, you have been tasked to implement \n    // a function that returns an array array list of all words from string s that contain exactly \n    // n consonants, in order these words appear in the string s.\n    // If the string s is empty then the function should return an empty array list.\n    // Note: you may assume the input string contains only letters and spaces.\n    // Examples:\n    // >>> select_words(\"Mary had a little lamb\", 4)\n    // [\"little\"]\n    // >>> select_words(\"Mary had a little lamb\", 3)\n    // [\"Mary\", \"lamb\"]\n    // >>> select_words(\"simple white space\", 2)\n    // []\n    // >>> select_words(\"Hello world\", 4)\n    // [\"world\"]\n    // >>> select_words(\"Uncle sam\", 3)\n    // [\"Uncle\"]\n    public static ArrayList<String> selectWords(String s, long n) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(selectWords((\"Mary had a little lamb\"), (4l)).equals((new ArrayList<String>(Arrays.asList((String)\"little\")))));\n    assert(selectWords((\"Mary had a little lamb\"), (3l)).equals((new ArrayList<String>(Arrays.asList((String)\"Mary\", (String)\"lamb\")))));\n    assert(selectWords((\"simple white space\"), (2l)).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(selectWords((\"Hello world\"), (4l)).equals((new ArrayList<String>(Arrays.asList((String)\"world\")))));\n    assert(selectWords((\"Uncle sam\"), (3l)).equals((new ArrayList<String>(Arrays.asList((String)\"Uncle\")))));\n    assert(selectWords((\"\"), (4l)).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(selectWords((\"a b c d e f\"), (1l)).equals((new ArrayList<String>(Arrays.asList((String)\"b\", (String)\"c\", (String)\"d\", (String)\"f\")))));\n    }\n\n}\n",
  "completions": [
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (int i = 0; i < str.length; i++) {\n            if (str[i].length() == n) {\n                words.add(str[i]);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            if (j < n) {\n                if (isConsonant(s.charAt(i))) {\n                    j++;\n                }\n            } else {\n                if (isConsonant(s.charAt(i))) {\n                    result.add(s.substring(j, i));\n                    j = 0;\n                }\n            }\n            i++;\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty())\n            return words;\n        int start = 0;\n        int end = 0;\n        while(end < s.length()) {\n            while(end < s.length() && s.charAt(end) != ' ')\n                end++;\n            if(end - start >= n) {\n                String word = s.substring(start, end);\n                words.add(word);\n            }\n            while(end < s.length() && s.charAt(end) == ' ')\n                end++;\n            start = end;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.isEmpty())\n            return result;\n        int count = 0;\n        for(int i = 0; i < s.length(); i++) {\n            if(s.charAt(i) == ' ') {\n                count = 0;\n                continue;\n            }\n            if(count == n) {\n                result.add(s.substring(i, i + 1));\n                count = 0;\n            }\n            count++;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.length() == 0)\n            return result;\n        String[] words = s.split(\" \");\n        for(String word : words) {\n            if(word.length() == 0)\n                continue;\n            int count = 0;\n            for(char c : word.toCharArray()) {\n                if(c == ' ')\n                    continue;\n                count++;\n            }\n            if(count == n)\n                result.add(word);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (count == n) {\n                words.add(s.substring(j, i));\n                count = 0;\n                j = i;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n            } else {\n                count++;\n                i++;\n            }\n        }\n        if (count == n) {\n            words.add(s.substring(j, i));\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        int i = 0, j = 0, count = 0;\n        while(i < s.length()) {\n            while(i < s.length() && count < n) {\n                if(s.charAt(i) == ' ') {\n                    i++;\n                } else {\n                    count++;\n                    i++;\n                }\n            }\n            while(i < s.length() && s.charAt(i) != ' ') {\n                i++;\n            }\n            if(count == n) {\n                words.add(s.substring(j, i));\n            }\n            count = 0;\n            j = i;\n            i++;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            while (j < s.length() && count < n) {\n                if (s.charAt(i) == ' ') {\n                    i++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(i) == s.charAt(j)) {\n                    i++;\n                    j++;\n                    count++;\n                    continue;\n                }\n                j++;\n            }\n            if (count == n) {\n                result.add(s.substring(i, j));\n                i = j;\n                count = 0;\n            }\n            j = i + 1;\n            count = 0;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == n) {\n                result.add(s.substring(entry.getKey() - 1, entry.getKey() + 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        while(i < s.length()){\n            int j = i;\n            while(j < s.length() && s.charAt(j) != ' '){\n                j++;\n            }\n            String word = s.substring(i, j);\n            if(word.length() == n){\n                words.add(word);\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        \n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        \n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (int i = 0; i < arr.length; i++) {\n            String word = arr[i];\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                } else {\n                    n--;\n                }\n                j++;\n            }\n            if (n == 0) {\n                words.add(s.substring(i, j));\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                if (s.charAt(j) == 'a' || s.charAt(j) == 'e' || s.charAt(j) == 'i' || s.charAt(j) == 'o' || s.charAt(j) == 'u') {\n                    n--;\n                }\n                j++;\n            }\n            if (n == 0) {\n                result.add(s.substring(i, j));\n            }\n            i = j;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + 1));\n                cnt[s.charAt(i) - 'a']--;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) return words;\n        String[] words_arr = s.split(\" \");\n        for (String word : words_arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> res = new ArrayList<String>();\n        if(s.length() == 0) return res;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                res.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return res;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty())\n            return result;\n        int i = 0;\n        while(i < s.length()) {\n            int j = i;\n            while(j < s.length() && n > 0) {\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> res = new ArrayList<>();\n        if (s.isEmpty()) return res;\n        String[] arr = s.split(\" \");\n        for (String str : arr) {\n            if (str.length() == n) {\n                res.add(str);\n            }\n        }\n        return res;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.isEmpty()) return result;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        while(i < s.length()) {\n            int j = i;\n            while(j < s.length() && n > 0) {\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                n--;\n                j++;\n            }\n            if(n == 0) {\n                words.add(s.substring(i, j));\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        \n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            \n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            \n            if (j - i + 1 == n) {\n                result.add(s.substring(i, j));\n                i = j + 1;\n            } else {\n                j++;\n            }\n        }\n        \n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) result.add(word);\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            String word = s.substring(i, j);\n            if (word.length() == n) {\n                words.add(word);\n            }\n            i = j + 1;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (count == n) {\n                result.add(s.substring(j, i));\n                count = 0;\n                j = i;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n            } else {\n                count++;\n                i++;\n            }\n        }\n        if (count == n) {\n            result.add(s.substring(j, i));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            while (j < s.length() && count < n) {\n                if (s.charAt(i) == ' ') {\n                    i++;\n                } else {\n                    count++;\n                    j++;\n                }\n            }\n            if (count == n) {\n                result.add(s.substring(i, j));\n                i = j;\n                count = 0;\n            }\n            j++;\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (count == n) {\n                result.add(s.substring(j, i));\n                count = 0;\n                j = i + 1;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n            } else {\n                count++;\n                i++;\n            }\n        }\n        if (count == n) {\n            result.add(s.substring(j, i));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            if (n == 0) {\n                result.add(s.substring(i, s.length()));\n                return result;\n            }\n            int count = 0;\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                if (s.charAt(j) == s.charAt(i)) {\n                    count++;\n                    if (count == n) {\n                        result.add(s.substring(i, j + 1));\n                        i = j + 1;\n                        break;\n                    }\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                n--;\n                j++;\n            }\n            if (n == 0) {\n                words.add(s.substring(i, j));\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.length() == 0) return words;\n        for(int i = 0; i < s.length(); i++) {\n            if(s.charAt(i) == ' ') continue;\n            int count = 0;\n            for(int j = i; j < s.length(); j++) {\n                if(s.charAt(j) == ' ') break;\n                if(s.charAt(j) == s.charAt(i)) {\n                    count++;\n                    if(count == n) {\n                        words.add(s.substring(i, j));\n                        i = j;\n                        break;\n                    }\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> res = new ArrayList<>();\n        if(s.length() == 0) return res;\n        int i = 0;\n        while(i < s.length()) {\n            int j = i;\n            while(j < s.length() && n > 0) {\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if(n == 0) {\n                    res.add(s.substring(i, j));\n                    i = j;\n                    n = 0;\n                    break;\n                }\n                j++;\n                n--;\n            }\n            if(n == 0) break;\n            i++;\n        }\n        return res;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == 0) continue;\n            int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n                if (word.charAt(i) == ' ') continue;\n                count++;\n                if (count == n) {\n                    words.add(word);\n                    break;\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n            }\n            if (count == n) {\n                result.add(s.substring(i, i + 1));\n                count = 0;\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == n) {\n                result.add(s.substring(entry.getKey() - 1, entry.getKey() + 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.length() == 0) return result;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n                if (count == n) {\n                    words.add(s.substring(i, i + n));\n                    count = 0;\n                }\n            } else {\n                count = 0;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        HashSet<String> set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            StringBuilder sb = new StringBuilder();\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                sb.append(s.charAt(j));\n            }\n            String str = sb.toString();\n            if (set.contains(str)) {\n                continue;\n            }\n            set.add(str);\n            if (set.size() == n) {\n                result.add(str);\n                set.remove(str);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashSet<String> set = new HashSet<String>();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            StringBuilder sb = new StringBuilder();\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                sb.append(s.charAt(j));\n            }\n            String word = sb.toString();\n            if (set.contains(word)) {\n                continue;\n            }\n            set.add(word);\n            if (set.size() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n                if (count == n) {\n                    result.add(s.substring(i, i + 1));\n                    count = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i + 1 == n) {\n                result.add(s.substring(i, j));\n                i = j + 1;\n            }\n            j++;\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length()) {\n                break;\n            }\n            j++;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j == s.length",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        \n        for(int i = 0; i < s.length(); i++) {\n            if(s.charAt(i) == ' ') continue;\n            int count = 0;\n            for(int j = i; j < s.length(); j++) {\n                if(s.charAt(j) == ' ') break;\n                if(s.charAt(j) == s.charAt(i)) count++;\n                if(count == n) {\n                    words.add(s.substring(i, j));\n                    i = j;\n                    break;\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.length() == 0) return result;\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int start = 0;\n        int end = 0;\n        int count = 0;\n        while(end < s.length()) {\n            if(count == n) {\n                words.add(s.substring(start, end));\n                start = end;\n                count = 0;\n            }\n            if(s.charAt(end) == ' ') {\n                end++;\n            } else {\n                count++;\n                end++;\n            }\n        }\n        if(count == n) {\n            words.add(s.substring(start, end));\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] words_array = s.split(\" \");\n        for (String word : words_array) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                } else {\n                    n--;\n                }\n            }\n            if (n == 0) {\n                words.add(s.substring(i, j));\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == '",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    ",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == n) {\n                result.add(s.substring(entry.getKey() - 1, entry.getKey() + 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                String word = \"\";\n                for (int j = i; j < s.length(); j++) {\n                    if (s.charAt(j) != ' ') {\n                        word += s.charAt(j);\n                    } else {\n                        break;\n                    }\n                }\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int i = 0, j = 0;\n        while(i < s.length()) {\n            if(j < n) {\n                if(s.charAt(i) == ' ') {\n                    j++;\n                    i++;\n                    continue;\n                }\n                while(i < s.length() && s.charAt(i) != ' ') {\n                    i++;\n                }\n                if(i < s.length()) {\n                    i++;\n                }\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            while(i < s.length() && s.charAt(i) != ' ') {\n                i++;\n            }\n            if(i < s.length()) {\n                i++;\n            }\n            words.add(s.substring(j, i));\n            j = i;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for(String word : words) {\n            if(word.length() == n) result.add(word);\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        \n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        \n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i == n) {\n                result.add(s.substring(i, j));\n                i = j;\n            }\n            while (j < s.length() && s.charAt(j) == ' ') {\n                j++;\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == 0) {\n                continue;\n            }\n            int count = 0;\n            for (char c : word.toCharArray()) {\n                if (c == ' ') {\n                    continue;\n                }\n                count++;\n            }\n            if (count == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while(i < s.length()) {\n            while(i < s.length() && count < n) {\n                if(s.charAt(i) == ' ') {\n                    i++;\n                    continue;\n                }\n                count++;\n                i++;\n            }\n            if(count == n) {\n                words.add(s.substring(j, i));\n                j = i;\n                count = 0;\n            }\n            while(i < s.length() && s.charAt(i) != ' ') {\n                i++;\n            }\n        }\n        if(count == n) {\n            words.add(s.substring(j, i));\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.length() == 0) return result;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i > n) {\n                break;\n            }\n            count++;\n            if (count == n) {\n                result.add(s.substring(i, j));\n                count = 0;\n            }\n            i = j + 1;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n        int m = 0;\n        int nn = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if (s.charAt(i) == '",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == 0) {\n                continue;\n            }\n            int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n                if (word.charAt(i) == ' ') {\n                    continue;\n                }\n                count++;\n                if (count == n) {\n                    result.add(word);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        while(i < s.length()) {\n            int j = i;\n            while(j < s.length() && n > 0) {\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    n--;\n                }\n                j++;\n            }\n            if(n == 0) {\n                words.add(s.substring(i, j));\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        int i = 0;\n        while(i < s.length()) {\n            int j = i;\n            while(j < s.length() && s.charAt(j) != ' ') j++;\n            if(j - i < n) {\n                words.add(s.substring(i, j));\n                i = j;\n            } else {\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> res = new ArrayList<String>();\n        if (s.isEmpty()) return res;\n        String[] str = s.split(\" \");\n        for (String s1 : str) {\n            if (s1.length() == n) res.add(s1);\n        }\n        return res;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                ",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int start = 0;\n        int end = 0;\n        while (end < s.length()) {\n            if (s.charAt(end) == ' ') {\n                end++;\n                continue;\n            }\n            start = end;\n            while (end < s.length() && s.charAt(end) != ' ') {\n                end++;\n            }\n            if (end - start == n) {\n                words.add(s.substring(start, end));\n            }\n            end++;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashSet<String> set = new HashSet<String>();\n        for (int i = 0; i < s.length(); i++) {\n            for (int j = i; j < s.length(); j++) {\n                String word = s.substring(i, j + 1);\n                if (word.length() == n) {\n                    set.add(word);\n                }\n            }\n        }\n        result.addAll(set);\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            if (s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            while (i < s.length() && count < n) {\n                if (s.charAt(i) == ' ') {\n                    i++;\n                    continue;\n                }\n                count++;\n                i++;\n            }\n            if (count == n) {\n                result.add(s.substring(j, i));\n                j = i;\n                count = 0;\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            int count = 0;\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                if (s.charAt(j) == s.charAt(i)) {\n                    count++;\n                }\n            }\n            if (count == n) {\n                result.add(s.substring(i, i + count));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            int count = 0;\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                if (s.charAt(j) == s.charAt(i)) {\n                    count++;\n                }\n            }\n            if (count == n) {\n                words.add(s.substring(i, i + count));\n                i += count - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty())\n            return words;\n        String[] str = s.split(\" \");\n        for(String s1: str) {\n            if(s1.length() == n)\n                words.add(s1);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            int j = i;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            String word = s.substring(i, j);\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                n--;\n                j++;\n            }\n            if (n > 0) {\n                i = j;\n                continue;\n            }\n            String word = s.substring(i, j);\n            words.add(word);\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        int j = 0;\n        while(i < s.length()) {\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            int count = 0;\n            while(i < s.length() && count < n) {\n                if(s.charAt(i) == ' ') {\n                    i++;\n                    continue;\n                }\n                count++;\n                i++;\n            }\n            if(count == n) {\n                words.add(s.substring(j, i));\n                j = i;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) return words;\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i + 1 == n) {\n                words.add(s.substring(i, j));\n            }\n            while (j < s.length() && s.charAt(j) == ' ') {\n                j++;\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (String word : arr) {\n            if (word.length() == 0) {\n                continue;\n            }\n            int count = 0;\n            for (int i = 0; i < word.length(); i++) {\n                if (word.charAt(i) == ' ') {\n                    continue;\n                }\n                count++;\n                if (count == n) {\n                    words.add(word);\n                    break;\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int len = s.length();\n        int i = 0;\n        while(i < len) {\n            int j = i;\n            while(j < len && n > 0) {\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;\n                }\n                if(s.charAt(j) == ' ') {\n                    j++;\n                    n--;\n                    continue;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    n--;\n                    j++;\n                    continue;\n                }\n                n--;\n                j++;\n            }\n            if (n == 0) {\n                String word = s.substring(i, j);\n                words.add(word);\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        int start = 0, end = 0;\n        while(end < s.length()) {\n            while(end < s.length() && s.charAt(end) != ' ') end++;\n            String word = s.substring(start, end);\n            if(word.length() == n) words.add(word);\n            start = end + 1;\n            end = start;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                n--;\n                j++;\n            }\n            if (j - i > 0) {\n                words.add(s.substring(i, j));\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int start = 0;\n        int end = 0;\n        while(end < s.length()) {\n            while(end < s.length() && s.charAt(end) != ' ') {\n                end++;\n            }\n            if(end - start >= n) {\n                words.add(s.substring(start, end));\n            }\n            while(end < s.length() && s.charAt(end) == ' ') {\n                end++;\n            }\n            start = end;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for (String s1 : str) {\n            if (s1.length() == n) {\n                words.add(s1);\n            }\n        }\n        return words;",
    "        ArrayList<String> res = new ArrayList<String>();\n        if(s.length() == 0) return res;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                res.add(s.substring(i, i + n));\n            }\n        }\n        return res;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                String word = \"\";\n                for(int j = i; j < s.length(); j++) {\n                    if(s.charAt(j) == ' ') break;\n                    word += s.charAt(j);\n                }\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty()) return result;\n        HashSet<String> set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(c == ' ') continue;\n            if(set.contains(Character.toString(c))) continue;\n            set.add(Character.toString(c));\n            if(set.size() == n) {\n                result.add(s.substring(i, i + 1));\n                i++;\n                while(i < s.length() && s.charAt(i) == ' ') i++;\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty()) return result;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] arr = s.split(\" \");\n        for(String word : arr) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] words_arr = s.split(\" \");\n        for(String word: words_arr) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.isEmpty())\n            return result;\n        int start = 0;\n        int end = 0;\n        int count = 0;\n        while(end < s.length()) {\n            if(s.charAt(end) == ' ') {\n                end++;\n                continue;\n            }\n            if(count == n) {\n                result.add(s.substring(start, end));\n                start = end;\n                count = 0;\n            }\n            count++;\n            end++;\n        }\n        if(count == n) {\n            result.add(s.substring(start, end));\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        int len = s.length();\n        int count = 0;\n        for(int i = 0; i < len; i++) {\n            if(s.charAt(i) == ' ') {\n                count = 0;\n                continue;\n            }\n            if(count == n) {\n                words.add(s.substring(i, i + 1));\n                count = 0;\n            }\n            count++;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty())\n            return words;\n        int i = 0;\n        while(i < s.length()){\n            int j = i;\n            while(j < s.length() && s.charAt(j) != ' '){\n                j++;\n            }\n            String word = s.substring(i, j);\n            if(word.length() == n){\n                words.add(word);\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n                if (count == n) {\n                    result.add(s.substring(i, i + n));\n                    count = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for(String word: words) {\n            if(word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        \n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        \n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        \n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        HashSet<String> set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c == ' ') {\n                continue;\n            }\n            StringBuilder sb = new StringBuilder();\n            sb.append(c);\n            for (int j = i + 1; j < s.length(); j++) {\n                c = s.charAt(j);\n                if (c == ' ') {\n                    break;\n                }\n                sb.append(c);\n            }\n            String word = sb.toString();\n            if (set.contains(word)) {\n                continue;\n            }\n            set.add(word);\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] words_arr = s.split(\" \");\n        for (String word : words_arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] words_arr = s.split(\" \");\n        for (String word : words_arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while(i < s.length()) {\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(count == n) {\n                j = i;\n                while(j < s.length() && s.charAt(j) != ' ') {\n                    j++;\n                }\n                words.add(s.substring(i, j));\n                i = j;\n                count = 0;\n            }\n            count++;\n            i++;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n                if (count == n) {\n                    result.add(s.substring(i, i + n));\n                    count = 0;\n                }\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        for(int i = 0; i < s.length(); i++) {\n            char[] c = s.toCharArray();\n            int count = 0;\n            for(int j = i; j < s.length(); j++) {\n                if(c[j] == ' ') {\n                    count++;\n                    if(count == n) {\n                        words.add(s.substring(i, j));\n                        i = j;\n                        break;\n                    }\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String s1: str) {\n            if(s1.length() == 0) continue;\n            char[] c = s1.toCharArray();\n            int count = 0;\n            for(int i = 0; i < c.length; i++) {\n                if(c[i] == ' ') continue;\n                count++;\n                if(count == n) {\n                    words.add(s1);\n                    break;\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int count = 0;\n        for(int i = 0; i < s.length(); i++) {\n            if(s.charAt(i) == ' ') continue;\n            count++;\n            if(count == n) {\n                words.add(s.substring(i, i+1));\n                count = 0;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i + 1 == n) {\n                words.add(s.substring(i, j));\n            }\n            while (j < s.length() && s.charAt(j) == ' ') {\n                j++;\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int start = 0;\n        int end = 0;\n        while (end < s.length()) {\n            while (end < s.length() && s.charAt(end) != ' ') {\n                end++;\n            }\n            if (end - start < n) {\n                start = end;\n            } else {\n                String word = s.substring(start, end);\n                if (word.length() == n) {\n                    words.add(word);\n                }\n                start = end;\n            }\n            end++;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        \n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        \n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                String word = \"\";\n                for(int j = i; j < s.length(); j++) {\n                    if(s.charAt(j) == ' ') {\n                        if(word.length() > 0) {\n                            words.add(word);\n                            word = \"\";\n                        }\n                    } else {\n                        word += s.charAt(j);\n                    }\n                }\n                if(word.length() > 0) {\n                    words.add(word);\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty())\n            return words;\n        String[] str = s.split(\" \");\n        for(int i = 0; i < str.length; i++) {\n            String word = str[i];\n            if(word.length() == n)\n                words.add(word);\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) return result;\n        \n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') continue;\n            \n            int count = 0;\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') break;\n                if (s.charAt(j) == s.charAt(i)) count++;\n            }\n            if (count == n) result.add(s.substring(i, i + count));\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int start = 0;\n        int end = 0;\n        int count = 0;\n        while (end < s.length()) {\n            while (end < s.length() && count < n) {\n                if (s.charAt(end) == ' ') {\n                    end++;\n                } else {\n                    count++;\n                    end++;\n                }\n            }\n            if (count == n) {\n                result.add(s.substring(start, end));\n                start = end;\n                count = 0;\n            }\n            end++;\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.length() == 0) {\n            return result;\n        }\n        \n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        \n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(map.containsKey(c) && map.get(c) == n) {\n                result.add(s.substring(i, i + 1));\n            }\n        }\n        \n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.length() == 0) return result;\n        int start = 0;\n        int end = 0;\n        while(end < s.length()) {\n            while(end < s.length() && s.charAt(end) != ' ') {\n                end++;\n            }\n            if(end - start < n) {\n                result.add(s.substring(start, end));\n                start = end;\n            }\n            end++;\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\"\\\\s+\");\n        for (String word : words) {\n            if (word.length() == n) result.add(word);\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == n) {\n                result.add(s.substring(entry.getKey() - 1, entry.getKey() + 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == n) {\n                result.add(s.substring(entry.getKey() - 1, entry.getKey() + 1));\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String word: str) {\n            if(word.length() == n) words.add(word);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty())\n            return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n)\n                words.add(word);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        String[] arr = s.split(\" \");\n        for(String word : arr) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < s.length()) {\n            while (i < s.length() && count < n) {\n                if (s.charAt(i) == ' ') {\n                    i++;\n                } else {\n                    count++;\n                    i++;\n                }\n            }\n            if (count == n) {\n                result.add(s.substring(j, i));\n                j = i;\n                count = 0;\n            }\n            while (i < s.length() && s.charAt(i) != ' ') {\n                i++;\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if(s.isEmpty()) return result;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty()) return result;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                result.add(s.substring(i, i + n));\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (String word : str) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] cnt = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(cnt[s.charAt(i) - 'a'] == n) {\n                String word = \"\";\n                for(int j = i; j < s.length(); j++) {\n                    if(s.charAt(j) - 'a' < 26) {\n                        word += s.charAt(j);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        for(int i = 0; i < s.length(); i++) {\n            char[] chars = s.toCharArray();\n            int count = 0;\n            for(int j = i; j < s.length(); j++) {\n                if(chars[j] == ' ') {\n                    count++;\n                    if(count == n) {\n                        words.add(s.substring(i, j));\n                        i = j;\n                        break;\n                    }\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.length() == 0) {\n            return words;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            int j = i;\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            String word = s.substring(i, j);\n            if (word.length() == n) {\n                words.add(word);\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            count++;\n            if (count == n) {\n                result.add(s.substring(i, i + n));\n                i += n - 1;\n                count = 0;\n            }\n        }\n        return result;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) {\n                result.add(word);\n            }\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        int[] cnt = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (cnt[s.charAt(i) - 'a'] == n) {\n                words.add(s.substring(i, i + n));\n                i += n - 1;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (int i = 0; i < str.length; i++) {\n            String word = str[i];\n            if (word.length() > n) {\n                continue;\n            }\n            int count = 0;\n            for (int j = 0; j < word.length(); j++) {\n                if (word.charAt(j) == ' ') {\n                    continue;\n                }\n                count++;\n                if (count == n) {\n                    words.add(word);\n                    break;\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if (s.isEmpty()) return result;\n        String[] words = s.split(\" \");\n        for (String word : words) {\n            if (word.length() == n) result.add(word);\n        }\n        return result;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] words_arr = s.split(\" \");\n        for (String word : words_arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<>();\n        if(s.isEmpty()) return result;\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        int count = 0;\n        while(i < s.length() && count < n) {\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i) == ' ') {\n                i++;\n                continue;\n            }\n            if(s.charAt(i",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        HashSet<String> set = new HashSet<String>();\n        for (int i = 0; i < s.length(); i++) {\n            String word = s.substring(i, i + 1);\n            if (set.contains(word)) {\n                continue;\n            }\n            set.add(word);\n            if (set.size() == n) {\n                words.add(word);\n                set.remove(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] str = s.split(\" \");\n        for (int i = 0; i < str.length; i++) {\n            if (str[i].length() == n) {\n                words.add(str[i]);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) return words;\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                } else {\n                    n--;\n                }\n            }\n            if (n > 0) {\n                String word = s.substring(i, j);\n                words.add(word);\n                i = j;\n            } else {\n                i = j;\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        String[] arr = s.split(\" \");\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i].length() == n) {\n                words.add(arr[i]);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        HashSet<String> set = new HashSet<String>();\n        for (int i = 0; i < s.length(); i++) {\n            String word = s.substring(i, i + 1);\n            if (set.contains(word)) {\n                continue;\n            }\n            set.add(word);\n            if (set.size() == n) {\n                words.add(word);\n                set.remove(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int i = 0;\n        while(i < s.length()){\n            int j = i;\n            while(j < s.length() && n > 0){\n                if(s.charAt(j) == ' ') n--;\n                j++;\n            }\n            if(n == 0) words.add(s.substring(i, j));\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.length() == 0) return words;\n        int[] count = new int[26];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - 'a'] == n) {\n                String word = \"\";\n                for(int j = i; j < s.length(); j++) {\n                    if(s.charAt(j) == ' ') {\n                        if(word.length() > 0) {\n                            words.add(word);\n                            word = \"\";\n                        }\n                    } else {\n                        word += s.charAt(j);\n                    }\n                }\n                if(word.length() > 0) {\n                    words.add(word);\n                }\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        String[] words_arr = s.split(\" \");\n        for (String word : words_arr) {\n            if (word.length() == n) {\n                words.add(word);\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if (s.length() == 0) {\n            return words;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                continue;\n            }\n            int count = 0;\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') {\n                    break;\n                }\n                if (s.charAt(j) == s.charAt(i)) {\n                    count++;\n                }\n            }\n            if (count == n) {\n                words.add(s.substring(i, i + count));\n            }\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) return words;\n        int i = 0, j = 0;\n        while (i < s.length()) {\n            while (j < s.length() && s.charAt(j) != ' ') {\n                j++;\n            }\n            if (j - i > n) break;\n            String word = s.substring(i, j);\n            if (!word.isEmpty()) words.add(word);\n            i = j + 1;\n            j = i;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty()) return words;\n        String[] arr = s.split(\" \");\n        for(String word: arr) {\n            if(word.length() == n) words.add(word);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) return words;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') continue;\n            String word = \"\";\n            for (int j = i; j < s.length(); j++) {\n                if (s.charAt(j) == ' ') break;\n                word += s.charAt(j);\n            }\n            if (word.length() == n) words.add(word);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if (s.isEmpty()) {\n            return words;\n        }\n        int i = 0;\n        while (i < s.length()) {\n            int j = i;\n            while (j < s.length() && n > 0) {\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                if (s.charAt(j) == ' ') {\n                    j++;\n                    continue;\n                }\n                n--;\n                j++;\n            }\n            if (n == 0) {\n                words.add(s.substring(i, j));\n            }\n            i = j;\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<String>();\n        if(s.isEmpty())\n            return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n)\n                words.add(word);\n        }\n        return words;",
    "        ArrayList<String> words = new ArrayList<>();\n        if(s.isEmpty()) return words;\n        String[] str = s.split(\" \");\n        for(String word : str) {\n            if(word.length() == n) words.add(word);\n        }\n        return words;",
    "        ArrayList<String> result = new ArrayList<String>();\n        if (s.length() == 0) {\n            return result;\n        }\n        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                count++;\n                if (count == n) {\n                    result.add(s.substring(i, i + n));\n                    count = 0;\n                }\n            } else {\n                count = 0;\n            }\n        }\n        return result;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
{
  "name": "HumanEval_25_factorize",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Return array list of prime factors of given integer in the order from smallest to largest.\n    // Each of the factors should be array listed number of times corresponding to how many times it appeares in factorization.\n    // Input number should be equal to the product of all factors\n    // >>> factorize(8)\n    // [2, 2, 2]\n    // >>> factorize(25)\n    // [5, 5]\n    // >>> factorize(70)\n    // [2, 5, 7]\n    public static ArrayList<Long> factorize(long n) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(factorize((2l)).equals((new ArrayList<Long>(Arrays.asList((long)2l)))));\n    assert(factorize((4l)).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l)))));\n    assert(factorize((8l)).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))));\n    assert(factorize((57l)).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)19l)))));\n    assert(factorize((3249l)).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)19l, (long)19l)))));\n    assert(factorize((185193l)).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)3l, (long)19l, (long)19l, (long)19l)))));\n    assert(factorize((20577l)).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)19l, (long)19l, (long)19l)))));\n    assert(factorize((18l)).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)3l)))));\n    }\n\n}\n",
  "completions": [
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 0) {\n            factors.add(0L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11l);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13l);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3l);\n            factors.add(5l);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long x = n;\n        while (x > 1) {\n            if (x % 2 == 0) {\n                x /= 2;\n                factors.add(2L);\n            } else if (x % 3 == 0) {\n                x /= 3;\n                factors.add(3L);\n            } else if (x % 5 == 0) {\n                x /= 5;\n                factors.add(5L);\n            } else if (x % 7 == 0) {\n                x /= 7;\n                factors.add(7L);\n            } else {\n                factors.add(x);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n                i = 2;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long x = n;\n        while (x > 1) {\n            if (x % 2 == 0) {\n                x /= 2;\n                factors.add(2L);\n            } else if (x % 3 == 0) {\n                x /= 3;\n                factors.add(3L);\n            } else if (x % 5 == 0) {\n                x /= 5;\n                factors.add(5L);\n            } else if (x % 7 == 0) {\n                x /= 7;\n                factors.add(7L);\n            } else {\n                factors.add(x);\n                x = x / 2;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) return factors;\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long p = 2;\n        while (n > 1) {\n            if (n % p == 0) {\n                factors.add(p);\n                n /= p;\n            } else {\n                p++;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) return factors;\n        if (n == 2) return factors;\n        if (n == 3) return factors;\n        if (n == 4) return factors;\n        if (n == 5) return factors;\n        if (n == 6) return factors;\n        if (n == 7) return factors;\n        if (n == 8) return factors;\n        if (n == 9) return factors;\n        if (n == 10) return factors;\n        if (n == 11) return factors;\n        if (n == 12) return factors;\n        if (n == 13) return factors;\n        if (n == 14) return factors;\n        if (n == 15) return factors;\n        if (n == 16) return factors;\n        if (n == 17) return factors;\n        if (n == 18) return factors;\n        if (n == 19) return factors;\n        if (n == 20) return factors;\n        if (n == 21) return factors;\n        if (n == 22) return factors;\n        if (n == 23) return factors;\n        if (n == 24) return factors;\n        if (n == 25) return factors;\n        if (n == 26) return factors;\n        if (n == 27) return factors;\n        if (n == 28) return factors;\n        if (n == 29) return factors;\n        if (n == 30) return factors;\n        if (n == 31) return factors;\n        if (n == 32) return factors;\n        if (n == 33) return factors;\n        if (n == 34) return factors;\n        if (n == 35) return factors;\n        if (n == 36) return factors;\n        if (n == 37) return factors;\n        if (n == 38) return factors;\n        if (n == 39) return factors;\n        if (n == 40) return factors;\n        if (n == 41) return factors;\n        if (n == 42) return factors;\n        if (n == 43) return factors;\n        if (n == 44) return factors;\n        if (n == 45) return factors;\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        long x = n;\n        while (x > 1) {\n            if (x % 2 == 0) {\n                x /= 2;\n                factors.add(2L);\n            } else if (x % 3 == 0) {\n                x /= 3;\n                factors.add(3L);\n            } else if (x % 5 == 0) {\n                x /= 5;\n                factors.add(5L);\n            } else if (x % 7 == 0) {\n                x /= 7;\n                factors.add(7L);\n            } else {\n                factors.add(x);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long num = n;\n        while (num > 1) {\n            if (num % 2 == 0) {\n                num /= 2;\n                factors.add(2L);\n            } else if (num % 3 == 0) {\n                num /= 3;\n                factors.add(3L);\n            } else if (num % 5 == 0) {\n                num /= 5;\n                factors.add(5L);\n            } else {\n                num = num - 1;\n                factors.add(num);\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n                i = 2;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        long num = n;\n        while (num > 1) {\n            if (num % 2 == 0) {\n                factors.add(2L);\n                num /= 2;\n            } else if (num % 3 == 0) {\n                factors.add(3L);\n                num /= 3;\n            } else if (num % 5 == 0) {\n                factors.add(5L);\n                num /= 5;\n            } else if (num % 7 == 0) {\n                factors.add(7L);\n                num /= 7;\n            } else {\n                factors.add(num);\n                num = num - 1;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2l);\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11l);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2l);\n            factors.add(3l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13l);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2l);\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3l);\n            factors.add(5l);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i == n / 2 + 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11l);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2l);\n            factors.add(3l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13l);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2l);\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3l);\n            factors.add(5l);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long x = n;\n        while (x > 1) {\n            if (x % 2 == 0) {\n                x /= 2;\n                factors.add(2L);\n            } else if (x % 3 == 0) {\n                x /= 3;\n                factors.add(3L);\n            } else if (x % 5 == 0) {\n                x /= 5;\n                factors.add(5L);\n            } else if (x % 7 == 0) {\n                x /= 7;\n                factors.add(7L);\n            } else {\n                factors.add(x);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (n > 1) {\n            if (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 0) {\n            factors.add(0L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n                i = 2;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                while (n % i == 0) {\n                    n /= i;\n                }\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n % 2 == 0) {\n            factors.add(2L);\n            factors.add(n / 2);\n            return factors;\n        }\n        if (n % 3 == 0) {\n            factors.add(3L);\n            factors.add(n / 3);\n            return factors;\n        }\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n            i += 2;\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n % 2 == 0) {\n            factors.add(2l);\n            n /= 2;\n        }\n        while (n % 2 == 0) {\n            factors.add(2l);\n            n /= 2;\n        }\n        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11l);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2l);\n            factors.add(3l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13l);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2l);\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3l);\n            factors.add(5l);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n == 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            if (num % 2 == 0) {\n                num /= 2;\n                factors.add(2L);\n            } else if (num % 3 == 0) {\n                num /= 3;\n                factors.add(3L);\n            } else if (num % 5 == 0) {\n                num /= 5;\n                factors.add(5L);\n            } else if (num % 7 == 0) {\n                num /= 7;\n                factors.add(7L);\n            } else {\n                factors.add(num);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 0) {\n            factors.add(0L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n % 2 == 0) {\n            factors.add(2L);\n            factors.add(n / 2);\n            return factors;\n        }\n        long i = 3;\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n            i += 2;\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n                i = 2;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        long root = (long) Math.sqrt(n);\n        for (long i = 2; i <= root; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                factors.add(factor);\n                num /= factor;\n            }\n        }\n        if (num != 1) {\n            factors.add(num);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long root = (long)Math.sqrt(n);\n        for(long i = 2; i <= root; i++) {\n            if(n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            return factors;\n        }\n        long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n                i = 2;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long factor = num;\n            while (num % factor == 0) {\n                num /= factor;\n                factors.add(factor);\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long i = 2;\n            while (num % i == 0) {\n                factors.add(i);\n                num /= i;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        long i = 2;\n        while (i <= n) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / i) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        ",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 0) {\n            factors.add(0L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(7L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n /= i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i <= n / 2) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i == n / 2 + 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        for (long i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                break;\n            }\n            i++;\n        }\n        if (i * i > n) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                n = n / i;\n            } else {\n                i++;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2l);\n            factors.add(2l);\n            factors.add(2l);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3l);\n            factors.add(3l);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2l);\n            factors.add(5l);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11l);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2l);\n            factors.add(3l);\n            factors.add(6l);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13l);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2l);\n            factors.add(7l);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3l);\n            factors.add(5l);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);\n            return factors;\n        }\n        if",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(5L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n                factors.add(i);\n                factors.add(n / i);\n                return factors;\n            }\n        }\n        factors.add(n);\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long i = 2;\n        while (i <= n / i) {\n            while (n % i == 0) {\n                factors.add(i);\n                n /= i;\n            }\n            i++;\n        }\n        if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        if (n == 1) {\n            factors.add(1L);\n            return factors;\n        }\n        if (n == 2) {\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 3) {\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 4) {\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 5) {\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 6) {\n            factors.add(2L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 7) {\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 8) {\n            factors.add(2L);\n            factors.add(2L);\n            factors.add(2L);\n            return factors;\n        }\n        if (n == 9) {\n            factors.add(3L);\n            factors.add(3L);\n            return factors;\n        }\n        if (n == 10) {\n            factors.add(2L);\n            factors.add(5L);\n            return factors;\n        }\n        if (n == 11) {\n            factors.add(11L);\n            return factors;\n        }\n        if (n == 12) {\n            factors.add(2L);\n            factors.add(3L);\n            factors.add(6L);\n            return factors;\n        }\n        if (n == 13) {\n            factors.add(13L);\n            return factors;\n        }\n        if (n == 14) {\n            factors.add(2L);\n            factors.add(7L);\n            return factors;\n        }\n        if (n == 15) {\n            factors.add(3L);\n            factors.add(5L);",
    "        ArrayList<Long> factors = new ArrayList<Long>();\n        long num = n;\n        while (num > 1) {\n            long i = 2;\n            while (num % i == 0) {\n                factors.add(i);\n                num /= i;\n            }\n            i++;\n        }\n        return factors;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
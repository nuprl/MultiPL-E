{
  "name": "HumanEval_124_valid_date",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        String month = date_arr[0];\n        String day = date_arr[1];\n        String year = date_arr[2];\n        int month_num = Integer.parseInt(month);\n        int day_num = Integer.parseInt(day);\n        int year_num = Integer.parseInt(year);\n        if(month_num < 1 || month_num > 12) return false;\n        if(day_num < 1 || day_num > 31) return false;\n        if(month_num == 2 && day_num > 29) return false;\n        if(month_num == 1 || month_num == 3 || month_num == 5 || month_num == 7 || month_num == 8 || month_num == 10 || month_num == 12) {\n            if(day_num < 1 || day_num > 30) return false;\n        }\n        if(month_num == 4 || month_num == 6 || month_num == 9 || month_num == 11) {\n            if(day_num < 1 || day_num > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        String month = parts[0];\n        String day = parts[1];\n        String year = parts[2];\n        if(month.length() != 2) return false;\n        if(day.length() != 2) return false;\n        if(year.length() != 4) return false;\n        if(Integer.parseInt(month) < 1 || Integer.parseInt(month) > 12) return false;\n        if(Integer.parseInt(day) < 1 || Integer.parseInt(day) > 31) return false;\n        if(Integer.parseInt(month) == 2 && Integer.parseInt(day) > 29) return false;\n        if(Integer.parseInt(month) == 1 || Integer.parseInt(month) == 3 || Integer.parseInt(month) == 5 || Integer.parseInt(month) == 7 || Integer.parseInt(month) == 8 || Integer.parseInt(month) == 10 || Integer.parseInt(month) == 12) {\n            if(Integer.parseInt(day) < 1 || Integer.parseInt(day) > 30) return false;\n        }\n        if(Integer.parseInt(month) == 4 || Integer.parseInt(month) == 6 || Integer.parseInt(month) == 9 || Integer.parseInt(month) == 11) {\n            if(Integer.parseInt(day) < 1 || Integer.parseInt(day) > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.isEmpty()) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        if(d[0].length() != 2) return false;\n        if(d[1].length() != 2) return false;\n        if(d[2].length() != 4) return false;\n        if(d[0].equals(\"00\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"29\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[0].equals(\"30\") || d[0].equals(\"31\") || d[\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "/tmp/tmpmkyuuig9.java:34: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.isEmpty()) {\n            return false;\n        }\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        if (parts[0].charAt(0) < '0' || parts[0].charAt(0) > '2') return false;\n        if (parts[1].charAt(0) < '0' || parts[1].charAt(0) > '9') return false;\n        if (parts[2].charAt(0) < '0' || parts[2].charAt(0) > '9') return false;\n        if (parts[0].charAt(1) < '0' || parts[0].charAt(1) > '9') return false;\n        if (parts[1].charAt(1) < '0' || parts[1].charAt(1) > '9') return false;\n        if (parts[2].charAt(1) < '0' || parts[2].charAt(1) > '9') return false;\n        if (parts[0].charAt(2) < '0' || parts[0].charAt(2) > '9') return false;\n        if (parts[1].charAt(2) < '0' || parts[1].charAt(2) > '9') return false;\n        if (parts[2].charAt(2) < '0' || parts[2].charAt(2) > '9') return false;\n        if (parts[0].charAt(3) < '0' || parts[0].charAt(3) > '9') return false;\n        if (parts[1].charAt(3) < '0' || parts[1].charAt(3) > '9') return false;\n        if (parts[2].charAt(3) < '0' || parts[2].charAt(3) > '9') return false;\n        if (parts[0].charAt(4) < '0' ||\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293055,
      "stdout": "",
      "stderr": "/tmp/tmpl7jnacgq.java:46: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.length() == 0) {\n            return false;\n        }\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) return false;\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        if (month < 1 || month > 12) return false;\n        int day = Integer.parseInt(parts[2]);\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe40n5se.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        int day = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ig61nrc.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2) {\n            if(day < 1 || day > 29) return false;\n        }\n        else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        else if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        if(!isValidMonth(d[0])) return false;\n        if(!isValidDay(d[1])) return false;\n        if(!isValidYear(d[2])) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "/tmp/tmpcadsbkj5.java:30: error: cannot find symbol\n        if(!isValidMonth(d[0])) return false;\n            ^\n  symbol:   method isValidMonth(String)\n  location: class Problem\n/tmp/tmpcadsbkj5.java:31: error: cannot find symbol\n        if(!isValidDay(d[1])) return false;\n            ^\n  symbol:   method isValidDay(String)\n  location: class Problem\n/tmp/tmpcadsbkj5.java:32: error: cannot find symbol\n        if(!isValidYear(d[2])) return false;\n            ^\n  symbol:   method isValidYear(String)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            if (month == 2) {\n                if (day < 1 || day > 29) {\n                    return false;\n                }\n            } else if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if (Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 4) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 6) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 9) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 11) return false;\n        if (Integer.parseInt(date_arr[1]) == 4 && Integer.parseInt(date_arr[0]) == 6) return false;\n        if (Integer.parseInt(date_arr[1]) == 4 && Integer.parseInt(date_arr[0]) == 9) return false;\n        if (Integer.parseInt(date_arr[1]) == 4 && Integer.parseInt(date_arr[0]) == 11) return false;\n        if (Integer.parseInt(date_arr[1]) == 6 && Integer.parseInt(date_arr[0]) == 9) return false;\n        if (Integer.parseInt(date_arr[1]) == 6 && Integer.parseInt(date_arr[0]) == 11\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "/tmp/tmpl7ogrz6u.java:44: error: ')' expected\n        if (Integer.parseInt(date_arr[1]) == 6 && Integer.parseInt(date_arr[0]) == 11\n                                                                                     ^\n/tmp/tmpl7ogrz6u.java:45: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        int m = Integer.parseInt(d[0]);\n        int d = Integer.parseInt(d[1]);\n        int y = Integer.parseInt(d[2]);\n        if(m < 1 || m > 12) return false;\n        if(d < 1 || d > 31) return false;\n        if(m == 2 && d > 29) return false;\n        if(m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {\n            if(d < 1 || d > 30) return false;\n        }\n        if(m == 4 || m == 6 || m == 9 || m == 11) {\n            if(d < 1 || d > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "/tmp/tmpoxku4sni.java:31: error: variable d is already defined in method validDate(String)\n        int d = Integer.parseInt(d[1]);\n            ^\n/tmp/tmpoxku4sni.java:31: error: array required, but int found\n        int d = Integer.parseInt(d[1]);\n                                  ^\n/tmp/tmpoxku4sni.java:32: error: array required, but int found\n        int y = Integer.parseInt(d[2]);\n                                  ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        if (month < 1 || month > 12) return false;\n        int day = Integer.parseInt(parts[2]);\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe40n5se.java:45)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        if(date_arr[0].length() != 2) return false;\n        if(date_arr[1].length() != 2) return false;\n        if(date_arr[2].length() != 4) return false;\n        if(Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if(Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) != 2) return false;\n        if(Integer.parseInt(date_arr[1]) != 2 && Integer.parseInt(date_arr[0]) == 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3epai9_5.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        if (Integer.parseInt(parts[0]) < 1 || Integer.parseInt(parts[0]) > 12) return false;\n        if (Integer.parseInt(parts[1]) < 1 || Integer.parseInt(parts[1]) > 31) return false;\n        if (Integer.parseInt(parts[2]) < 1 || Integer.parseInt(parts[2]) > 31) return false;\n        if (Integer.parseInt(parts[1]) < 4 && Integer.parseInt(parts[0]) % 2 == 0) return false;\n        if (Integer.parseInt(parts[1]) > 6 && Integer.parseInt(parts[0]) % 2 == 1) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapazad67.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.length() == 0) {\n            return false;\n        }\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        int month = Integer.parseInt(date_arr[1]);\n        int day = Integer.parseInt(date_arr[2]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2jq7utz.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) return false;\n        if (date_array[0].length() != 2) return false;\n        if (date_array[1].length() != 2) return false;\n        if (date_array[2].length() != 4) return false;\n        int month = Integer.parseInt(date_array[1]);\n        int day = Integer.parseInt(date_array[2]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y8bzgps.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if(tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        int day = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ig61nrc.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if(tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if(tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        String month = parts[0];\n        String day = parts[1];\n        String year = parts[2];\n        int month_num = Integer.parseInt(month);\n        int day_num = Integer.parseInt(day);\n        int year_num = Integer.parseInt(year);\n        if (month_num < 1 || month_num > 12) return false;\n        if (day_num < 1 || day_num > 31) return false;\n        if (month_num == 2 && day_num > 29) return false;\n        if (month_num == 1 || month_num == 3 || month_num == 5 || month_num == 7 || month_num == 8 || month_num == 10 || month_num == 12) {\n            if (day_num < 1 || day_num > 30) return false;\n        } else if (month_num == 4 || month_num == 6 || month_num == 9 || month_num == 11) {\n            if (day_num < 1 || day_num > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        if (parts[0].charAt(0) < '0' || parts[0].charAt(0) > '9') return false;\n        if (parts[0].charAt(1) < '0' || parts[0].charAt(1) > '9') return false;\n        if (parts[1].charAt(0) < '0' || parts[1].charAt(0) > '9') return false;\n        if (parts[1].charAt(1) < '0' || parts[1].charAt(1) > '9') return false;\n        if (parts[2].charAt(0) < '0' || parts[2].charAt(0) > '9') return false;\n        if (parts[2].charAt(1) < '0' || parts[2].charAt(1) > '9') return false;\n        if (parts[2].charAt(2) < '0' || parts[2].charAt(2) > '9') return false;\n        if (parts[2].charAt(3) < '0' || parts[2].charAt(3) > '9') return false;\n        if (parts[0].charAt(0) == '0') return false;\n        if (parts[1].charAt(0) == '0') return false;\n        if (parts[2].charAt(0) == '0') return false;\n        if (parts[0].charAt(1) == '0') return false;\n        if (parts[1].charAt(1) == '0') return false;\n        if (parts[2].charAt(1) == '0') return false;\n        if (parts[0].charAt(2) == '0') return false;\n        if (parts[1].charAt(2) ==\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmppod6igmw.java:49: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        if (tokens[0].length() != 2) return false;\n        if (tokens[1].length() != 2) return false;\n        if (tokens[2].length() != 4) return false;\n        if (tokens[0].charAt(0) < '0' || tokens[0].charAt(0) > '2') return false;\n        if (tokens[0].charAt(1) < '0' || tokens[0].charAt(1) > '9') return false;\n        if (tokens[1].charAt(0) < '0' || tokens[1].charAt(0) > '9') return false;\n        if (tokens[1].charAt(1) < '0' || tokens[1].charAt(1) > '9') return false;\n        if (tokens[2].charAt(0) < '0' || tokens[2].charAt(0) > '9') return false;\n        if (tokens[2].charAt(1) < '0' || tokens[2].charAt(1) > '9') return false;\n        if (tokens[2].charAt(2) < '0' || tokens[2].charAt(2) > '9') return false;\n        if (tokens[2].charAt(3) < '0' || tokens[2].charAt(3) > '9') return false;\n        if (tokens[0].charAt(0) == '0' && tokens[0].charAt(1) == '0') return false;\n        if (tokens[1].charAt(0) == '0' && tokens[1].charAt(1) == '0') return false;\n        if (tokens[2].charAt(0) == '0' && tokens[2].charAt(1) == '0') return false;\n        if (tokens[0].charAt(0) == '1' && tokens[0].\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmph113fqbp.java:44: error: <identifier> expected\n        if (tokens[0].charAt(0) == '1' && tokens[0].\n                                                    ^\n/tmp/tmph113fqbp.java:45: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\")) return false;\n        if(parts[1].equals(\"00\")) return false;\n        if(parts[2].equals(\"0000\")) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\")) return false;\n        if(parts[1].equals(\"00\")) return false;\n        if(parts[2].equals(\"0000\")) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\")) return false;\n        if(parts[1].equals(\"00\")) return false;\n        if(parts[2].equals(\"0000\")) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\")) return false;\n        if(parts[1].equals(\"00\")) return false;\n        if(parts[2].equals(\"0000\")) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\")) return false;\n        if(parts[1].equals(\"00\")) return false;\n        if(parts[2].equals\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmpno1z9vs2.java:59: error: ')' expected\n        if(parts[2].equals\n                          ^\n/tmp/tmpno1z9vs2.java:60: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if (d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        if(date_arr[0].length() != 2) return false;\n        if(date_arr[1].length() != 2) return false;\n        if(date_arr[2].length() != 4) return false;\n        int month = Integer.parseInt(date_arr[1]);\n        int day = Integer.parseInt(date_arr[2]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2) {\n            if(day < 1 || day > 29) return false;\n        } else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        } else if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmokli_bt.java:48)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_array = date.split(\"-\");\n        if(date_array.length != 3) return false;\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        String month = parts[0];\n        String day = parts[1];\n        String year = parts[2];\n        int month_num = Integer.parseInt(month);\n        int day_num = Integer.parseInt(day);\n        int year_num = Integer.parseInt(year);\n        if (month_num < 1 || month_num > 12) return false;\n        if (day_num < 1 || day_num > 31) return false;\n        if (month_num == 2) {\n            if (day_num < 1 || day_num > 29) return false;\n        } else if (month_num == 1 || month_num == 3 || month_num == 5 || month_num == 7 || month_num == 8 || month_num == 10 || month_num == 12) {\n            if (day_num < 1 || day_num > 30) return false;\n        } else if (month_num == 4 || month_num == 6 || month_num == 9 || month_num == 11) {\n            if (day_num < 1 || day_num > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(Integer.parseInt(parts[0]) < 1 || Integer.parseInt(parts[0]) > 12) return false;\n        if(Integer.parseInt(parts[1]) < 1 || Integer.parseInt(parts[1]) > 31) return false;\n        if(Integer.parseInt(parts[2]) < 1 || Integer.parseInt(parts[2]) > 31) return false;\n        if(Integer.parseInt(parts[1]) > 30 && Integer.parseInt(parts[0]) != 2) return false;\n        if(Integer.parseInt(parts[1]) > 29 && Integer.parseInt(parts[0]) == 2) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfravohgj.java:41)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if (Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) > 29) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) < 29) return false;\n        if (Integer.parseInt(date_arr[1]) == 1 || Integer.parseInt(date_arr[1]) == 3 || Integer.parseInt(date_arr[1]) == 5 || Integer.parseInt(date_arr[1]) == 7 || Integer.parseInt(date_arr[1]) == 8 || Integer.parseInt(date_arr[1]) == 10 || Integer.parseInt(date_arr[1]) == 12) {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 30) return false;\n        } else if (Integer.parseInt(date_arr[1]) == 4 || Integer.parseInt(date_arr[1]) == 6 || Integer.parseInt(date_arr[1]) == 9 || Integer.parseInt(date_arr[1]) == 11) {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 29) return false;\n        }\n        \n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmpb1ccs68o.java:44: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        int day = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ig61nrc.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2) {\n            if(day < 1 || day > 29) return false;\n        }\n        else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        else if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            if (month == 2) {\n                if (day < 1 || day > 29) {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if (Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) > 29) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) < 29) return false;\n        if (Integer.parseInt(date_arr[1]) == 4 || Integer.parseInt(date_arr[1]) == 6 || Integer.parseInt(date_arr[1]) == 9 || Integer.parseInt(date_arr[1]) == 11) {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 30) return false;\n        } else {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhgyvj2_.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        if(parts[0].length() != 2) return false;\n        if(parts[1].length() != 2) return false;\n        if(parts[2].length() != 4) return false;\n        if(parts[0].equals(\"00\") || parts[0].equals(\"30\") || parts[0].equals(\"31\")) return false;\n        if(parts[1].equals(\"00\") || parts[1].equals(\"30\") || parts[1].equals(\"31\")) return false;\n        if(parts[2].equals(\"00\") || parts[2].equals(\"30\") || parts[2].equals(\"31\")) return false;\n        if(parts[0].equals(\"01\") || parts[0].equals(\"03\") || parts[0].equals(\"05\") || parts[0].equals(\"07\") || parts[0].equals(\"08\") || parts[0].equals(\"10\") || parts[0].equals(\"12\")) return false;\n        if(parts[1].equals(\"01\") || parts[1].equals(\"03\") || parts[1].equals(\"05\") || parts[1].equals(\"07\") || parts[1].equals(\"08\") || parts[1].equals(\"10\") || parts[1].equals(\"12\")) return false;\n        if(parts[2].equals(\"01\") || parts[2].equals(\"03\") || parts[2].equals(\"05\") || parts[2].equals(\"07\") || parts[2].equals(\"08\") || parts[2].equals(\"10\") || parts[2].equals(\"12\")) return false;\n        if(parts[0].equals(\"04\") || parts[0].equals(\"06\") || parts[0].equals(\"09\") || parts[0].equals(\"11\")) return false;\n        if(parts[1].equals(\"04\") || parts[1].equals(\"06\") || parts[1].equals(\"09\") || parts[1].equals(\"11\")) return false;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmpoyg7o947.java:41: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] d = date.split(\"-\");\n        if (d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        if(Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if(Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) > 29) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) < 29) return false;\n        if(Integer.parseInt(date_arr[1]) == 1 || Integer.parseInt(date_arr[1]) == 3 || Integer.parseInt(date_arr[1]) == 5 || Integer.parseInt(date_arr[1]) == 7 || Integer.parseInt(date_arr[1]) == 8 || Integer.parseInt(date_arr[1]) == 10 || Integer.parseInt(date_arr[1]) == 12) {\n            if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 30) return false;\n        }\n        if(Integer.parseInt(date_arr[1]) == 4 || Integer.parseInt(date_arr[1]) == 6 || Integer.parseInt(date_arr[1]) == 9 || Integer.parseInt(date_arr[1]) == 11) {\n            if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcplgj5tv.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if(parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n                return false;\n            }\n        }\n        if (day < 1 || day > 30) {\n            if (month == 4 || month == 6 || month == 9 || month == 11) {\n                return false;\n            }\n        }\n        if (day < 1 || day > 29) {\n            if (month == 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if(tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        if(d[0].length() != 2) return false;\n        if(d[1].length() != 2) return false;\n        if(d[2].length() != 4) return false;\n        if(d[0].charAt(0) < '0' || d[0].charAt(0) > '9') return false;\n        if(d[1].charAt(0) < '0' || d[1].charAt(0) > '9') return false;\n        if(d[2].charAt(0) < '0' || d[2].charAt(0) > '9') return false;\n        if(d[0].charAt(1) < '0' || d[0].charAt(1) > '9') return false;\n        if(d[1].charAt(1) < '0' || d[1].charAt(1) > '9') return false;\n        if(d[2].charAt(1) < '0' || d[2].charAt(1) > '9') return false;\n        if(d[0].charAt(2) < '0' || d[0].charAt(2) > '9') return false;\n        if(d[1].charAt(2) < '0' || d[1].charAt(2) > '9') return false;\n        if(d[2].charAt(2) < '0' || d[2].charAt(2) > '9') return false;\n        if(d[0].charAt(0) > '2' || d[0].charAt(0) < '1') return false;\n        if(d[1].charAt(0) > '2' || d[1].charAt(0) < '1') return false;\n        if(d[2].charAt(0) > '2' || d[2].charAt(0) < '1') return false;\n        if(d[0].charAt(1) > '2' ||\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293058,
      "stdout": "",
      "stderr": "/tmp/tmp8_yy5r0q.java:46: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if (Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) != 2) return false;\n        if (Integer.parseInt(date_arr[1]) == 4 || Integer.parseInt(date_arr[1]) == 6 || Integer.parseInt(date_arr[1]) == 9 || Integer.parseInt(date_arr[1]) == 11) {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 30) return false;\n        }\n        if (Integer.parseInt(date_arr[1]) == 1 || Integer.parseInt(date_arr[1]) == 3 || Integer.parseInt(date_arr[1]) == 5 || Integer.parseInt(date_arr[1]) == 7 || Integer.parseInt(date_arr[1]) == 8 || Integer.parseInt(date_arr[1]) == 10 || Integer.parseInt(date_arr[1]) == 12) {\n            if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vyt28or.java:46)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if (Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if (Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) > 29) return false;\n        if (Integer.parseInt(date_arr[1]) != 2 && Integer.parseInt(date_arr[2]) > 30) return false;\n        if (Integer.parseInt(date_arr[1]) != 2 && Integer.parseInt(date_arr[2]) > 29) return false;\n        if (Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[2]) < 1) return false;\n        if (Integer.parseInt(date_arr[1]) != 2 && Integer.parseInt(date_arr[2]) < 1) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3jw2l19.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) return false;\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 31) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        if (parts[0].charAt(0) < '0' || parts[0].charAt(0) > '9') return false;\n        if (parts[1].charAt(0) < '0' || parts[1].charAt(0) > '9') return false;\n        if (parts[2].charAt(0) < '0' || parts[2].charAt(0) > '9') return false;\n        if (parts[0].charAt(1) < '0' || parts[0].charAt(1) > '9') return false;\n        if (parts[1].charAt(1) < '0' || parts[1].charAt(1) > '9') return false;\n        if (parts[2].charAt(1) < '0' || parts[2].charAt(1) > '9') return false;\n        if (parts[0].charAt(2) < '0' || parts[0].charAt(2) > '9') return false;\n        if (parts[1].charAt(2) < '0' || parts[1].charAt(2) > '9') return false;\n        if (parts[2].charAt(2) < '0' || parts[2].charAt(2) > '9') return false;\n        if (parts[0].charAt(0) > '2') return false;\n        if (parts[1].charAt(0) > '2') return false;\n        if (parts[2].charAt(0) > '9') return false;\n        if (parts[0].charAt(1) > '2') return false;\n        if (parts[1].charAt(1) > '2') return false;\n        if (parts[2].charAt(1) > '9') return false;\n        \n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "/tmp/tmprzvgqcsm.java:49: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] d = date.split(\"-\");\n        if (d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        if (tokens[0].length() != 2) return false;\n        if (tokens[1].length() != 2) return false;\n        if (tokens[2].length() != 4) return false;\n        if (tokens[0].charAt(0) < '0' || tokens[0].charAt(0) > '2') return false;\n        if (tokens[0].charAt(1) < '0' || tokens[0].charAt(1) > '9') return false;\n        if (tokens[1].charAt(0) < '0' || tokens[1].charAt(0) > '9') return false;\n        if (tokens[1].charAt(1) < '0' || tokens[1].charAt(1) > '9') return false;\n        if (tokens[2].charAt(0) < '0' || tokens[2].charAt(0) > '9') return false;\n        if (tokens[2].charAt(1) < '0' || tokens[2].charAt(1) > '9') return false;\n        if (tokens[2].charAt(2) < '0' || tokens[2].charAt(2) > '9') return false;\n        if (tokens[2].charAt(3) < '0' || tokens[2].charAt(3) > '9') return false;\n        if (tokens[0].charAt(0) == '0' && tokens[0].charAt(1) == '0') return false;\n        if (tokens[1].charAt(0) == '0' && tokens[1].charAt(1) == '0') return false;\n        if (tokens[2].charAt(0) == '0' && tokens[2].charAt(1) == '0') return false;\n        if (tokens[0].charAt(0) == '1' && tokens[\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "/tmp/tmpdigcyqr_.java:45: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        int m = Integer.parseInt(d[0]);\n        int d = Integer.parseInt(d[1]);\n        int y = Integer.parseInt(d[2]);\n        if(m < 1 || m > 12) return false;\n        if(d < 1 || d > 31) return false;\n        if(m == 2 && d > 29) return false;\n        if(m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {\n            if(d < 1 || d > 30) return false;\n        }\n        if(m == 4 || m == 6 || m == 9 || m == 11) {\n            if(d < 1 || d > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "/tmp/tmpoxku4sni.java:31: error: variable d is already defined in method validDate(String)\n        int d = Integer.parseInt(d[1]);\n            ^\n/tmp/tmpoxku4sni.java:31: error: array required, but int found\n        int d = Integer.parseInt(d[1]);\n                                  ^\n/tmp/tmpoxku4sni.java:32: error: array required, but int found\n        int y = Integer.parseInt(d[2]);\n                                  ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if (d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            if (month == 2) {\n                if (day < 1 || day > 29) {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        if(date_arr[0].length() != 2) return false;\n        if(date_arr[1].length() != 2) return false;\n        if(date_arr[2].length() != 4) return false;\n        if(date_arr[0].charAt(0) < '0' || date_arr[0].charAt(0) > '9') return false;\n        if(date_arr[0].charAt(1) < '0' || date_arr[0].charAt(1) > '9') return false;\n        if(date_arr[1].charAt(0) < '0' || date_arr[1].charAt(0) > '9') return false;\n        if(date_arr[1].charAt(1) < '0' || date_arr[1].charAt(1) > '9') return false;\n        if(date_arr[2].charAt(0) < '0' || date_arr[2].charAt(0) > '9') return false;\n        if(date_arr[2].charAt(1) < '0' || date_arr[2].charAt(1) > '9') return false;\n        if(date_arr[2].charAt(2) < '0' || date_arr[2].charAt(2) > '9') return false;\n        if(date_arr[2].charAt(3) < '0' || date_arr[2].charAt(3) > '9') return false;\n        if(Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if(Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 31) return false;\n        if(Integer.parse\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "/tmp/tmplrwo6smm.java:44: error: ')' expected\n        if(Integer.parse\n                        ^\n/tmp/tmplrwo6smm.java:45: error: illegal start of statement\n    }\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        if(date_arr[0].length() != 2) return false;\n        if(date_arr[1].length() != 2) return false;\n        if(date_arr[2].length() != 4) return false;\n        if(Integer.parseInt(date_arr[0]) < 1 || Integer.parseInt(date_arr[0]) > 12) return false;\n        if(Integer.parseInt(date_arr[1]) < 1 || Integer.parseInt(date_arr[1]) > 31) return false;\n        if(Integer.parseInt(date_arr[2]) < 1 || Integer.parseInt(date_arr[2]) > 30) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 2) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 4) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 6) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 9) return false;\n        if(Integer.parseInt(date_arr[1]) == 2 && Integer.parseInt(date_arr[0]) == 11) return false;\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm20_455w.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date == null || date.isEmpty()) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        String month = parts[0];\n        String day = parts[1];\n        String year = parts[2];\n        int month_num = Integer.parseInt(month);\n        int day_num = Integer.parseInt(day);\n        int year_num = Integer.parseInt(year);\n        if (month_num < 1 || month_num > 12) return false;\n        if (day_num < 1 || day_num > 31) return false;\n        if (month_num == 2) {\n            if (day_num < 1 || day_num > 29) return false;\n        } else if (month_num == 1 || month_num == 3 || month_num == 5 || month_num == 7 || month_num == 8 || month_num == 10 || month_num == 12) {\n            if (day_num < 1 || day_num > 30) return false;\n        } else if (month_num == 4 || month_num == 6 || month_num == 9 || month_num == 11) {\n            if (day_num < 1 || day_num > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] d = date.split(\"-\");\n        if(d.length != 3) return false;\n        if(Integer.parseInt(d[0]) < 1 || Integer.parseInt(d[0]) > 12) return false;\n        if(Integer.parseInt(d[1]) < 1 || Integer.parseInt(d[1]) > 31) return false;\n        if(Integer.parseInt(d[2]) < 1 || Integer.parseInt(d[2]) > 31) return false;\n        if(Integer.parseInt(d[1]) == 2 && Integer.parseInt(d[2]) > 29) return false;\n        if(Integer.parseInt(d[1]) == 2 && Integer.parseInt(d[2]) < 29) return false;\n        if(Integer.parseInt(d[1]) == 1 || Integer.parseInt(d[1]) == 3 || Integer.parseInt(d[1]) == 5 || Integer.parseInt(d[1]) == 7 || Integer.parseInt(d[1]) == 8 || Integer.parseInt(d[1]) == 10 || Integer.parseInt(d[1]) == 12) {\n            if(Integer.parseInt(d[2]) < 1 || Integer.parseInt(d[2]) > 30) return false;\n        }\n        if(Integer.parseInt(d[1]) == 4 || Integer.parseInt(d[1]) == 6 || Integer.parseInt(d[1]) == 9 || Integer.parseInt(d[1]) == 11) {\n            if(Integer.parseInt(d[2]) < 1 || Integer.parseInt(d[2]) > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhfo8xhm.java:44)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2) {\n            if (day < 1 || day > 29) return false;\n        } else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        } else if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if (date_arr.length != 3) return false;\n        if (date_arr[0].length() != 2) return false;\n        if (date_arr[1].length() != 2) return false;\n        if (date_arr[2].length() != 4) return false;\n        if (date_arr[0].charAt(0) < '0' || date_arr[0].charAt(0) > '2') return false;\n        if (date_arr[0].charAt(1) < '0' || date_arr[0].charAt(1) > '9') return false;\n        if (date_arr[1].charAt(0) < '0' || date_arr[1].charAt(0) > '2') return false;\n        if (date_arr[1].charAt(1) < '0' || date_arr[1].charAt(1) > '9') return false;\n        if (date_arr[2].charAt(0) < '0' || date_arr[2].charAt(0) > '2') return false;\n        if (date_arr[2].charAt(1) < '0' || date_arr[2].charAt(1) > '9') return false;\n        if (date_arr[2].charAt(2) < '0' || date_arr[2].charAt(2) > '9') return false;\n        if (date_arr[2].charAt(3) < '0' || date_arr[2].charAt(3) > '9') return false;\n        if (date_arr[0].charAt(0) == '0' && date_arr[0].charAt(1) == '0') return false;\n        if (date_arr[1].charAt(0) == '0' && date_arr[1].charAt(1) == '0') return false;\n        if (date_arr[2].charAt(0) == '0' && date_arr[2].charAt(1) == '0') return\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "/tmp/tmp3chbtx0j.java:44: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] d = date.split(\"-\");\n        if (d.length != 3) return false;\n        int month = Integer.parseInt(d[0]);\n        int day = Integer.parseInt(d[1]);\n        int year = Integer.parseInt(d[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        if (parts[0].length() != 2) return false;\n        if (parts[1].length() != 2) return false;\n        if (parts[2].length() != 4) return false;\n        int month = Integer.parseInt(parts[1]);\n        int day = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe49k5spx.java:47)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] tokens = date.split(\"-\");\n        if (tokens.length != 3) return false;\n        int month = Integer.parseInt(tokens[0]);\n        int day = Integer.parseInt(tokens[1]);\n        int year = Integer.parseInt(tokens[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2) {\n            if(day < 1 || day > 29) return false;\n        }\n        else if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        else if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if(date.length() == 0) return false;\n        String[] date_arr = date.split(\"-\");\n        if(date_arr.length != 3) return false;\n        int month = Integer.parseInt(date_arr[0]);\n        int day = Integer.parseInt(date_arr[1]);\n        int year = Integer.parseInt(date_arr[2]);\n        if(month < 1 || month > 12) return false;\n        if(day < 1 || day > 31) return false;\n        if(month == 2 && day > 29) return false;\n        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if(day < 1 || day > 30) return false;\n        }\n        if(month == 4 || month == 6 || month == 9 || month == 11) {\n            if(day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.length() == 0) {\n            return false;\n        }\n        String[] date_array = date.split(\"-\");\n        if (date_array.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(date_array[0]);\n        int day = Integer.parseInt(date_array[1]);\n        int year = Integer.parseInt(date_array[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 31) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293060,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) return false;\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) return false;\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) return false;\n        if (day < 1 || day > 31) return false;\n        if (month == 2 && day > 29) return false;\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) return false;\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293056,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // You have to write a function which validates a given date string and\n    // returns true if the date is valid otherwise false.\n    // The date is valid if all of the following rules are satisfied:\n    // 1. The date string is not empty.\n    // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    // 3. The months should not be less than 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n    // >>> valid_date('03-11-2000')\n    // True\n    // >>> valid_date('15-01-2012')\n    // False\n    // >>> valid_date('04-0-2040')\n    // False\n    // >>> valid_date('06-04-2020')\n    // True\n    // >>> valid_date('06/04/2020')\n    // False\n    public static boolean validDate(String date) {\n        if (date.isEmpty()) {\n            return false;\n        }\n        String[] parts = date.split(\"-\");\n        if (parts.length != 3) {\n            return false;\n        }\n        int month = Integer.parseInt(parts[0]);\n        int day = Integer.parseInt(parts[1]);\n        int year = Integer.parseInt(parts[2]);\n        if (month < 1 || month > 12) {\n            return false;\n        }\n        if (day < 1 || day > 31) {\n            return false;\n        }\n        if (month == 2 && day > 29) {\n            return false;\n        }\n        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n            if (day < 1 || day > 30) {\n                return false;\n            }\n        }\n        if (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day < 1 || day > 29) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validDate((\"03-11-2000\")) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\")) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\")) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n    assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\")) == (false));\n    }\n\n}\n",
      "timestamp": 1664293059,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
name: HumanEval_83_starts_one_ends
language: php
prompt: "<?php\n// Given a positive integer n, return the count of the numbers of\
  \ n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
  \ {\n"
tests: "function candidate(...$args) {\n    return starts_one_ends(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return\
    \ 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\n\
    echo starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\n\
    echo starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8)\
    \ . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\n\
    echo starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho\
    \ starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15)\
    \ . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) .\
    \ PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\n\
    echo starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho\
    \ starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24)\
    \ . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) .\
    \ PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\n\
    echo starts", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\\
    n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\n\
    echo starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6)\
    \ . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\
    \\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\"\
    ;\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\n\
    echo starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho\
    \ starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17)\
    \ . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) .\
    \ \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\
    \\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\"\
    ;\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\n\
    echo starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho\
    \ starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30)\
    \ . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) .\
    \ \"\\n\";\necho starts_one_ends(33) . \"\\n", "  if ($n == 1) {\n    return 2;\n\
    \  }\n  if ($n == 2) {\n    return 4;\n  }\n  return starts_one_ends($n - 1) +\
    \ starts_one_ends($n - 2);\n}\n", "  $count = 0;\n  $start = 1;\n  $end = 1;\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $start *= 10;\n    $end = $end * 10 + 1;\n\
    \  }\n  for ($i = $start; $i <= $end; $i++) {\n    if ($i % 10 == 1) {\n     \
    \ $count++;\n    }\n  }\n  return $count;\n}\n\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n  \
    \  }\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = 1;\n    $dp[1] = 2;\n    for\
    \ ($i = 2; $i < $n; $i++) {\n        $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  \
    \  }\n    return $dp[$n - 1] * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "    if ($n == 1) {\n     \
    \   return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts", "    if ($n == 1) {\n     \
    \   return 2;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts_one_ends(29) . PHP_EOL;\necho starts_", "    if ($n\
    \ == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count * 2;\n\
    }\n", "  $count = 0;\n  $start = 1;\n  $end = 1;\n  for ($i = 1; $i < $n; $i++)\
    \ {\n    $start *= 10;\n    $end = $end * 10 + 1;\n  }\n  $count += $end - $start\
    \ + 1;\n  $count += $start - 1;\n  return $count;\n}\n", "    if ($n == 1) {\n\
    \        return 2;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $count += pow(9, $i - 1);\n    }\n    return $count * 2;\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  if\
    \ ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  $count\
    \ = 2;\n  $count += pow(5, $n - 1);\n  $count += pow(5, $n - 2);\n  return $count;\n\
    }\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\\
    n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\n\
    echo starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6)\
    \ . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\
    \\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\"\
    ;\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\n\
    echo starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho\
    \ starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17)\
    \ . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) .\
    \ \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\
    \\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\"\
    ;\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\n\
    echo starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho\
    \ starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30)\
    \ . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) .\
    \ \"\\n\";\necho starts_one_ends(33) . \"\\n", "    if ($n == 1) {\n        return\
    \ 2;\n    } else {\n        return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n    }\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7)\
    \ . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\n\
    echo starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho\
    \ starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14)\
    \ . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) .\
    \ PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\n\
    echo starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho\
    \ starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23)\
    \ . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) .\
    \ PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\n\
    echo starts_one_ends(28) . PHP_EOL;\necho starts_one_ends(29) . PHP_EOL", "  \
    \  if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    $count += pow(10,\
    \ $n - 1);\n    $count += pow(10, $n - 2);\n    return $count;\n}\n", "  if ($n\
    \ == 1) {\n    return 2;\n  }\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $count += pow(2, $i - 1);\n  }\n  return $count;\n}\n", "  $count = 0;\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return\
    \ $count;\n}\n\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) .\
    \ PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "    if ($n == 1) {\n       \
    \ return 2;\n    }\n    $count = 0;\n    $count += starts_one_ends($n - 1);\n\
    \    $count += pow(10, $n - 1);\n    return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho", "    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n\
    }\n\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\n\
    echo starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7)\
    \ . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\
    \\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\"\
    ;\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\n\
    echo starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho\
    \ starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18)\
    \ . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) .\
    \ \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\
    \\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\"\
    ;\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\n\
    echo starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho\
    \ starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31)\
    \ . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) .\
    \ \"\\n\";\necho starts_one_ends(34) . \"\\n\";\necho starts_one_ends(35) . \"\
    \\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(1) .\
    \ \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\\
    n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\n\
    echo starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8)\
    \ . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\
    \\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\"\
    ;\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\n\
    echo starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho\
    \ starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19)\
    \ . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) .\
    \ \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\
    \\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\"\
    ;\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\n\
    echo starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho\
    \ starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32)\
    \ . \"\\n\";\necho starts_one_ends(33) . \"\\n", "    if ($n == 1) {\n       \
    \ return 2;\n    } else {\n        return starts_one_ends($n - 1) + 9 * pow(10,\
    \ $n - 2);\n    }\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n\";", "  if ($n == 1) {\n    return 2;\n  }\n\
    \  if ($n == 2) {\n    return 4;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(4);", "    $count = 0;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n\
    }\n\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\n\
    echo starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7)\
    \ . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\
    \\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\"\
    ;\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\n\
    echo starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho\
    \ starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18)\
    \ . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) .\
    \ \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\
    \\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\"\
    ;\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\n\
    echo starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho\
    \ starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31)\
    \ . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) .\
    \ \"\\n\";\necho starts_one_ends(34) . \"\\n\";\necho starts_one_ends(35) . \"\
    \\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\n\
    echo starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5)\
    \ . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\
    \\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\"\
    ;\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\n\
    echo starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho\
    \ starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16)\
    \ . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) .\
    \ \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\
    \\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\"\
    ;\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\n\
    echo starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho\
    \ starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29)\
    \ . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) .\
    \ \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\
    \\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(3) . \"\\n\";", "  $count = 0;\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho\
    \ starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n", " \
    \   if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count\
    \ * 2;\n}\n", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return\
    \ 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\n\
    echo starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\n\
    echo starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8)\
    \ . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\n\
    echo starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho\
    \ starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15)\
    \ . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) .\
    \ PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\n\
    echo starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho\
    \ starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24)\
    \ . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) .\
    \ PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\n\
    echo starts", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(3);", " \
    \ $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n\
    \  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n", "    $count = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n\n\
    $n = 3;\necho starts_one_ends($n);", "  $count = 0;\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;",
  "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts", "    $count = 0;\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return\
    \ $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count\
    \ += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(4) . \"\
    \\n\";", "  if ($n == 1) {\n    return 2;\n  }\n  $start = pow(10, $n - 1);\n\
    \  $end = pow(10, $n) - 1;\n  $count = 0;\n  for ($i = $start; $i <= $end; $i++)\
    \ {\n    if (strpos($i, '1') === 0 || strpos($i, '1') === strlen($i) - 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n", "  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\n\
    echo starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5)\
    \ . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\
    \\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\"\
    ;\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\n\
    echo starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho\
    \ starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16)\
    \ . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) .\
    \ \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\
    \\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\"\
    ;\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\n\
    echo starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho\
    \ starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29)\
    \ . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) .\
    \ \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\
    \\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n", "    $count = 0;\n    $start\
    \ = 1;\n    $end = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += $start\
    \ + $end;\n        $start *= 10;\n        $end = $end * 10 + 1;\n    }\n    return\
    \ $count;\n}\n\n$n = 2;\necho starts_one_ends($n) . PHP_EOL;", "  $count = 0;\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return\
    \ $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count\
    \ += pow(10, $i - 1);\n  }\n  return $count;\n}\n", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 4;\n  }\n  $count = 2;\n  $count += pow(10,\
    \ $n - 1) - pow(9, $n - 1);\n  $count += pow(10, $n - 1) - pow(9, $n - 1);\n \
    \ return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(", "  if ($n\
    \ == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 4;\n  }\n  $count\
    \ = 4;\n  for ($i = 3; $i <= $n; $i++) {\n    $count = $count * (9 - $i + 2);\n\
    \  }\n  return $count;\n}\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  if\
    \ ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return\
    \ 3;\n  }\n  $count = 3;\n  $count += pow(5, $n - 2);\n  return $count;\n}\n\n\
    echo starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;",
  "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(1) . \"\\n\"\
    ;\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho\
    \ starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6)\
    \ . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\
    \\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\"\
    ;\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\n\
    echo starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho\
    \ starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17)\
    \ . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) .\
    \ \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\
    \\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\"\
    ;\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\n\
    echo starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho\
    \ starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30)\
    \ . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) .\
    \ \"\\n\";\necho starts_one_ends(33) . \"\\n", "  if ($n == 1) {\n    return 2;\n\
    \  }\n  $dp = [1, 1];\n  for ($i = 2; $i <= $n; $i++) {\n    $dp[$i] = $dp[$i\
    \ - 1] + $dp[$i - 2];\n  }\n  return $dp[$n] * 2;\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "  if\
    \ ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  $count += pow(10, $n - 1);\n\
    \  $count += pow(10, $n - 2);\n  return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 4;\n  }\n  return starts_one_ends($n -\
    \ 1) + starts_one_ends($n - 2);\n}\n\n$n = 5;\necho starts_one_ends($n);", " \
    \   if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \necho starts_one_ends(3);", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n ==\
    \ 2) {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i-1);\n  }\n  return $count;\n}\n\necho starts_one_ends(2);\necho \"\
    \\n\";\necho starts_one_ends(3);\necho \"\\n\";\necho starts_one_ends(4);\necho\
    \ \"\\n\";\necho starts_one_ends(5);\necho \"\\n\";\necho starts_one_ends(6);\n\
    echo \"\\n\";\necho starts_one_ends(7);\necho \"\\n\";\necho starts_one_ends(8);\n\
    echo \"\\n\";\necho starts_one_ends(9);\necho \"\\n\";\necho starts_one_ends(10);\n\
    echo \"\\n\";\necho starts_one_ends(11);\necho \"\\n\";\necho starts_one_ends(12);\n\
    echo \"\\n\";\necho starts_one_ends(13);\necho \"\\n\";\necho starts_one_ends(14);\n\
    echo \"\\n\";\necho starts_one_ends(15);\necho \"\\n\";\necho starts_one_ends(16);\n\
    echo \"\\n\";\necho starts_one_ends(17);\necho \"\\n\";\necho starts_one_ends(18);\n\
    echo \"\\n\";\necho starts_one_ends(19);\necho \"\\n\";\necho starts_one_ends(20);\n\
    echo \"\\n\";\necho starts_one_ends(21);\necho \"\\n\";\necho starts_one_ends(22);\n\
    echo \"\\n\";\necho starts_one_ends(23);\necho \"\\n\";\necho starts_one_ends(24);\n\
    echo \"\\n\";\necho starts_one_ends(25);\necho \"\\n\";\necho starts_one_ends(26);\n\
    echo \"\\n\";\necho starts_one_ends(27);\necho \"\\n\";\necho starts_one_ends(28);\n\
    echo \"\\n\";\necho starts_one_ends(29);\necho \"\\n\";\necho starts_one_ends(30);\n\
    echo \"\\n\";\necho starts_one_ends(31);\necho \"\\n\";\necho starts_one_ends(32);\n",
  "    if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    $count += starts_one_ends($n\
    \ - 1);\n    $count += pow(10, $n - 1);\n    return $count;\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  \
    \  if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho\
    \ starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "  $count = 0;\n  $start = 1;\n  $end = 1;\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $start *= 10;\n    $end = $end * 10 + 1;\n  }\n\
    \  $count += $end - $start;\n  return $count;\n}\n", "    if ($n == 1) {\n   \
    \     return 2;\n    }\n    $dp = array_fill(0, $n + 1, 0);\n    $dp[1] = 2;\n\
    \    $dp[2] = 3;\n    for ($i = 3; $i <= $n; $i++) {\n        $dp[$i] = $dp[$i\
    \ - 1] + $dp[$i - 2];\n    }\n    return $dp[$n];\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "  if\
    \ ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    $count += pow(10, $i);\n  }\n  return $count * 2;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32)", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho\
    \ starts_one_ends(3);", "    if ($n == 1) {\n        return 2;\n    }\n    return\
    \ starts_one_ends($n - 1) + 9 * pow(10, $n - 2);\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  \
    \  $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i\
    \ <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\n\
    echo starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n", " \
    \   $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts_one_ends(29) . PHP_EOL;\necho starts_one_ends(30) . PHP_EOL;\necho starts_one_ends(31)\
    \ . PHP_", "    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n\
    \        return 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i - 1);\n  }\n  return $count;\n}\n", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  $dp = array_fill(0, $n, 0);\n  $dp[0] = 1;\n  $dp[1] = 2;\n  for\
    \ ($i = 2; $i < $n; $i++) {\n    $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  }\n \
    \ return $dp[$n - 1] * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n \
    \ $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n\
    \  }\n  return $count * 2;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";", "  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n\
    \  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n", "  $count = 0;\n  $start = 1;\n  $end = 1;\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $start *= 10;\n    $end = $end * 10 + 1;\n\
    \  }\n  $count += $end - $start + 1;\n  $start = 1;\n  $end = 1;\n  for ($i =\
    \ 1; $i < $n; $i++) {\n    $start *= 10;\n    $end = $end * 10 + 1;\n  }\n  $count\
    \ += $end - $start + 1;\n  return $count;\n}\n\necho starts_one_ends(1) . PHP_EOL;\n\
    echo starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n -\
    \ 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) .\
    \ PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\n\
    echo starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho\
    \ starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18)\
    \ . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) .\
    \ PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\n\
    echo starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho\
    \ starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27)\
    \ . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho starts", "    if ($n ==\
    \ 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $count += pow(2, $i - 1);\n    }\n    return $count;\n}\n\n\
    echo starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\n\
    echo starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8)\
    \ . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;",
  "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n\
    \  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n", "    $count = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n",
  "  $count = 0;\n  $start = pow(10, $n - 1);\n  $end = pow(10, $n) - 1;\n  for ($i\
    \ = $start; $i <= $end; $i++) {\n    if (strpos(strval($i), '1') === 0 || strpos(strval($i),\
    \ '1') === strlen(strval($i)) - 1) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n", "  if ($n == 1) {\n    return 2;\n  }\n  $dp = [0, 1, 1];\n  for ($i = 3;\
    \ $i <= $n; $i++) {\n    $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  }\n  return $dp[$n]\
    \ * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n    }\n    $dp = array_fill(0,\
    \ $n, 0);\n    $dp[0] = 1;\n    $dp[1] = 2;\n    for ($i = 2; $i < $n; $i++) {\n\
    \        $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n    }\n    return $dp[$n - 1] *\
    \ 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;", "  $count = 0;\n  $start = pow(10, $n - 1);\n  $end = pow(10, $n)\
    \ - 1;\n  for ($i = $start; $i <= $end; $i++) {\n    if (strpos($i, '1') === 0\
    \ || strpos($i, '1') === strlen($i) - 1) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n      \
    \  $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(2);",
  "    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho\
    \ starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "  if ($n == 1) {\n    return 2;\n  }\n  $count =\
    \ 1;\n  for ($i = 1; $i < $n; $i++) {\n    $count *= 9;\n  }\n  return $count\
    \ * 2;\n}\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count\
    \ += pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  $count = 0;\n  for\
    \ ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(3) . PHP_EOL;", "  $count = 0;\n  $start = 1;\n  $end\
    \ = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $start *= 10;\n    $end = $end *\
    \ 10 + 1;\n  }\n  $start = $start / 10;\n  $end = $end / 10;\n  for ($i = $start;\
    \ $i <= $end; $i++) {\n    if ($i % 10 == 1 || $i % 10 == 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28", "  if ($n == 1) return 2;\n  if ($n == 2)\
    \ return 3;\n  if ($n == 3) return 5;\n  if ($n == 4) return 8;\n  if ($n == 5)\
    \ return 13;\n  if ($n == 6) return 21;\n  if ($n == 7) return 34;\n  if ($n ==\
    \ 8) return 55;\n  if ($n == 9) return 89;\n  if ($n == 10) return 144;\n  if\
    \ ($n == 11) return 233;\n  if ($n == 12) return 377;\n  if ($n == 13) return\
    \ 610;\n  if ($n == 14) return 987;\n  if ($n == 15) return 1597;\n  if ($n ==\
    \ 16) return 2584;\n  if ($n == 17) return 4181;\n  if ($n == 18) return 6765;\n\
    \  if ($n == 19) return 10946;\n  if ($n == 20) return 17711;\n  if ($n == 21)\
    \ return 28657;\n  if ($n == 22) return 46368;\n  if ($n == 23) return 75025;\n\
    \  if ($n == 24) return 121393;\n  if ($n == 25) return 196418;\n  if ($n == 26)\
    \ return 317811;\n  if ($n == 27) return 514229;\n  if ($n == 28) return 832040;\n\
    \  if ($n == 29) return 1346269;\n  if ($n == 30) return 2178309;\n  if ($n ==\
    \ 31) return 3524578;\n  if ($n == 32) return 5702887;\n  if ($n == 33) return\
    \ 9227465;\n  if ($n == 34) return 14930352;\n  if ($n == 35) return 24157817;\n\
    \  if ($n == 36) return 39088169;\n  if ($n == 37) return 63245986;\n  if ($n\
    \ == 38) return 102334155;\n  if ($n == 39) return 165580141;\n  if ($n == 40)\
    \ return 267914296;\n  if ($n == 41) return 433494437;\n  if ($n == 42) return",
  "    if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count\
    \ * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  $count\
    \ += starts_one_ends($n - 1);\n  $count += pow(10, $n - 1);\n  return $count;\n\
    }\n\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts_one_ends(29) . PHP_EOL;\necho", "  if ($n == 1) {\n    return 2;\n  }\n\
    \  $count = 0;\n  $count += pow(10, $n - 1);\n  $count += 9 * pow(10, $n - 2);\n\
    \  return $count;\n}\n\n$n = 1;\necho starts_one_ends($n) . PHP_EOL;\n\n$n = 2;\n\
    echo starts_one_ends($n) . PHP_EOL;\n\n$n = 3;\necho starts_one_ends($n) . PHP_EOL;\n\
    \n$n = 4;\necho starts_one_ends($n) . PHP_EOL;\n\n$n = 5;\necho starts_one_ends($n)\
    \ . PHP_EOL;", "    $count = 0;\n    $start = pow(10, $n - 1);\n    $end = pow(10,\
    \ $n) - 1;\n    for ($i = $start; $i <= $end; $i++) {\n        if (strpos($i,\
    \ '1') === 0 || strpos($i, '1') === strlen($i) - 1) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$n = 3;\necho starts_one_ends($n)\
    \ . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n ==\
    \ 2) {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  \
    \  if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho\
    \ starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5)\
    \ . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\
    \\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\"\
    ;\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\n\
    echo starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho\
    \ starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16)\
    \ . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) .\
    \ \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\
    \\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\"\
    ;\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\n\
    echo starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho\
    \ starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29)\
    \ . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) .\
    \ \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts", "    $count = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n\
    \    return $count;\n}\n\necho starts_one_ends(3);", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10,\
    \ $i - 1);\n  }\n  return $count * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\n\
    echo starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "  $count = 0;\n  for ($i =\
    \ 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\n\
    echo starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5)\
    \ . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\
    \\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\"\
    ;\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\n\
    echo starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho\
    \ starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16)\
    \ . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) .\
    \ \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\
    \\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\"\
    ;\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\n\
    echo starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho\
    \ starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29)\
    \ . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) .\
    \ \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\
    \\n", "  if ($n == 1) {\n    return 2;\n  }\n  return starts_one_ends($n - 1)\
    \ + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7)\
    \ . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\n\
    echo starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho\
    \ starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14)\
    \ . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) .\
    \ PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\n\
    echo starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho\
    \ starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23)\
    \ . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) .\
    \ PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\n\
    echo starts_one_ends(28) . PHP_EOL;\necho starts_one_ends(29) . PHP_EOL;\necho\
    \ starts_", "    if ($n == 1) {\n        return 2;\n    }\n    return starts_one_ends($n\
    \ - 1) + pow(10, $n - 1);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7)\
    \ . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\n\
    echo starts_one_ends(10) . PHP_EOL;", "  $count = 0;\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  \
    \  $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n\n$n = 3;\necho starts_one_ends($n)\
    \ . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n    }\n    $dp = array_fill(0,\
    \ $n, 0);\n    $dp[0] = 1;\n    $dp[1] = 2;\n    for ($i = 2; $i < $n; $i++) {\n\
    \        $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n    }\n    return $dp[$n - 1] *\
    \ 2;\n}\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count\
    \ += pow(10, $i - 1);\n    }\n    return $count;\n}\n", "    $count = 0;\n   \
    \ for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n\
    \    return $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n", "    if ($n == 1)\
    \ {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n\
    \    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n", "  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n\
    \  return $count;\n}\n", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2)\
    \ {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n", "    if ($n == 1) {\n        return 2;\n    }\n    $start_one =\
    \ 1;\n    $end_one = 1;\n    $others = 9;\n    for ($i = 2; $i <= $n; $i++) {\n\
    \        $start_one = $others;\n        $end_one = $others + $start_one;\n   \
    \     $others = $others * 9;\n    }\n    return $start_one + $end_one;\n}\n\n\
    echo starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\n", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 4;\n  }\n  return starts_one_ends($n -\
    \ 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) .\
    \ PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\n\
    echo starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho\
    \ starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18)\
    \ . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) .\
    \ PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\n\
    echo starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho\
    \ starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27)\
    \ . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho starts", "    if ($n ==\
    \ 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n\
    \    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts", "    if ($n == 1) {\n        return 2;\n    }\n    $dp = [1, 1];\n\
    \    for ($i = 2; $i <= $n; $i++) {\n        $dp[$i] = $dp[$i - 1] + $dp[$i -\
    \ 2];\n    }\n    return $dp[$n] * 2;\n}\n", "  $count = 0;\n  for ($i = 1; $i\
    \ <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\n\
    echo starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4)\
    \ . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\
    \\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\"\
    ;\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho\
    \ starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13)\
    \ . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) .\
    \ \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\
    \\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\"\
    ;\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\n\
    echo starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho\
    \ starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26)\
    \ . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) .\
    \ \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\
    \\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\"\
    ;\necho starts_one_ends(33) . \"\\n\";\necho starts_one_ends(34) . \"\\n", " \
    \   if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(9, $i - 1);\n    }\n    return $count\
    \ * 2;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\\
    n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\n\
    echo starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7)\
    \ . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\
    \\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\"\
    ;\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\n\
    echo starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho\
    \ starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18)\
    \ . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) .\
    \ \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\
    \\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\"\
    ;\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\n\
    echo starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho\
    \ starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31)\
    \ . \"\\n\";\necho starts_one_ends(", "    if ($n == 1) {\n        return 2;\n\
    \    }\n    $count = 0;\n    $count += pow(9, $n - 1);\n    $count += pow(9, $n\
    \ - 1);\n    return $count;\n}\n\n$n = 3;\necho starts_one_ends($n);", "  if ($n\
    \ == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  $dp = [];\n\
    \  $dp[1] = 2;\n  $dp[2] = 3;\n  for ($i = 3; $i <= $n; $i++) {\n    $dp[$i] =\
    \ $dp[$i - 1] + $dp[$i - 2];\n  }\n  return $dp[$n];\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "   \
    \ if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \n$n = 4;\necho starts_one_ends($n);", "  if ($n == 1) {\n    return 2;\n  }\n\
    \  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "    if ($n == 1) {\n        return 2;\n    }\n  \
    \  $dp = [1, 1];\n    for ($i = 2; $i <= $n; $i++) {\n        $dp[$i] = $dp[$i\
    \ - 1] + $dp[$i - 2];\n    }\n    return $dp[$n] * 2;\n}\n\n$n = 3;\necho starts_one_ends($n)\
    \ . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(9, $i - 1);\n  }\n  return $count\
    \ * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n\
    \    $count += starts_one_ends($n - 1);\n    $count += pow(10, $n - 1);\n    return\
    \ $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count\
    \ += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\
    \\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\"\
    ;\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho\
    \ starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8)\
    \ . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\
    \\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\"\
    ;\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\n\
    echo starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho\
    \ starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19)\
    \ . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) .\
    \ \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\
    \\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\"\
    ;\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\n\
    echo starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho\
    \ starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32)\
    \ . \"\\n\";\necho starts_one_ends(33) . \"\\n", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  return starts_one_ends($n - 1) + 9 * pow(10, $n - 2);\n}\n\necho\
    \ starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n\";\n\
    echo starts_one", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count\
    \ += pow(10, $i - 1);\n  }\n  return $count;\n}\n", "  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n\
    }\n\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\n\
    echo starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6)\
    \ . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\
    \\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\"\
    ;\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\n\
    echo starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho\
    \ starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17)\
    \ . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) .\
    \ \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\
    \\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\"\
    ;\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\n\
    echo starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho\
    \ starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30)\
    \ . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) .\
    \ \"\\n\";\necho starts_one_ends(33) . \"\\n\";\necho starts_one_ends(34) . \"\
    \\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(3);",
  "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts", "  if ($n == 1) {\n    return 2;\n  } else {\n    return starts_one_ends($n\
    \ - 1) + starts_one_ends($n - 2);\n  }\n}\n", "  $count = 0;\n  for ($i = 1; $i\
    \ <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\n\
    echo starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n", " \
    \   if ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count\
    \ * 2;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count +=\
    \ pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\\
    n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\n\
    echo starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6)\
    \ . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\
    \\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\"\
    ;\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\n\
    echo starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho\
    \ starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17)\
    \ . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) .\
    \ \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\
    \\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\"\
    ;\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\n\
    echo starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho\
    \ starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30)\
    \ . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) .\
    \ \"\\n\";\necho starts_one_ends(33) . \"\\n", "    if ($n == 1) {\n        return\
    \ 2;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count\
    \ += pow(10, $i - 1);\n    }\n    return $count * 2;\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  if\
    \ ($n == 1) return 2;\n  if ($n == 2) return 3;\n  $count = 3;\n  for ($i = 3;\
    \ $i <= $n; $i++) {\n    $count += pow(2, $i - 2);\n  }\n  return $count;\n}\n\
    \necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho\
    \ starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $count += pow(2, $i - 1);\n  }\n  return $count;\n\
    }\n", "    if ($n == 1) {\n        return 2;\n    } else if ($n == 2) {\n    \
    \    return 3;\n    } else {\n        return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n    }\n}\n\necho starts_one_ends(3);", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 4;\n  }\n  $count = 4;\n  $start = 10;\n\
    \  $end = 10;\n  for ($i = 3; $i <= $n; $i++) {\n    $count += $start + $end;\n\
    \    $start = $start * 10;\n    $end = $end * 10;\n  }\n  return $count;\n}\n\n\
    echo starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n", "  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n\
    \  return $count;\n}\n\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n\";\n\
    echo starts_one_ends(34) . \"\\n", "    if ($n == 1) {\n        return 2;\n  \
    \  } else {\n        return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n\
    \    }\n}\n\necho starts_one_ends(3);", "    $count = 0;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n\
    }\n", "  if ($n == 1) {\n    return 2;\n  }\n  $dp = [1, 1];\n  for ($i = 2; $i\
    \ <= $n; $i++) {\n    $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  }\n  return $dp[$n]\
    \ * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return\
    \ 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\n\
    echo starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\n\
    echo starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8)\
    \ . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\n\
    echo starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho\
    \ starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15)\
    \ . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) .\
    \ PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\n\
    echo starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho\
    \ starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24)\
    \ . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) .\
    \ PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\n\
    echo starts", "    if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2)\
    \ {\n        return 3;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(3);", "  $count = 0;\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho\
    \ starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4)\
    \ . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\
    \\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\"\
    ;\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho\
    \ starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13)\
    \ . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) .\
    \ \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\
    \\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\"\
    ;\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\n\
    echo starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho\
    \ starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26)\
    \ . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) .\
    \ \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\
    \\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\"\
    ;\necho starts_one_ends(33) . \"\\n\";\necho starts_one_ends(34) . \"\\n", " \
    \   if ($n == 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return\
    \ 4;\n    }\n    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\
    \necho starts_one_ends(3);", "  if ($n == 1) {\n    return 2;\n  }\n  $start_one\
    \ = pow(10, $n - 1);\n  $end_one = 1;\n  for ($i = 0; $i < $n - 1; $i++) {\n \
    \   $end_one *= 10;\n  }\n  return $start_one + $end_one;\n}\n\nfor ($i = 1; $i\
    \ < 10; $i++) {\n  echo starts_one_ends($i) . \"\\n\";\n}", "    if ($n == 1)\
    \ {\n        return 2;\n    }\n    $count = 0;\n    $count += pow(10, $n - 1);\n\
    \    $count += pow(10, $n - 2);\n    return $count;\n}\n", "  if ($n == 1) {\n\
    \    return 2;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n\
    }\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10,\
    \ $i - 1);\n  }\n  return $count;\n}\n", "  if ($n == 1) {\n    return 2;\n  }\n\
    \  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n", "  \
    \  $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(3) . PHP_EOL;",
  "    if ($n == 1) {\n        return 2;\n    }\n    $dp = [1, 1];\n    for ($i =\
    \ 2; $i <= $n; $i++) {\n        $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n    }\n\
    \    return $dp[$n] * 2;\n}\n", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n\
    \ == 2) {\n    return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "  if ($n == 1) {\n    return 2;\n  }\n  $start_one\
    \ = 9;\n  $end_one = 1;\n  for ($i = 2; $i < $n; $i++) {\n    $start_one = $start_one\
    \ * 10 - $end_one;\n    $end_one = $end_one * 10 + 1;\n  }\n  return $start_one\
    \ + $end_one;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n", "  if ($n == 1) {\n    return 2;\n\
    \  }\n  if ($n == 2) {\n    return 4;\n  }\n  return starts_one_ends($n - 1) +\
    \ starts_one_ends($n - 2);\n}\n\nfor ($i = 1; $i < 10; $i++) {\n  echo starts_one_ends($i)\
    \ . \"\\n\";\n}", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n  \
    \  return 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n\
    }\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) .\
    \ PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\n\
    echo starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho\
    \ starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19)\
    \ . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) .\
    \ PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\n\
    echo starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho\
    \ starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28)\
    \ . PHP_EOL;\necho starts", "    if ($n == 1) {\n        return 2;\n    }\n  \
    \  $count = 0;\n    $count += starts_one_ends($n - 1);\n    $count += pow(10,\
    \ $n - 1);\n    return $count;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;", "  if ($n < 1) {\n    return\
    \ 0;\n  }\n  if ($n == 1) {\n    return 2;\n  }\n  return starts_one_ends($n -\
    \ 1) + starts_one_ends($n - 2);\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n", "    if\
    \ ($n == 1) {\n        return 2;\n    }\n    $count = 0;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count\
    \ * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\n\
    echo starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5)\
    \ . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\n\
    echo starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10)\
    \ . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2) {\n    return\
    \ 3;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\n\
    echo starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  $count = 1;\n  for ($i = 1; $i < $n; $i++) {\n    $count *= 9;\n\
    \  }\n  return $count * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7)\
    \ . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\n\
    echo starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) . PHP_EOL;\necho\
    \ starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14)\
    \ . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho starts_one_ends(16) .\
    \ PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\n\
    echo starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) . PHP_EOL;\necho\
    \ starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23)\
    \ . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho starts_one_ends(25) .\
    \ PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\n\
    echo starts_one_ends(28) . PHP_EOL;", "  if ($n == 1) {\n    return 2;\n  } else\
    \ {\n    return starts_one_ends($n - 1) + 9 * pow(10, $n - 2);\n  }\n}\n\necho\
    \ starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n\";",
  "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10,\
    \ $i - 1);\n    }\n    return $count;\n}\n", "    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n\
    }\n\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\n\
    echo starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8)\
    \ . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\
    \\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\"\
    ;\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\n\
    echo starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho\
    \ starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19)\
    \ . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) .\
    \ \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\
    \\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\"\
    ;\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\n\
    echo starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho\
    \ starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32)\
    \ . \"\\n\";\necho starts_one_ends(33) . \"\\n\";\necho starts_one_ends(34) .\
    \ \"\\n\";\necho starts_one_ends(35) . \"\\n\";\necho starts_one_ends(36) . \"\
    \\n", "  if ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  $count += starts_one_ends($n\
    \ - 1);\n  $count += pow(10, $n - 1);\n  return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho", "  if ($n == 1) {\n    return 2;\n\
    \  }\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i\
    \ - 1);\n  }\n  return $count * 2;\n}\n", "    if ($n == 1) {\n        return\
    \ 2;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n - 1; $i++) {\n       \
    \ $count += pow(9, $i);\n    }\n    return $count * 2;\n}\n", "  if ($n == 1)\
    \ {\n    return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n\
    \ - 1) + starts_one_ends($n - 2);\n}\n", "    if ($n == 1) {\n        return 2;\n\
    \    }\n    $count = 0;\n    $count += 9 * pow(10, $n - 2);\n    $count += starts_one_ends($n\
    \ - 1);\n    return $count;\n}\n\n$n = 4;\necho starts_one_ends($n);", "    if\
    \ ($n == 1) {\n        return 2;\n    }\n    $start_one = pow(10, $n - 1);\n \
    \   $end_one = 1;\n    for ($i = 0; $i < $n - 1; $i++) {\n        $end_one *=\
    \ 10;\n    }\n    return $start_one + $end_one;\n}\n", "  if ($n == 1) {\n   \
    \ return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n\
    \ - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) .\
    \ PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\n\
    echo starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho\
    \ starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18)\
    \ . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) .\
    \ PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\n\
    echo starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho\
    \ starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27)\
    \ . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho starts", "  if ($n ==\
    \ 1) {\n    return 2;\n  }\n  return starts_one_ends($n - 1) + starts_one_ends($n\
    \ - 2);\n}\n\necho starts_one_ends(4);", "  if ($n == 1) {\n    return 2;\n  }\n\
    \  $dp = array_fill(0, $n + 1, 0);\n  $dp[1] = 2;\n  $dp[2] = 3;\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  }\n  return\
    \ $dp[$n];\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count\
    \ += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n\";\necho\
    \ starts_one_ends(34) . \"\\n\";\necho starts_one_ends(35) . \"\\n", "  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n\
    \  return $count;\n}\n\necho starts_one_ends(3);", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  $count = 0;\n  $count += starts_one_ends($n - 1);\n  $count += pow(10,\
    \ $n - 1);\n  return $count;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2)\
    \ . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n\
    \    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count * 2;\n}\n", "  if ($n == 1) {\n \
    \   return 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  return starts_one_ends($n\
    \ - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . \"\\n\";\necho\
    \ starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4)\
    \ . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\
    \\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\"\
    ;\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho\
    \ starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13)\
    \ . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) .\
    \ \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\
    \\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\"\
    ;\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\n\
    echo starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho\
    \ starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26)\
    \ . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) .\
    \ \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\
    \\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\"\
    ;\necho starts", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n      \
    \  $count += pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(3)\
    \ . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\n\
    echo starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8)\
    \ . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\n\
    echo starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho\
    \ starts_one_ends(13) . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15)\
    \ . PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) .\
    \ PHP_EOL;\necho starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\n\
    echo starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho\
    \ starts_one_ends(22) . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24)\
    \ . PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) .\
    \ PHP_EOL;\necho starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\n\
    echo starts_one_ends(29) . PHP_EOL;\necho starts_one_ends(30) . PHP_EOL;\necho\
    \ starts_one_ends(31) . PHP_", "    if ($n == 1) {\n        return 2;\n    }\n\
    \    if ($n == 2) {\n        return 4;\n    }\n    return starts_one_ends($n -\
    \ 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho\
    \ starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\n\
    echo starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9)\
    \ . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho starts_one_ends(11) .\
    \ PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13) . PHP_EOL;\n\
    echo starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) . PHP_EOL;\necho\
    \ starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\necho starts_one_ends(18)\
    \ . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho starts_one_ends(20) .\
    \ PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22) . PHP_EOL;\n\
    echo starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) . PHP_EOL;\necho\
    \ starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\necho starts_one_ends(27)\
    \ . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho starts", "    if ($n ==\
    \ 1) {\n        return 2;\n    }\n    if ($n == 2) {\n        return 4;\n    }\n\
    \    return starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . PHP_EOL;\necho starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\n\
    echo starts_one_ends(4) . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6)\
    \ . PHP_EOL;\necho starts_one_ends(7) . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\n\
    echo starts_one_ends(9) . PHP_EOL;\necho starts_one_ends(10) . PHP_EOL;\necho\
    \ starts_one_ends(11) . PHP_EOL;\necho starts_one_ends(12) . PHP_EOL;\necho starts_one_ends(13)\
    \ . PHP_EOL;\necho starts_one_ends(14) . PHP_EOL;\necho starts_one_ends(15) .\
    \ PHP_EOL;\necho starts_one_ends(16) . PHP_EOL;\necho starts_one_ends(17) . PHP_EOL;\n\
    echo starts_one_ends(18) . PHP_EOL;\necho starts_one_ends(19) . PHP_EOL;\necho\
    \ starts_one_ends(20) . PHP_EOL;\necho starts_one_ends(21) . PHP_EOL;\necho starts_one_ends(22)\
    \ . PHP_EOL;\necho starts_one_ends(23) . PHP_EOL;\necho starts_one_ends(24) .\
    \ PHP_EOL;\necho starts_one_ends(25) . PHP_EOL;\necho starts_one_ends(26) . PHP_EOL;\n\
    echo starts_one_ends(27) . PHP_EOL;\necho starts_one_ends(28) . PHP_EOL;\necho\
    \ starts", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(2,\
    \ $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho\
    \ starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4)\
    \ . \"\\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\
    \\n\";\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\"\
    ;\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho\
    \ starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13)\
    \ . \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) .\
    \ \"\\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\
    \\n\";\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\"\
    ;\necho starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\n\
    echo starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho\
    \ starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26)\
    \ . \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) .\
    \ \"\\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\
    \\n\";\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\"\
    ;\necho starts_one_ends(33) . \"\\n", "    $count = 0;\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n    return $count;\n\
    }\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\n\
    echo starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5)\
    \ . \"\\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\
    \\n\";\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\"\
    ;\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\n\
    echo starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho\
    \ starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16)\
    \ . \"\\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) .\
    \ \"\\n\";\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\
    \\n\";\necho starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\"\
    ;\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\n\
    echo starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho\
    \ starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29)\
    \ . \"\\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) .\
    \ \"\\n\";\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\
    \\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10,\
    \ $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(3) . \"\\n\";", " \
    \ $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n\
    \  }\n  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n", "  if ($n == 1) {\n    return 2;\n  }\n  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(9, $i - 1);\n  }\n\
    \  return $count * 2;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(", "    $count =\
    \ 0;\n    $start = pow(10, $n - 1);\n    $end = pow(10, $n);\n    for ($i = $start;\
    \ $i < $end; $i++) {\n        if (strpos($i, '1') === 0 || strpos($i, '1') ===\
    \ strlen($i) - 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $count +=\
    \ pow(10, $i - 1);\n    }\n    return $count;\n}\n\necho starts_one_ends(3);",
  "  if ($n == 1) {\n    return 2;\n  }\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $count += pow(10, $i - 1);\n  }\n  return $count * 2;\n}\n\n$n = 1;\n\
    echo starts_one_ends($n) . PHP_EOL;\n\n$n = 2;\necho starts_one_ends($n) . PHP_EOL;\n\
    \n$n = 3;\necho starts_one_ends($n) . PHP_EOL;\n\n$n = 4;\necho starts_one_ends($n)\
    \ . PHP_EOL;\n\n$n = 5;\necho starts_one_ends($n) . PHP_EOL;", "    $count = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $count += pow(10, $i - 1);\n    }\n\
    \    return $count;\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $count += pow(10, $i - 1);\n  }\n  return $count;\n}\n\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n\";\necho starts_one_ends(34) . \"\\n", "    $count\
    \ = 0;\n    $start = 1;\n    $end = 1;\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $start *= 10;\n        $end = $end * 10 + 1;\n    }\n    $count += $end\
    \ - $start + 1;\n    $count += 9 * $start;\n    return $count;\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\", "  if ($n == 1) {\n    return 2;\n  }\n \
    \ if ($n == 2) {\n    return 4;\n  }\n  $count = 4;\n  $base = 10;\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    $count += $base;\n    $base *= 10;\n  }\n  return\
    \ $count;\n}\n\necho starts_one_ends(1) . PHP_EOL;\necho starts_one_ends(2) .\
    \ PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4) . PHP_EOL;\n\
    echo starts_one_ends(5) . PHP_EOL;\necho starts_one_ends(6) . PHP_EOL;\necho starts_one_ends(7)\
    \ . PHP_EOL;\necho starts_one_ends(8) . PHP_EOL;\necho starts_one_ends(9) . PHP_EOL;\n\
    echo starts_one_ends(10) . PHP_EOL;", "    if ($n == 1) {\n        return 2;\n\
    \    }\n    $dp = array_fill(0, $n, 0);\n    $dp[0] = 1;\n    $dp[1] = 2;\n  \
    \  for ($i = 2; $i < $n; $i++) {\n        $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n\
    \    }\n    return $dp[$n - 1] * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\n\
    echo starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10,\
    \ $i - 1);\n  }\n  return $count * 2;\n}\n\necho starts_one_ends(1) . PHP_EOL;\n\
    echo starts_one_ends(2) . PHP_EOL;\necho starts_one_ends(3) . PHP_EOL;\necho starts_one_ends(4)\
    \ . PHP_EOL;\necho starts_one_ends(5) . PHP_EOL;", "    if ($n == 1) {\n     \
    \   return 2;\n    }\n    if ($n == 2) {\n        return 4;\n    }\n    return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(3)\
    \ . \"\\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\
    \\n\";\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\"\
    ;\necho starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho\
    \ starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12)\
    \ . \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) .\
    \ \"\\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\
    \\n\";\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\"\
    ;\necho starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\n\
    echo starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho\
    \ starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25)\
    \ . \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) .\
    \ \"\\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\
    \\n\";\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\"\
    ;\necho starts_one_ends(32) . \"\\n\";\necho starts_one_ends(33) . \"\\n\";\n\
    echo starts_one_ends(34) . \"\\n\";\necho starts", "    if ($n == 1) {\n     \
    \   return 2;\n    }\n    if ($n == 2) {\n        return 3;\n    }\n    return\
    \ starts_one_ends($n - 1) + starts_one_ends($n - 2);\n}\n\necho starts_one_ends(1)\
    \ . \"\\n\";\necho starts_one_ends(2) . \"\\n\";\necho starts_one_ends(3) . \"\
    \\n\";\necho starts_one_ends(4) . \"\\n\";\necho starts_one_ends(5) . \"\\n\"\
    ;\necho starts_one_ends(6) . \"\\n\";\necho starts_one_ends(7) . \"\\n\";\necho\
    \ starts_one_ends(8) . \"\\n\";\necho starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10)\
    \ . \"\\n\";\necho starts_one_ends(11) . \"\\n\";\necho starts_one_ends(12) .\
    \ \"\\n\";\necho starts_one_ends(13) . \"\\n\";\necho starts_one_ends(14) . \"\
    \\n\";\necho starts_one_ends(15) . \"\\n\";\necho starts_one_ends(16) . \"\\n\"\
    ;\necho starts_one_ends(17) . \"\\n\";\necho starts_one_ends(18) . \"\\n\";\n\
    echo starts_one_ends(19) . \"\\n\";\necho starts_one_ends(20) . \"\\n\";\necho\
    \ starts_one_ends(21) . \"\\n\";\necho starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23)\
    \ . \"\\n\";\necho starts_one_ends(24) . \"\\n\";\necho starts_one_ends(25) .\
    \ \"\\n\";\necho starts_one_ends(26) . \"\\n\";\necho starts_one_ends(27) . \"\
    \\n\";\necho starts_one_ends(28) . \"\\n\";\necho starts_one_ends(29) . \"\\n\"\
    ;\necho starts_one_ends(30) . \"\\n\";\necho starts_one_ends(31) . \"\\n\";\n\
    echo starts_one_ends(32) . \"\\n\";\necho starts", "  if ($n == 1) {\n    return\
    \ 2;\n  }\n  if ($n == 2) {\n    return 3;\n  }\n  $dp = [1, 1, 2];\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    $dp[$i] = $dp[$i - 1] + $dp[$i - 2];\n  }\n  return\
    \ $dp[$n] * 2;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";", "  $count\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $count += pow(10, $i - 1);\n  }\n\
    \  return $count;\n}\n\necho starts_one_ends(1) . \"\\n\";\necho starts_one_ends(2)\
    \ . \"\\n\";\necho starts_one_ends(3) . \"\\n\";\necho starts_one_ends(4) . \"\
    \\n\";\necho starts_one_ends(5) . \"\\n\";\necho starts_one_ends(6) . \"\\n\"\
    ;\necho starts_one_ends(7) . \"\\n\";\necho starts_one_ends(8) . \"\\n\";\necho\
    \ starts_one_ends(9) . \"\\n\";\necho starts_one_ends(10) . \"\\n\";\necho starts_one_ends(11)\
    \ . \"\\n\";\necho starts_one_ends(12) . \"\\n\";\necho starts_one_ends(13) .\
    \ \"\\n\";\necho starts_one_ends(14) . \"\\n\";\necho starts_one_ends(15) . \"\
    \\n\";\necho starts_one_ends(16) . \"\\n\";\necho starts_one_ends(17) . \"\\n\"\
    ;\necho starts_one_ends(18) . \"\\n\";\necho starts_one_ends(19) . \"\\n\";\n\
    echo starts_one_ends(20) . \"\\n\";\necho starts_one_ends(21) . \"\\n\";\necho\
    \ starts_one_ends(22) . \"\\n\";\necho starts_one_ends(23) . \"\\n\";\necho starts_one_ends(24)\
    \ . \"\\n\";\necho starts_one_ends(25) . \"\\n\";\necho starts_one_ends(26) .\
    \ \"\\n\";\necho starts_one_ends(27) . \"\\n\";\necho starts_one_ends(28) . \"\
    \\n\";\necho starts_one_ends(29) . \"\\n\";\necho starts_one_ends(30) . \"\\n\"\
    ;\necho starts_one_ends(31) . \"\\n\";\necho starts_one_ends(32) . \"\\n\";\n\
    echo starts_one_ends(33) . \"\\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_15_string_sequence
language: php
prompt: "<?php\n// Return a string containing space-delimited numbers starting from\
  \ 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
  // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n"
tests: "function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $str = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $str\
    \ .= $i . \" \";\n    }\n    return $str;\n}\n", "    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ rtrim($result);\n}\n", "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++)\
    \ {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n", "    $result\
    \ = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n\
    \    }\n    return trim($result);\n}\n", "    $str = \"\";\n    for ($i = 0; $i\
    \ <= $n; $i++) {\n        $str .= $i . \" \";\n    }\n    return $str;\n}\n",
  "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= \"\
    \ $i\";\n    }\n    return $result;\n}\n", "    $result = \"\";\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n\
    }\n", "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result\
    \ .= \" \" . $i;\n    }\n    return trim($result);\n}\n", "    $result = \"\"\
    ;\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n\
    \    return $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++)\
    \ {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n", "    $result\
    \ = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n\
    \    }\n    return $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i <=\
    \ $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n",
  "  $result = \"\";\n  for ($i = 0; $i <= $n; $i++) {\n    $result .= $i . \" \"\
    ;\n  }\n  return $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i <=\
    \ $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return $result;\n}\n",
  "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= \"\
    \ $i\";\n    }\n    return $result;\n}\n", "  $result = \"\";\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return $result;\n}\n",
  "    $sequence = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $sequence .=\
    \ $i . \" \";\n    }\n    return $sequence;\n}\n", "    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n \
    \       $result .= \" $i\";\n    }\n    return $result;\n}\n", "    $str = \"\"\
    ;\n    for ($i = 0; $i <= $n; $i++) {\n        $str .= $i . \" \";\n    }\n  \
    \  return $str;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

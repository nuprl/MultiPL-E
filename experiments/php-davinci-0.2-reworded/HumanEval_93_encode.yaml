name: HumanEval_93_encode
language: php
prompt: "<?php\n// Write a function that takes a message, and encodes in such a \n\
  // way that it swaps case of all letters, replaces all vowels in \n// the message\
  \ with the letter that appears 2 places ahead of that \n// vowel in the english\
  \ alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n\
  // \"TGST\"\n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction\
  \ encode($message) {\n"
tests: "function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\") !==\
  \ \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$newMessage = \"\
    \";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$newMessage .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (ctype_alpha($char)) {\n            if (in_array(strtolower($char),\
    \ $vowels)) {\n                $encoded .= $vowels[(array_search(strtolower($char),\
    \ $vowels) + 2) % 5];\n            } else {\n                $encoded .= $char;\n\
    \            }\n        } else {\n            $encoded .= $char;\n        }\n\
    \    }\n    return $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = [];\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index += 2;\n\t\t\t\
    if ($index > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$index];\n\
    \t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = implode($encoded);\n\
    \t$encoded = strtoupper($encoded);\n\treturn $encoded;\n}\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n\necho encode(\"test\") .\
    \ \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$newMessage .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$newMessage .= strtoupper($char);\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t\
    $char = $newMessage[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_letter = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_letter = $letter;\n\t\t}\n\t\t$new_message\
    \ .= strtoupper($new_letter);\n\t}\n\treturn $new_message;\n}\n\necho encode(\"\
    test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$new_message = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\t\
    $new_message = strtoupper(implode($new_message));\n\treturn $new_message;\n}\n\
    \necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search(strtolower($message[$i]),\
    \ $vowels) + 2) % 5];\n\t\t} else if (ctype_upper($message[$i])) {\n\t\t\t$newMessage\
    \ .= strtoupper($message[$i]);\n\t\t} else {\n\t\t\t$newMessage .= strtolower($message[$i]);\n\
    \t\t}\n\t}\n\treturn $newMessage;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$newMessage\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$newMessage\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t\
    }\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t$char = $newMessage[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter, $vowels) + 2) %\
    \ 5];\n\t\t}\n\t\t$encoded .= strtoupper($letter);\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $encoded = array();\n    foreach ($message\
    \ as $char) {\n        if (in_array($char, $vowels)) {\n            $key = array_search($char,\
    \ $vowels);\n            if ($key == 4) {\n                $key = -1;\n      \
    \      }\n            $encoded[] = $vowels[$key + 2];\n        } else {\n    \
    \        $encoded[] = $char;\n        }\n    }\n    return strtoupper(implode('',\
    \ $encoded));\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message =\
    \ strtolower($message);\n    $message = str_split($message);\n    $encoded = [];\n\
    \    foreach ($message as $letter) {\n        if (in_array($letter, $vowels))\
    \ {\n            $index = array_search($letter, $vowels);\n            $index\
    \ = ($index + 2) % 5;\n            $encoded[] = $vowels[$index];\n        } else\
    \ {\n            $encoded[] = $letter;\n        }\n    }\n    return strtoupper(implode($encoded));\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$letter\
    \ = $vowels[$index + 2];\n\t\t}\n\t\t$encoded[] = $letter;\n\t}\n\t$encoded =\
    \ implode($encoded);\n\treturn $encoded;\n}\n\necho encode(\"test\") . PHP_EOL;\n\
    echo encode(\"This is a message\") . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t\
    $char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .=\
    \ $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded\
    \ .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array(strtolower($message[$i]), $vowels)) {\n\t\t\t$new_message\
    \ .= strtolower($vowels[(array_search(strtolower($message[$i]), $vowels) + 2)\
    \ % 5]);\n\t\t} else {\n\t\t\t$new_message .= strtoupper($message[$i]);\n\t\t\
    }\n\t}\n\treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$letter = $vowels[array_search($letter, $vowels) + 2];\n\t\t}\n\t\t\
    $encoded .= $letter;\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode(\"\
    test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

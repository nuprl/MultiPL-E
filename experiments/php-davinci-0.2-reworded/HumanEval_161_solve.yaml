name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
  \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve($s)\
  \ {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key\
    \ => $value) {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n  \
    \  }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char)\
    \ === $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $hasLetter = false;\n    foreach ($s as $char) {\n\
    \        if (in_array($char, $letters)) {\n            $hasLetter = true;\n  \
    \          if (ctype_lower($char)) {\n                $result .= strtoupper($char);\n\
    \            } else {\n                $result .= strtolower($char);\n       \
    \     }\n        } else {\n            $result .= $char;\n        }\n    }\n \
    \   if (!$hasLetter) {\n        $result = strrev($result);\n    }\n    return\
    \ $result;\n}\n", "    $arr = str_split($s);\n    $result = [];\n    $hasLetter\
    \ = false;\n    foreach ($arr as $char) {\n        if (ctype_alpha($char)) {\n\
    \            $hasLetter = true;\n            $result[] = strtolower($char) ==\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result[] = $char;\n        }\n    }\n    return $hasLetter ? implode('',\
    \ $result) : strrev($s);\n}\n", "    $result = '';\n    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $res[] = strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $res[] = $char;\n        }\n    }\n    return count($res) > 0 ? implode('',\
    \ $res) : strrev($s);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    $others\
    \ = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        } elseif (ctype_digit($value)) {\n  \
    \          $numbers[] = $value;\n        } else {\n            $others[] = $value;\n\
    \        }\n    }\n    if (count($letters) > 0) {\n        $letters = array_map(function($value)\
    \ {\n            return strtolower($value) === $value ? strtoupper($value) : strtolower($value);\n\
    \        }, $letters);\n    } else {\n        $numbers = array_reverse($numbers);\n\
    \    }\n    return implode('', array_merge($letters, $numbers, $others));\n}\n",
  "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $value) {\n   \
    \     if (ctype_alpha($value)) {\n            $letters[] = $value;\n        }\n\
    \    }\n    if (count($letters) == 0) {\n        return strrev($s);\n    }\n \
    \   foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n   \
    \         if (ctype_upper($value)) {\n                $s[$key] = strtolower($value);\n\
    \            } else {\n                $s[$key] = strtoupper($value);\n      \
    \      }\n        }\n    }\n    return implode($s);\n}\necho solve(\"1234\");\n\
    echo \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho\
    \ \"\\n\";", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }", "    $arr = str_split($s);\n    $result = [];\n    $isLetter = false;\n  \
    \  foreach ($arr as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev($s);\n}\n",
  "    $s = str_split($s);\n    $res = \"\";\n    $flag = false;\n    for ($i = 0;\
    \ $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $flag\
    \ = true;\n            if (ctype_upper($s[$i])) {\n                $res .= strtolower($s[$i]);\n\
    \            } else {\n                $res .= strtoupper($s[$i]);\n         \
    \   }\n        } else {\n            $res .= $s[$i];\n        }\n    }\n    if\
    \ ($flag) {\n        return $res;\n    } else {\n        return strrev($res);\n\
    \    }\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");",
  "    $s = str_split($s);\n    $letters = [];\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev(implode('', $result));\n    }\n    $letters =\
    \ array_reverse($letters);\n    foreach ($result as $char) {\n        $letters[]\
    \ = $char;\n    }\n    return implode('', $letters);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
  \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve($s)\
  \ {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key\
    \ => $value) {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n  \
    \  }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char)\
    \ === $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $hasLetter = false;\n    foreach ($s as $char) {\n\
    \        if (in_array($char, $letters)) {\n            $hasLetter = true;\n  \
    \          if (ctype_lower($char)) {\n                $result .= strtoupper($char);\n\
    \            } else {\n                $result .= strtolower($char);\n       \
    \     }\n        } else {\n            $result .= $char;\n        }\n    }\n \
    \   if (!$hasLetter) {\n        $result = strrev($result);\n    }\n    return\
    \ $result;\n}\n", "    $arr = str_split($s);\n    $result = [];\n    $hasLetter\
    \ = false;\n    foreach ($arr as $char) {\n        if (ctype_alpha($char)) {\n\
    \            $hasLetter = true;\n            $result[] = strtolower($char) ==\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result[] = $char;\n        }\n    }\n    return $hasLetter ? implode('',\
    \ $result) : strrev($s);\n}\n", "    $result = '';\n    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $res[] = strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $res[] = $char;\n        }\n    }\n    return count($res) > 0 ? implode('',\
    \ $res) : strrev($s);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    $others\
    \ = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        } elseif (ctype_digit($value)) {\n  \
    \          $numbers[] = $value;\n        } else {\n            $others[] = $value;\n\
    \        }\n    }\n    if (count($letters) > 0) {\n        $letters = array_map(function($value)\
    \ {\n            return strtolower($value) === $value ? strtoupper($value) : strtolower($value);\n\
    \        }, $letters);\n    } else {\n        $numbers = array_reverse($numbers);\n\
    \    }\n    return implode('', array_merge($letters, $numbers, $others));\n}\n",
  "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $value) {\n   \
    \     if (ctype_alpha($value)) {\n            $letters[] = $value;\n        }\n\
    \    }\n    if (count($letters) == 0) {\n        return strrev($s);\n    }\n \
    \   foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n   \
    \         if (ctype_upper($value)) {\n                $s[$key] = strtolower($value);\n\
    \            } else {\n                $s[$key] = strtoupper($value);\n      \
    \      }\n        }\n    }\n    return implode($s);\n}\necho solve(\"1234\");\n\
    echo \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho\
    \ \"\\n\";", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }", "    $arr = str_split($s);\n    $result = [];\n    $isLetter = false;\n  \
    \  foreach ($arr as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev($s);\n}\n",
  "    $s = str_split($s);\n    $res = \"\";\n    $flag = false;\n    for ($i = 0;\
    \ $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $flag\
    \ = true;\n            if (ctype_upper($s[$i])) {\n                $res .= strtolower($s[$i]);\n\
    \            } else {\n                $res .= strtoupper($s[$i]);\n         \
    \   }\n        } else {\n            $res .= $s[$i];\n        }\n    }\n    if\
    \ ($flag) {\n        return $res;\n    } else {\n        return strrev($res);\n\
    \    }\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");",
  "    $s = str_split($s);\n    $letters = [];\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev(implode('', $result));\n    }\n    $letters =\
    \ array_reverse($letters);\n    foreach ($result as $char) {\n        $letters[]\
    \ = $char;\n    }\n    return implode('', $letters);\n}\n", "    $arr = str_split($s);\n\
    \    $result = [];\n    $is_letter = false;\n    foreach ($arr as $char) {\n \
    \       if (ctype_alpha($char)) {\n            $is_letter = true;\n          \
    \  $result[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ $is_letter ? implode('', $result) : strrev($s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}\n", "   \
    \ $s = str_split($s);\n    $res = '';\n    $is_letter = false;\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $is_letter = true;\n\
    \            $res .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $is_letter\
    \ ? $res : strrev($res);\n}\n", "    $arr = str_split($s);\n    $res = [];\n \
    \   $isLetter = false;\n    foreach ($arr as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $res[] = ctype_upper($char) ?\
    \ strtolower($char) : strtoupper($char);\n        } else {\n            $res[]\
    \ = $char;\n        }\n    }\n    return $isLetter ? implode('', $res) : strrev($s);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (strpos($letters, $char) !== false) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        }\n    }\n\
    \    if (empty($letters)) {\n        return strrev($s);\n    }\n    foreach ($s\
    \ as $key => $char) {\n        if (ctype_alpha($char)) {\n            $s[$key]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    }\n    }\n    return implode('', $s);\n}\n", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result .= $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;", "    $s = str_split($s);\n    $result = [];\n\
    \    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return $isLetter ? implode('',\
    \ $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n \
    \   $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n\
    \        if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) ===\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($v) {\n        return ctype_alpha($v);\n\
    \    });\n    if (count($letters) === 0) {\n        return strrev($s);\n    }\n\
    \    return str_replace($letters, array_map(function($v) {\n        return ctype_upper($v)\
    \ ? strtolower($v) : strtoupper($v);\n    }, $letters), $s);\n}\n", "    $s =\
    \ str_split($s);\n    $result = [];\n    $isLetter = false;\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $isLetter = true;\n\
    \            $result[] = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ $isLetter ? implode('', $result) : strrev(implode('', $result));\n}\n", "  \
    \  $result = '';\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        for ($i = 0;\
    \ $i < strlen($s); $i++) {\n            if (ctype_alpha($s[$i])) {\n         \
    \       $result .= strtoupper($s[$i]);\n            } else {\n               \
    \ $result .= strtolower($s[$i]);\n            }\n        }\n    } else {\n   \
    \     $result = strrev($s);\n    }\n    return $result;\n}\n", "    $result =\
    \ '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        }\n    }\n    if (empty($letters)) {\n \
    \       return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) == $char\
    \ ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    if(preg_match(\"/[a-zA-Z]/\", $s)){\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    if (count($letters) > 0)\
    \ {\n        $letters = array_map(function($letter) {\n            return ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        }, $letters);\n      \
    \  $letters = array_reverse($letters);\n        $s = array_merge($letters, $others);\n\
    \    } else {\n        $s = array_reverse($s);\n    }\n    return implode('',\
    \ $s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $result = \"\";\n \
    \   $s = str_split($s);\n    $is_letter = false;\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $is_letter = true;\n         \
    \   if (ctype_upper($char)) {\n                $result .= strtolower($char);\n\
    \            } else {\n                $result .= strtoupper($char);\n       \
    \     }\n        } else {\n            $result .= $char;\n        }\n    }\n \
    \   if ($is_letter) {\n        return $result;\n    } else {\n        return strrev($result);\n\
    \    }\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\n", "    $s = str_split($s);\n\
    \    $res = '';\n    $flag = false;\n    for ($i = 0; $i < count($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $flag = true;\n            if\
    \ (ctype_upper($s[$i])) {\n                $res .= strtolower($s[$i]);\n     \
    \       } else {\n                $res .= strtoupper($s[$i]);\n            }\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    if ($flag)\
    \ {\n        return $res;\n    } else {\n        return strrev($res);\n    }\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    $hasLetter = false;\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $hasLetter\
    \ = true;\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    if (!$hasLetter)\
    \ {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtolower($char) === $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return $isLetter ? implode('',\
    \ $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n \
    \   $flag = false;\n    foreach ($s as $key => $value) {\n        if(ctype_alpha($value)){\n\
    \            $flag = true;\n            $s[$key] = ctype_upper($value) ? strtolower($value)\
    \ : strtoupper($value);\n        }\n    }\n    return $flag ? implode($s) : strrev($s);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result .= $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = \"\";\n    $isLetter = false;\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $isLetter = true;\n\
    \            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    if ($isLetter) {\n        return $result;\n    } else {\n        return strrev($result);\n\
    \    }\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        }\n    }\n    if (empty($letters)) {\n \
    \       return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) == $char\
    \ ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    $s = str_split($s);\n    $str = '';\n    foreach ($s as $key\
    \ => $value) {\n        if (ctype_alpha($value)) {\n            $str .= strtoupper($value);\n\
    \        } else {\n            $str .= $value;\n        }\n    }\n    if ($str\
    \ == strtoupper($str)) {\n        $str = strtolower($str);\n    }\n    return\
    \ $str;\n}\n", "    $s = str_split($s);\n    $letters = array_filter($s, function($v)\
    \ {\n        return ctype_alpha($v);\n    });\n    if (empty($letters)) {\n  \
    \      return strrev(implode('', $s));\n    }\n    foreach ($s as $k => $v) {\n\
    \        if (ctype_alpha($v)) {\n            $s[$k] = strtolower($v) == $v ? strtoupper($v)\
    \ : strtolower($v);\n        }\n    }\n    return implode('', $s);\n}\n", "  \
    \  $result = '';\n    $letters = str_split($s);\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return strlen($result)\
    \ == 0 ? strrev($s) : $result;\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}\n", "   \
    \ $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n",
  "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n    \
    \    }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n    \
    \    }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $s[$key] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $n = strlen($s);\n    $result = \"\";\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        if (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i])\
    \ == $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            }\
    \ else {\n                $result .= strtolower($s[$i]);\n            }\n    \
    \    } else {\n            $result .= $s[$i];\n        }\n    }\n    if ($result\
    \ == \"\") {\n        return strrev($s);\n    }\n    return $result;\n}\n", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $str = '';\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $str\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $str .= $s[$i];\n        }\n    }\n    return $str;\n\
    }\n", "    $result = '';\n    $s = str_split($s);\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($c) {\n        return ctype_alpha($c);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $result\
    \ = '';\n    foreach (str_split($s) as $c) {\n        if (ctype_alpha($c)) {\n\
    \            $result .= strtoupper($c) === $c ? strtolower($c) : strtoupper($c);\n\
    \        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) === $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\n", "    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $result = \"\
    \";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, $s[$i])\
    \ !== false) {\n            if (strtolower($s[$i]) == $s[$i]) {\n            \
    \    $result .= strtoupper($s[$i]);\n            } else {\n                $result\
    \ .= strtolower($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\necho solve(\"\
    1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\"\
    );\necho \"\\n\";", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = $letters . strtoupper($letters);\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (strpos($letters, $s[$i]) !== false) {\n            $result .=\
    \ strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n  \
    \      } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $result =\
    \ [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    if (empty($letters)) {\n        return strrev(implode($result));\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($value))\
    \ {\n            $result[] = strtolower($value);\n        } else {\n         \
    \   $result[] = strtoupper($value);\n        }\n    }\n    return implode($result);\n\
    }\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\n\
    echo solve(\"#a@C\");\necho \"\\n\";", "    $result = '';\n    $s = str_split($s);\n\
    \    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strlen($result) === 0 ? strrev($s)\
    \ : $result;\n}\n", "    $letters = array_filter(str_split($s), function($char)\
    \ {\n        return ctype_alpha($char);\n    });\n    if (empty($letters)) {\n\
    \        return strrev($s);\n    }\n    $s = str_split($s);\n    foreach ($s as\
    \ $i => $char) {\n        if (ctype_alpha($char)) {\n            $s[$i] = strtoupper($char)\
    \ === $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $s = str_split($s);\n    $letters = array_filter($s,\
    \ function($v) {\n        return ctype_alpha($v);\n    });\n    if (empty($letters))\
    \ {\n        return strrev(implode($s));\n    }\n    foreach ($s as $k => $v)\
    \ {\n        if (ctype_alpha($v)) {\n            $s[$k] = strtoupper($v) === $v\
    \ ? strtolower($v) : strtoupper($v);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    $flag = false;\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $flag = true;\n\
    \            $res[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return $flag\
    \ ? implode('', $res) : strrev($s);\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        }\n    }\n    if (empty($letters)) {\n \
    \       return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\n", "    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $result = \"\
    \";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, $s[$i])\
    \ !== false) {\n            if (strtolower($s[$i]) == $s[$i]) {\n            \
    \    $result .= strtoupper($s[$i]);\n            } else {\n                $result\
    \ .= strtolower($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if ($result == \"\") {\n        return strrev($s);\n\
    \    }\n    return $result;\n}", "    $s = str_split($s);\n    $letters = [];\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $key;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev($s);\n    }\n    foreach ($letters as $key => $value) {\n\
    \        if (ctype_upper($s[$value])) {\n            $s[$value] = strtolower($s[$value]);\n\
    \        } else {\n            $s[$value] = strtoupper($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\necho solve(\"1234\");\necho \"<br>\";\necho\
    \ solve(\"ab\");\necho \"<br>\";\necho solve(\"#a@C\");", "    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\n", "    $s = str_split($s);\n\
    \    $result = '';\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result\
    \ .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n   \
    \     } else {\n            $result .= $char;\n        }\n    }\n    return $isLetter\
    \ ? $result : strrev($result);\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (isset($letters[$s[$i]])) {\n            $result .= $s[$i]\
    \ == strtolower($s[$i]) ? strtoupper($s[$i]) : strtolower($s[$i]);\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = str_split($s);\n    $result = \"\
    \";\n    $isLetter = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $isLetter = true;\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $isLetter ? $result\
    \ : strrev($s);\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\
    \\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho\
    \ solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\"\
    ) . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\"\
    ;\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\
    \\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho\
    \ solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\"\
    ) . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\"\
    ;\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\
    \\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho\
    \ solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $s = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    if (!$isLetter)\
    \ {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $others =\
    \ [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $letters[] = $char;\n        } else {\n            $others[] = $char;\n\
    \        }\n    }\n    $letters = array_map(function($letter) {\n        if (ctype_upper($letter))\
    \ {\n            return strtolower($letter);\n        } else {\n            return\
    \ strtoupper($letter);\n        }\n    }, $letters);\n    $letters = array_reverse($letters);\n\
    \    $others = array_reverse($others);\n    return implode('', $letters) . implode('',\
    \ $others);\n}\n", "    if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        return\
    \ strtolower($s) ^ strtoupper($s) ^ $s;\n    } else {\n        return strrev($s);\n\
    \    }\n}", "    $s = str_split($s);\n    $letters = [];\n    $others = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $others[] = $char;\n        }\n    }\n\
    \    $letters = array_map(function($char) {\n        return ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n    }, $letters);\n    return empty($letters)\
    \ ? strrev(implode('', $others)) : implode('', $letters) . implode('', $others);\n\
    }\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $str = str_split($s);\n    $result = [];\n    foreach\
    \ ($str as $char) {\n        if (ctype_alpha($char)) {\n            if (ctype_upper($char))\
    \ {\n                $result[] = strtolower($char);\n            } else {\n  \
    \              $result[] = strtoupper($char);\n            }\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    if (count($result) ===\
    \ 0) {\n        return strrev($s);\n    }\n    return implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    $isLetter = false;\n  \
    \  foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = $char === strtoupper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n", "    $s = str_split($s);\n    $letters = array_filter($s,\
    \ function($v) {\n        return ctype_alpha($v);\n    });\n    if (empty($letters))\
    \ {\n        return strrev(implode($s));\n    }\n    $s = array_map(function($v)\
    \ {\n        return ctype_alpha($v) ? strtolower($v) : $v;\n    }, $s);\n    $s\
    \ = array_map(function($v) {\n        return ctype_alpha($v) ? strtoupper($v)\
    \ : $v;\n    }, $s);\n    return implode($s);\n}\n", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        }\n    }\n    if (count($letters) === 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $letters = str_split(strtolower($s));\n\
    \    $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter);\n        } else {\n         \
    \   $result .= $letter;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (strpos($letters,\
    \ $char) !== false) {\n            $result[] = strtoupper($char) === $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    $notLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $notLetters[] = $char;\n        }\n    }\n    $letters = array_reverse($letters);\n\
    \    $letters = array_map(function($letter) {\n        if (ctype_upper($letter))\
    \ {\n            return strtolower($letter);\n        } else {\n            return\
    \ strtoupper($letter);\n        }\n    }, $letters);\n    $s = array_merge($letters,\
    \ $notLetters);\n    return implode('', $s);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter ?\
    \ implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $s[$key] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $v) {\n   \
    \     if (ctype_alpha($v)) {\n            $res .= ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n        } else {\n            $res .= $v;\n        }\n  \
    \  }\n    return $res;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\"\
    ) . PHP_EOL;", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            if (ctype_upper($char))\
    \ {\n                $result[] = strtolower($char);\n            } else {\n  \
    \              $result[] = strtoupper($char);\n            }\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $letters = array_filter(str_split($s), function($c)\
    \ {\n        return ctype_alpha($c);\n    });\n    if (empty($letters)) {\n  \
    \      return strrev($s);\n    }\n    $s = str_split($s);\n    foreach ($s as\
    \ $i => $c) {\n        if (ctype_alpha($c)) {\n            $s[$i] = strtolower($c)\
    \ == $c ? strtoupper($c) : strtolower($c);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $letters = array();\n    $result = array();\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        } else {\n            $result[] = $value;\n\
    \        }\n    }\n    if (count($letters) > 0) {\n        $letters = array_reverse($letters);\n\
    \        foreach ($letters as $key => $value) {\n            if (ctype_upper($value))\
    \ {\n                $letters[$key] = strtolower($value);\n            } else\
    \ {\n                $letters[$key] = strtoupper($value);\n            }\n   \
    \     }\n        $result = array_merge($result, $letters);\n    } else {\n   \
    \     $result = array_reverse($result);\n    }\n    return implode($result);\n\
    }", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n    \
    \    }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return strrev($result);\n}\n", "    $result = \"\";\n   \
    \ $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $res\
    \ = \"\";\n    $flag = false;\n    for ($i = 0; $i < count($s); $i++) {\n    \
    \    if (ctype_alpha($s[$i])) {\n            $flag = true;\n            if (ctype_upper($s[$i]))\
    \ {\n                $res .= strtolower($s[$i]);\n            } else {\n     \
    \           $res .= strtoupper($s[$i]);\n            }\n        } else {\n   \
    \         $res .= $s[$i];\n        }\n    }\n    if ($flag) {\n        return\
    \ $res;\n    } else {\n        return strrev($res);\n    }\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $flag = false;\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $flag = true;\n            $result[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    if (!$flag) {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $result = [];\n    $hasLetters\
    \ = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n \
    \           $hasLetters = true;\n            $result[] = strtolower($char) ===\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result[] = $char;\n        }\n    }\n    return $hasLetters ? implode('',\
    \ $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n \
    \   $res = [];\n    $is_letter = false;\n    foreach ($s as $char) {\n       \
    \ if (ctype_alpha($char)) {\n            $is_letter = true;\n            $res[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $res[] = $char;\n        }\n    }\n    return $is_letter\
    \ ? implode('', $res) : strrev(implode('', $res));\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev(implode('', $result));\n    }\n    $letters = array_reverse($letters);\n\
    \    foreach ($result as $char) {\n        $letters[] = $char;\n    }\n    return\
    \ implode('', $letters);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $s = str_split($s);\n    $result = '';\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i])\
    \ == $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            }\
    \ else {\n                $result .= strtolower($s[$i]);\n            }\n    \
    \    } else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $s = str_split($s);\n    $result = '';\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $result .= strtoupper($char)\
    \ === $char ? strtolower($char) : strtoupper($char);\n        } else {\n     \
    \       $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    $result = '';\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n  \
    \  }\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n       \
    \     $result .= strtoupper($char);\n        } else {\n            $result .=\
    \ $char;\n        }\n    }\n    return $result;\n}\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result .= $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s) ^ strtoupper($s)\
    \ ^ $s;\n    } else {\n        return strrev($s);\n    }\n}", "    $s = str_split($s);\n\
    \    $letters = [];\n    $numbers = [];\n    foreach ($s as $key => $value) {\n\
    \        if (is_numeric($value)) {\n            $numbers[] = $value;\n       \
    \ } else {\n            $letters[] = $value;\n        }\n    }\n    $letters =\
    \ array_map(function($letter) {\n        if (ctype_lower($letter)) {\n       \
    \     return strtoupper($letter);\n        } else {\n            return strtolower($letter);\n\
    \        }\n    }, $letters);\n    $s = array_merge($letters, $numbers);\n   \
    \ if (empty($s)) {\n        return strrev($s);\n    }\n    return implode('',\
    \ $s);\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";", "    $result = '';\n    $is_letter = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $is_letter = true;\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    if ($is_letter)\
    \ {\n        return strrev($result);\n    } else {\n        return strrev($s);\n\
    \    }\n}\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\\
    n\";\necho solve(\"#a@C\");\necho \"\\n\";", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ count($result) > 0 ? implode('', $result) : strrev($s);\n}\necho solve(\"1234\"\
    ) . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    echo solve(\"\") . PHP_EOL;", "    $s = str_split($s);\n    $letters = [];\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode($s);\n}\n", "    $s = str_split($s);\n \
    \   $result = '';\n    $is_letter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $is_letter = true;\n            $result\
    \ .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n   \
    \     } else {\n            $result .= $char;\n        }\n    }\n    return $is_letter\
    \ ? $result : strrev($result);\n}\n", "    $s = str_split($s);\n    $letters =\
    \ array_filter($s, function($v) {\n        return ctype_alpha($v);\n    });\n\
    \    if (count($letters) == 0) {\n        return strrev($s);\n    }\n    $s =\
    \ array_map(function($v) {\n        return ctype_alpha($v) ? strtolower($v) :\
    \ $v;\n    }, $s);\n    $s = array_map(function($v) {\n        return ctype_alpha($v)\
    \ ? strtoupper($v) : $v;\n    }, $s);\n    return implode('', $s);\n}\n", "  \
    \  $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] === strtolower($s[$i]) ?\
    \ strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = \"\";\n    $isLetter = false;\n    foreach ($s as $char) {\n  \
    \      if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result\
    \ .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n   \
    \     } else {\n            $result .= $char;\n        }\n    }\n    return $isLetter\
    \ ? $result : strrev($result);\n}\n", "    $s = str_split($s);\n    $letters =\
    \ [];\n    $numbers = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $numbers[]\
    \ = $char;\n        }\n    }\n    if (empty($letters)) {\n        return implode('',\
    \ array_reverse($numbers));\n    }\n    foreach ($letters as $key => $letter)\
    \ {\n        if (ctype_lower($letter)) {\n            $letters[$key] = strtoupper($letter);\n\
    \        } else {\n            $letters[$key] = strtolower($letter);\n       \
    \ }\n    }\n    return implode('', array_merge($letters, $numbers));\n}\necho\
    \ solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\"\
    ) . \"\\n\";", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }", "    $result = '';\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $s =\
    \ array_map(function($x) {\n        if (ctype_alpha($x)) {\n            return\
    \ strtoupper($x) == $x ? strtolower($x) : strtoupper($x);\n        }\n       \
    \ return $x;\n    }, $s);\n    return implode('', $s);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result[]\
    \ = strtolower($char) === $char ? strtoupper($char) : strtolower($char);\n   \
    \     } else {\n            $result[] = $char;\n        }\n    }\n    return $isLetter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\n\
    echo solve(\"#a@C\");\necho \"\\n\";", "    $letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] =\
    \ $char;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    $letters = array_reverse($letters);\n    $i = 0;\n    foreach ($s\
    \ as $key => $char) {\n        if (ctype_alpha($char)) {\n            $s[$key]\
    \ = $letters[$i];\n            $i++;\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    $is_letter = false;\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $is_letter\
    \ = true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    if (!$is_letter) {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n", "    $result = '';\n    $letters\
    \ = str_split($s);\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\n\
    echo solve(\"#a@C\") . PHP_EOL;", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            if (ctype_upper($char)) {\n  \
    \              $result[] = strtolower($char);\n            } else {\n        \
    \        $result[] = strtoupper($char);\n            }\n        } else {\n   \
    \         $result[] = $char;\n        }\n    }\n    if (count($result) == 0) {\n\
    \        return strrev($s);\n    }\n    return implode('', $result);\n}\n", " \
    \   $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}", "    $letters\
    \ = array_filter(str_split($s), function($c) {\n        return ctype_alpha($c);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $s\
    \ = str_split($s);\n    foreach ($s as $i => $c) {\n        if (ctype_alpha($c))\
    \ {\n            $s[$i] = strtolower($c) == $c ? strtoupper($c) : strtolower($c);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = array_filter(str_split($s),\
    \ function($c) {\n        return ctype_alpha($c);\n    });\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        $c = $s[$i];\n        if (ctype_alpha($c))\
    \ {\n            $result .= ctype_upper($c) ? strtolower($c) : strtoupper($c);\n\
    \        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $str = \"\";\n    $flag = false;\n    for ($i=0; $i < count($s); $i++) {\
    \ \n        if (ctype_alpha($s[$i])) {\n            $flag = true;\n          \
    \  if (ctype_upper($s[$i])) {\n                $str .= strtolower($s[$i]);\n \
    \           } else {\n                $str .= strtoupper($s[$i]);\n          \
    \  }\n        } else {\n            $str .= $s[$i];\n        }\n    }\n    if\
    \ ($flag) {\n        return $str;\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    $s = str_split($s);\n    $res = '';\n    $isLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $res .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $isLetter ? $res : strrev($res);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $isLetter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $str = '';\n    foreach ($s as $value) {\n        if (ord($value) >= 65 &&\
    \ ord($value) <= 90) {\n            $str .= strtolower($value);\n        } elseif\
    \ (ord($value) >= 97 && ord($value) <= 122) {\n            $str .= strtoupper($value);\n\
    \        } else {\n            $str .= $value;\n        }\n    }\n    return $str;\n\
    }\n\necho solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\n\
    echo solve(\"#a@C\");\necho \"\\n\";", "    $s = str_split($s);\n    $letters\
    \ = array_filter($s, function($x) {\n        return ctype_alpha($x);\n    });\n\
    \    if (empty($letters)) {\n        return strrev($s);\n    }\n    $s = array_map(function($x)\
    \ {\n        return ctype_alpha($x) ? strtolower($x) : $x;\n    }, $s);\n    $s\
    \ = array_map(function($x) {\n        return ctype_alpha($x) ? strtoupper($x)\
    \ : $x;\n    }, $s);\n    return implode('', $s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    $numbers = [];\n    foreach ($s as $key => $value) {\n\
    \        if (is_numeric($value)) {\n            $numbers[] = $value;\n       \
    \ } else {\n            $letters[] = $value;\n        }\n    }\n    if (count($letters)\
    \ > 0) {\n        foreach ($letters as $key => $value) {\n            if (ctype_lower($value))\
    \ {\n                $letters[$key] = strtoupper($value);\n            } else\
    \ {\n                $letters[$key] = strtolower($value);\n            }\n   \
    \     }\n        $s = array_merge($letters, $numbers);\n    } else {\n       \
    \ $s = array_reverse($numbers);\n    }\n    return implode($s);\n}\n", "    $letters\
    \ = array_filter(str_split($s), function($char) {\n        return ctype_alpha($char);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $s\
    \ = str_split($s);\n    foreach ($s as $i => $char) {\n        if (ctype_alpha($char))\
    \ {\n            $s[$i] = strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n\
    \        if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) ===\
    \ $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}", "    $letters = str_split($s);\n    $result = [];\n  \
    \  foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n    \
    \        $result[] = strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\"\
    ) . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if ($result ==\
    \ \"\") {\n        return strrev($s);\n    }\n    return $result;\n}\n", "   \
    \ $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $numbers[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return implode('', array_reverse($numbers));\n    }\n    $letters\
    \ = array_map(function($letter) {\n        return ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n    }, $letters);\n    return implode('', array_merge($letters,\
    \ $numbers));\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    $others = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] =\
    \ $char;\n        } else {\n            $others[] = $char;\n        }\n    }\n\
    \    $letters = array_map(function($letter) {\n        return ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n    }, $letters);\n    return\
    \ count($letters) ? implode('', $letters) : implode('', array_reverse($others));\n\
    }\n", "    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $result .= strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $str\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $str .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $str .= $s[$i];\n        }\n    }\n    return strrev($str);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    $isLetter = false;\n  \
    \  foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ $isLetter ? implode('', $result) : strrev(implode('', $result));\n}\n", "  \
    \  $s = str_split($s);\n    $result = [];\n    $letters = range('a', 'z');\n \
    \   $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $result[] = strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $res = '';\n    $flag = false;\n    for ($i = 0; $i < count($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $flag = true;\n            if\
    \ (ctype_upper($s[$i])) {\n                $res .= strtolower($s[$i]);\n     \
    \       } else {\n                $res .= strtoupper($s[$i]);\n            }\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    if ($flag)\
    \ {\n        return $res;\n    } else {\n        return strrev($res);\n    }\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n    \
    \    }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n\
    \    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $s[$key] = strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}", "    $s\
    \ = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $result .= strtoupper($char) == $char ?\
    \ strtolower($char) : strtoupper($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return strrev($result);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $is_letter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $is_letter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $is_letter\
    \ ? implode('', $result) : strrev(implode('', $result));\n}\n", "    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n  \
    \  }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $result = '';\n    $letters = str_split($s);\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\necho\
    \ solve(\"1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"\
    #a@C\");\necho \"\\n\";", "    $s = str_split($s);\n    $letters = [];\n    $numbers\
    \ = [];\n    foreach ($s as $key => $value) {\n        if (is_numeric($value))\
    \ {\n            $numbers[] = $value;\n        } else {\n            $letters[]\
    \ = $value;\n        }\n    }\n    if (count($letters) == 0) {\n        return\
    \ strrev(implode('', $numbers));\n    }\n    foreach ($letters as $key => $value)\
    \ {\n        if (ctype_upper($value)) {\n            $letters[$key] = strtolower($value);\n\
    \        } else {\n            $letters[$key] = strtoupper($value);\n        }\n\
    \    }\n    return implode('', $letters) . implode('', $numbers);\n}\necho solve(\"\
    1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $result = '';\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $result[] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n", "    $s\
    \ = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $result[] = strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve(\"\
    1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\\
    n\";", "    $s = str_split($s);\n    $result = [];\n    $isLetter = false;\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = strtolower($char) === $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n", "    $letters = str_split($s);\n    $reversed = [];\n    $hasLetters\
    \ = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $hasLetters = true;\n            $reversed[] = strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $reversed[] = $letter;\n        }\n    }\n    return $hasLetters\
    \ ? implode('', $reversed) : strrev($s);\n}\n\necho solve(\"1234\") . \"\\n\"\
    ;\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    $letters\
    \ = str_split($s);\n    $result = [];\n    $hasLetter = false;\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $hasLetter =\
    \ true;\n            $result[] = ctype_upper($letter) ? strtolower($letter) :\
    \ strtoupper($letter);\n        } else {\n            $result[] = $letter;\n \
    \       }\n    }\n    return $hasLetter ? implode('', $result) : strrev($s);\n\
    }\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ strrev($result);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] =\
    \ $char;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n\
    \        if (ctype_alpha($char)) {\n            $s[$key] = strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $s = str_split($s);\n    $res = '';\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $res .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $res .= $char;\n        }\n    }\n    return $res;\n}\n", "    $letters\
    \ = str_split($s);\n    $reversed = [];\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $reversed[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $reversed[] = $letter;\n        }\n    }\n    return implode('',\
    \ $reversed);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";", "    $result = '';\n    $letters = ['a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'];\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (in_array($s[$i], $letters)) {\n            if ($s[$i] == strtoupper($s[$i]))\
    \ {\n                $result .= strtolower($s[$i]);\n            } else {\n  \
    \              $result .= strtoupper($s[$i]);\n            }\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n",
  "    $s = str_split($s);\n    $result = [];\n    $hasLetter = false;\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $hasLetter =\
    \ true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $hasLetter ? implode($result) : strrev(implode($result));\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_57_monotonic
language: php
prompt: "<?php\n// Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1, 20, 4,\
  \ 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction monotonic($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10))\
  \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
  \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $increasing = true;\n    $decreasing = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n", " \
    \   $increasing = true;\n    $decreasing = true;\n    $last = $l[0];\n    for\
    \ ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $last) {\n          \
    \  $increasing = false;\n        }\n        if ($l[$i] > $last) {\n          \
    \  $decreasing = false;\n        }\n        $last = $l[$i];\n    }\n    return\
    \ $increasing || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    $prev = $l[0];\n    foreach ($l as $e) {\n        if ($e > $prev)\
    \ {\n            $decreasing = false;\n        }\n        if ($e < $prev) {\n\
    \            $increasing = false;\n        }\n        $prev = $e;\n    }\n   \
    \ return $increasing || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i\
    \ - 1]) {\n            $increasing = false;\n        }\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing = true;\n \
    \   $prev = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $prev) {\n            $increasing = false;\n        }\n        if ($l[$i]\
    \ > $prev) {\n            $decreasing = false;\n        }\n        $prev = $l[$i];\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $d = $l[1] - $l[0];\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if (($l[$i] - $l[$i - 1]) *\
    \ $d < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n", "    $inc = $dec\
    \ = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $dec = false;\n        } else if ($l[$i] < $l[$i - 1])\
    \ {\n            $inc = false;\n        }\n    }\n    return $inc || $dec;\n}\n",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $l[$i - 1]) {\n            $dec = false;\n        } else if ($l[$i] < $l[$i\
    \ - 1]) {\n            $inc = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n", "    $inc = true;\n    $dec = true;\n    $prev = $l[0];\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $prev) {\n            $inc = false;\n\
    \        }\n        if ($l[$i] > $prev) {\n            $dec = false;\n       \
    \ }\n        $prev = $l[$i];\n    }\n    return $inc || $dec;\n}\n", "    $inc\
    \ = true;\n    $dec = true;\n    $prev = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $prev) {\n            $dec = false;\n        }\
    \ else if ($l[$i] < $prev) {\n            $inc = false;\n        }\n        $prev\
    \ = $l[$i];\n    }\n    return $inc || $dec;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n", "    $is_increasing = true;\n\
    \    $is_decreasing = true;\n    $prev = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $prev) {\n            $is_decreasing = false;\n\
    \        } else if ($l[$i] < $prev) {\n            $is_increasing = false;\n \
    \       }\n        $prev = $l[$i];\n    }\n    return $is_increasing || $is_decreasing;\n\
    }\n", "    $monotonic = true;\n    $increasing = $l[0] < $l[1];\n    for ($i =\
    \ 1; $i < count($l) - 1; $i++) {\n        if ($increasing) {\n            if ($l[$i]\
    \ > $l[$i + 1]) {\n                $monotonic = false;\n                break;\n\
    \            }\n        } else {\n            if ($l[$i] < $l[$i + 1]) {\n   \
    \             $monotonic = false;\n                break;\n            }\n   \
    \     }\n    }\n    return $monotonic;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i\
    \ - 1]) {\n            $increasing = false;\n        }\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing = true;\n \
    \   $prev = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $prev) {\n            $decreasing = false;\n        }\n        if ($l[$i]\
    \ < $prev) {\n            $increasing = false;\n        }\n        $prev = $l[$i];\n\
    \    }\n    return $increasing || $decreasing;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_58_common
results:
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$result = common($l1,\
    \ $l2);\nprint_r($result);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$result\
    \ = common($l1, $l2);\nprint_r($result);\nfunction candidate(...$args) {\n   \
    \ return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp4fmua_xx.php:45\nStack trace:\n#0 /tmp/tmp4fmua_xx.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4fmua_xx.php on line 45\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $common = array();\n    foreach ($l1 as $e1) {\n   \
    \     foreach ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $common[]\
    \ = $e1;\n            }\n        }\n    }\n    return array_unique($common);\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo72p_011.php:24\n\
    Stack trace:\n#0 /tmp/tmpo72p_011.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo72p_011.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $result = array();\n  foreach ($l1 as $item) {\n    if\
    \ (in_array($item, $l2)) {\n      $result[] = $item;\n    }\n  }\n  return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnisox3y.php:22\n\
    Stack trace:\n#0 /tmp/tmplnisox3y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplnisox3y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\nprint_r(common($l1,\
    \ $l2));\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\nprint_r(common($l1,\
    \ $l2));\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpafrmrf10.php:43\nStack trace:\n#0 /tmp/tmpafrmrf10.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpafrmrf10.php on line 43\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\n$l1 = array(1, 4, 3, 34,\
    \ 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$res = common($l1, $l2);\n\
    print_r($res);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$res = common($l1,\
    \ $l2);\nprint_r($res);\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmnvtxfia.php:45\nStack trace:\n#0 /tmp/tmpmnvtxfia.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmnvtxfia.php on line 45\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $l3 = [];\n    while ($i < count($l1) && $j < count($l2))\
    \ {\n        if ($l1[$i] == $l2[$j]) {\n            $l3[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n     \
    \       $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $l3;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2))\
    \ {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        for ($j\
    \ = 0; $j < count($l2); $j++) {\n            if ($l1[$i] == $l2[$j]) {\n     \
    \           $common[] = $l1[$i];\n            }\n        }\n    }\n    sort($common);\n\
    \    return $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        }\
    \ else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\nprint_r(common($l1,\
    \ $l2));\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\nprint_r(common($l1,\
    \ $l2));\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpafrmrf10.php:43\nStack trace:\n#0 /tmp/tmpafrmrf10.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpafrmrf10.php on line 43\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    foreach ($l1 as $e)\
    \ {\n        if (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnx2bd9g.php:24\n\
    Stack trace:\n#0 /tmp/tmpcnx2bd9g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcnx2bd9g.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e) {\n        if\
    \ (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n\
    \    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $result = [];\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $result = [];\n\
    \    for ($i = 0; $i < count($l1); $i++) {\n        for ($j = 0; $j < count($l2);\
    \ $j++) {\n            if ($l1[$i] == $l2[$j]) {\n                $result[] =\
    \ $l1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkryo_u0g.php:28\n\
    Stack trace:\n#0 /tmp/tmpkryo_u0g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkryo_u0g.php\
    \ on line 28\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2))\
    \ {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  sort($l1);\n  sort($l2);\n  $i = 0;\n  $j = 0;\n  $res = array();\n  while\
    \ ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i] == $l2[$j]) {\n    \
    \  $res[] = $l1[$i];\n      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j])\
    \ {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n  return $res;\n}\n\n\
    function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9,\
    \ 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $v) {\n        if\
    \ (in_array($v, $l2)) {\n            $result[] = $v;\n        }\n    }\n    return\
    \ array_unique($result);\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2clhbybt.php:22\n\
    Stack trace:\n#0 /tmp/tmp2clhbybt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2clhbybt.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    sort($l1);\n    sort($l2);\n    $i\
    \ = 0;\n    $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n      \
    \  if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else if ($l1[$i] > $l2[$j])\
    \ {\n            $j++;\n        } else {\n            $result[] = $l1[$i];\n \
    \           $i++;\n            $j++;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        }\
    \ else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $result = [];\n\
    \    for ($i = 0; $i < count($l1); $i++) {\n        for ($j = 0; $j < count($l2);\
    \ $j++) {\n            if ($l1[$i] == $l2[$j]) {\n                $result[] =\
    \ $l1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkryo_u0g.php:28\n\
    Stack trace:\n#0 /tmp/tmpkryo_u0g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkryo_u0g.php\
    \ on line 28\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $i = 0;\n   \
    \ $j = 0;\n    $result = [];\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n     \
    \       $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9a2zhwxu.php:34\n\
    Stack trace:\n#0 /tmp/tmp9a2zhwxu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9a2zhwxu.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $i = 0;\n   \
    \ $j = 0;\n    $result = [];\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n    \
    \        $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy47ssqxk.php:34\n\
    Stack trace:\n#0 /tmp/tmpy47ssqxk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy47ssqxk.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $res = [];\n\
    \    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $res[] = $l1[$i];\n          \
    \  $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n        \
    \    $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3fjbwmj.php:34\n\
    Stack trace:\n#0 /tmp/tmpk3fjbwmj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk3fjbwmj.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        }\
    \ else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $i = 0;\n   \
    \ $j = 0;\n    $result = array();\n    while ($i < count($l1) && $j < count($l2))\
    \ {\n        if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else if ($l1[$i]\
    \ > $l2[$j]) {\n            $j++;\n        } else {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ojifo67.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ojifo67.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7ojifo67.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e) {\n        if\
    \ (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n    return\
    \ array_unique($result);\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew17xc_c.php:22\n\
    Stack trace:\n#0 /tmp/tmpew17xc_c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpew17xc_c.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $res = [];\n    foreach ($l1 as $e) {\n        if (in_array($e,\
    \ $l2)) {\n            $res[] = $e;\n        }\n    }\n    return array_unique($res);\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs5w58rl.php:22\n\
    Stack trace:\n#0 /tmp/tmpqs5w58rl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqs5w58rl.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $res = [];\n    foreach ($l1 as $e) {\n        if (in_array($e,\
    \ $l2)) {\n            $res[] = $e;\n        }\n    }\n    return array_unique($res);\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs5w58rl.php:22\n\
    Stack trace:\n#0 /tmp/tmpqs5w58rl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqs5w58rl.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba3m8lju.php:24\n\
    Stack trace:\n#0 /tmp/tmpba3m8lju.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpba3m8lju.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $result = [];\n\
    \    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n    \
    \        $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\n$l1 = [1, 4, 3, 34, 653, 2, 5];\n$l2 = [5, 7, 1, 5, 9, 653, 121];\n\
    print_r(common($l1, $l2));\n\n$l1 = [5, 3, 2, 8];\n$l2 = [3, 2];\nprint_r(common($l1,\
    \ $l2));\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpum6l5qft.php:41\nStack trace:\n#0 /tmp/tmpum6l5qft.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpum6l5qft.php on line 41\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  $l1 = array_values($l1);\n  $l2 = array_values($l2);\n  $result = [];\n  $i\
    \ = 0;\n  $j = 0;\n  while ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i]\
    \ == $l2[$j]) {\n      $result[] = $l1[$i];\n      $i++;\n      $j++;\n    } else\
    \ if ($l1[$i] < $l2[$j]) {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n\
    \  return $result;\n}\n\n$l1 = [1, 4, 3, 34, 653, 2, 5];\n$l2 = [5, 7, 1, 5, 9,\
    \ 653, 121];\n$l3 = [5, 3, 2, 8];\n$l4 = [3, 2];\n\necho \"common($l1, $l2) =\
    \ \" . json_encode(common($l1, $l2)) . \"\\n\";\necho \"common($l3, $l4) = \"\
    \ . json_encode(common($l3, $l4)) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "common(Array, Array) = [653]\ncommon(Array, Array) = []\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6aqlnofu.php:41\nStack trace:\n\
    #0 /tmp/tmp6aqlnofu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6aqlnofu.php\
    \ on line 41\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l = array();\n\
    \    for ($i = 0; $i < count($l1); $i++) {\n        for ($j = 0; $j < count($l2);\
    \ $j++) {\n            if ($l1[$i] == $l2[$j]) {\n                $l[] = $l1[$i];\n\
    \            }\n        }\n    }\n    return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaci08q0o.php:28\n\
    Stack trace:\n#0 /tmp/tmpaci08q0o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaci08q0o.php\
    \ on line 28\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $result[] = $e;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9,\
    \ 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfu9memur.php:24\n\
    Stack trace:\n#0 /tmp/tmpfu9memur.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfu9memur.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $common = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $common[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    sort($result);\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxen9niim.php:25\n\
    Stack trace:\n#0 /tmp/tmpxen9niim.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxen9niim.php\
    \ on line 25\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2))\
    \ {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = array();\n    while ($i < $l1_len &&\
    \ $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $result = [];\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\n$l1 = array(1, 4, 3, 34,\
    \ 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$res = common($l1, $l2);\n\
    print_r($res);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$res = common($l1,\
    \ $l2);\nprint_r($res);\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmnvtxfia.php:45\nStack trace:\n#0 /tmp/tmpmnvtxfia.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmnvtxfia.php on line 45\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e) {\n        if\
    \ (in_array($e, $l2)) {\n            array_push($result, $e);\n        }\n   \
    \ }\n    sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$result = common($l1,\
    \ $l2);\nprint_r($result);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$result\
    \ = common($l1, $l2);\nprint_r($result);\nfunction candidate(...$args) {\n   \
    \ return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp4fmua_xx.php:45\nStack trace:\n#0 /tmp/tmp4fmua_xx.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4fmua_xx.php on line 45\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        }\
    \ else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $i) {\n        if (in_array($i, $l2))\
    \ {\n            $result[] = $i;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  $l1 = array_values($l1);\n  $l2 = array_values($l2);\n  $l1_len = count($l1);\n\
    \  $l2_len = count($l2);\n  $i = 0;\n  $j = 0;\n  $result = array();\n  while\
    \ ($i < $l1_len && $j < $l2_len) {\n    if ($l1[$i] < $l2[$j]) {\n      $i++;\n\
    \    } else if ($l1[$i] > $l2[$j]) {\n      $j++;\n    } else {\n      $result[]\
    \ = $l1[$i];\n      $i++;\n      $j++;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7eein6az.php:36\n\
    Stack trace:\n#0 /tmp/tmp7eein6az.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7eein6az.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  $l1 = array_values($l1);\n  $l2 = array_values($l2);\n  $l1_len = count($l1);\n\
    \  $l2_len = count($l2);\n  $i = 0;\n  $j = 0;\n  $result = array();\n  while\
    \ ($i < $l1_len && $j < $l2_len) {\n    if ($l1[$i] == $l2[$j]) {\n      $result[]\
    \ = $l1[$i];\n      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j]) {\n\
    \      $i++;\n    } else {\n      $j++;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9,\
    \ 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2f0mxfd.php:36\n\
    Stack trace:\n#0 /tmp/tmpy2f0mxfd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy2f0mxfd.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $common[] = $item;\n        }\n    }\n    sort($common);\n\
    \    return $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2))\
    \ {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    sort($l1);\n    sort($l2);\n    $i\
    \ = 0;\n    $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n      \
    \  if ($l1[$i] == $l2[$j]) {\n            if (!in_array($l1[$i], $result)) {\n\
    \                $result[] = $l1[$i];\n            }\n            $i++;\n    \
    \        $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n  \
    \      } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    foreach ($l1 as $value)\
    \ {\n        if (in_array($value, $l2)) {\n            $result[] = $value;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $common = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $common[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooerr0nk.php:36\n\
    Stack trace:\n#0 /tmp/tmpooerr0nk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpooerr0nk.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $l1_i = 0;\n    $l2_i = 0;\n    $result = array();\n\
    \    while ($l1_i < $l1_len && $l2_i < $l2_len) {\n        if ($l1[$l1_i] == $l2[$l2_i])\
    \ {\n            $result[] = $l1[$l1_i];\n            $l1_i++;\n            $l2_i++;\n\
    \        } elseif ($l1[$l1_i] < $l2[$l2_i]) {\n            $l1_i++;\n        }\
    \ else {\n            $l2_i++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpone1da2s.php:36\n\
    Stack trace:\n#0 /tmp/tmpone1da2s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpone1da2s.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        }\
    \ else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $result = [];\n\
    \    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n    \
    \        $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfz96kj1o.php:34\n\
    Stack trace:\n#0 /tmp/tmpfz96kj1o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfz96kj1o.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e) {\n        if\
    \ (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n    return\
    \ array_unique($result);\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew17xc_c.php:22\n\
    Stack trace:\n#0 /tmp/tmpew17xc_c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpew17xc_c.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $value) {\n     \
    \   if (in_array($value, $l2)) {\n            $result[] = $value;\n        }\n\
    \    }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ag_lq2x.php:22\n\
    Stack trace:\n#0 /tmp/tmp0ag_lq2x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0ag_lq2x.php\
    \ on line 22\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $res[] = $l1[$i];\n            $i++;\n        \
    \    $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwq0so98.php:36\n\
    Stack trace:\n#0 /tmp/tmpnwq0so98.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnwq0so98.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclqmh81g.php:24\n\
    Stack trace:\n#0 /tmp/tmpclqmh81g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpclqmh81g.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2))\
    \ {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba3m8lju.php:24\n\
    Stack trace:\n#0 /tmp/tmpba3m8lju.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpba3m8lju.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $res[] = $l1[$i];\n            $i++;\n            $j++;\n   \
    \     } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n \
    \           $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $common = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $common[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvlx01ja.php:36\n\
    Stack trace:\n#0 /tmp/tmphvlx01ja.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphvlx01ja.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    foreach ($l1 as $item)\
    \ {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n   \
    \     }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  sort($l1);\n  sort($l2);\n  $i = 0;\n  $j = 0;\n  $result = array();\n  while\
    \ ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i] < $l2[$j]) {\n     \
    \ $i++;\n    } else if ($l1[$i] > $l2[$j]) {\n      $j++;\n    } else {\n    \
    \  $result[] = $l1[$i];\n      $i++;\n      $j++;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclqmh81g.php:24\n\
    Stack trace:\n#0 /tmp/tmpclqmh81g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpclqmh81g.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclqmh81g.php:24\n\
    Stack trace:\n#0 /tmp/tmpclqmh81g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpclqmh81g.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $res = [];\n    $l1 = array_unique($l1);\n    $l2 =\
    \ array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $res[] = $item;\n        }\n    }\n    return $res;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotorr7av.php:24\n\
    Stack trace:\n#0 /tmp/tmpotorr7av.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpotorr7av.php\
    \ on line 24\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $result = [];\n    for ($i = 0; $i < $l1_len;\
    \ $i++) {\n        for ($j = 0; $j < $l2_len; $j++) {\n            if ($l1[$i]\
    \ == $l2[$j]) {\n                $result[] = $l1[$i];\n            }\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6hdzdrf.php:30\n\
    Stack trace:\n#0 /tmp/tmpf6hdzdrf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf6hdzdrf.php\
    \ on line 30\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $result = [];\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  $l1 = array_values($l1);\n  $l2 = array_values($l2);\n  $l1_len = count($l1);\n\
    \  $l2_len = count($l2);\n  $i = 0;\n  $j = 0;\n  $result = array();\n  while\
    \ ($i < $l1_len && $j < $l2_len) {\n    if ($l1[$i] == $l2[$j]) {\n      $result[]\
    \ = $l1[$i];\n      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j]) {\n\
    \      $i++;\n    } else {\n      $j++;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9,\
    \ 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2f0mxfd.php:36\n\
    Stack trace:\n#0 /tmp/tmpy2f0mxfd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy2f0mxfd.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctp25xlr.php:36\n\
    Stack trace:\n#0 /tmp/tmpctp25xlr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpctp25xlr.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkolfwh_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpkolfwh_2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkolfwh_2.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $result[] = $l1[$i];\n            $i++;\n     \
    \       $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4, 3,\
    \ 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\nprint_r(common($l1,\
    \ $l2));\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\nprint_r(common($l1,\
    \ $l2));\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5,\
    \ 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmplbrtxsl6.php:43\nStack trace:\n#0 /tmp/tmplbrtxsl6.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplbrtxsl6.php on line 43\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n  $result = array();\n  sort($l1);\n  sort($l2);\n  $i =\
    \ 0;\n  $j = 0;\n  while ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i]\
    \ == $l2[$j]) {\n      $result[] = $l1[$i];\n      $i++;\n      $j++;\n    } else\
    \ if ($l1[$i] < $l2[$j]) {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$res = array();\n\twhile ($i\
    \ < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t$res[]\
    \ = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j]) {\n\t\
    \t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzdy9irc.php:36\n\
    Stack trace:\n#0 /tmp/tmpzzdy9irc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzdy9irc.php\
    \ on line 36\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $i = 0;\n   \
    \ $j = 0;\n    $result = [];\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n    \
    \        $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy47ssqxk.php:34\n\
    Stack trace:\n#0 /tmp/tmpy47ssqxk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy47ssqxk.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n\
    \        } else {\n            $res[] = $l1[$i];\n            $i++;\n        \
    \    $j++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwq0so98.php:36\n\
    Stack trace:\n#0 /tmp/tmpnwq0so98.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnwq0so98.php\
    \ on line 36\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi_y5m7y.php:22\n\
    Stack trace:\n#0 /tmp/tmpmi_y5m7y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmi_y5m7y.php\
    \ on line 22\n"
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] ==\
    \ $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n          \
    \  $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n       \
    \ } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e1) {\n        foreach\
    \ ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21jdwv1_.php:24\n\
    Stack trace:\n#0 /tmp/tmp21jdwv1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp21jdwv1_.php\
    \ on line 24\n"
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = array();\n  \
    \  while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $res[] = $l1[$i];\n            $i++;\n            $j++;\n       \
    \ } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n     \
    \       $j++;\n        }\n    }\n    return $res;\n}\n\n$l1 = array(1, 4, 3, 34,\
    \ 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n\nprint_r(common($l1, $l2));\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 653\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpo8zy8tal.php:41\nStack trace:\n#0 /tmp/tmpo8zy8tal.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpo8zy8tal.php on line 41\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $e) {\n        if\
    \ (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n\
    \    return array_unique($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    return array_unique(array_intersect($l1, $l2));\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps51tn0qu.php:16\n\
    Stack trace:\n#0 /tmp/tmps51tn0qu.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps51tn0qu.php\
    \ on line 16\n"
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $i = 0;\n   \
    \ $j = 0;\n    $result = [];\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n     \
    \       $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9a2zhwxu.php:34\n\
    Stack trace:\n#0 /tmp/tmp9a2zhwxu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9a2zhwxu.php\
    \ on line 34\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $result = [];\n    foreach ($l1 as $item) {\n      \
    \  if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n  \
    \  }\n    sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730379
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $result = [];\n\
    \    for ($i = 0; $i < count($l1); $i++) {\n        for ($j = 0; $j < count($l2);\
    \ $j++) {\n            if ($l1[$i] == $l2[$j]) {\n                $result[] =\
    \ $l1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkryo_u0g.php:28\n\
    Stack trace:\n#0 /tmp/tmpkryo_u0g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkryo_u0g.php\
    \ on line 28\n"
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile\
    \ ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\
    $result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j])\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 0
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730380
- exit_code: 255
  program: "<?php\n// Return sorted unique common elements for two arrays.\n// >>>\
    \ common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1,\
    \ 5, 653)\n// >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction\
    \ common($l1, $l2) {\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $l1_idx = 0;\n    $l2_idx = 0;\n    $result =\
    \ array();\n    while ($l1_idx < $l1_len && $l2_idx < $l2_len) {\n        if ($l1[$l1_idx]\
    \ == $l2[$l2_idx]) {\n            $result[] = $l1[$l1_idx];\n            $l1_idx++;\n\
    \            $l2_idx++;\n        } else if ($l1[$l1_idx] < $l2[$l2_idx]) {\n \
    \           $l1_idx++;\n        } else {\n            $l2_idx++;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xiteny6.php:36\n\
    Stack trace:\n#0 /tmp/tmp2xiteny6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2xiteny6.php\
    \ on line 36\n"
  timestamp: 1659730380

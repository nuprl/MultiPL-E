language: php
name: HumanEval_158_find_max
results:
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_characters($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp242j4ith.php:16\nStack trace:\n#0 /tmp/tmp242j4ith.php(26): find_max(Array)\n\
    #1 /tmp/tmp242j4ith.php(30): candidate(Array)\n#2 /tmp/tmp242j4ith.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp242j4ith.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\", \"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp47mgfnyr.php:37\nStack trace:\n#0 /tmp/tmp47mgfnyr.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmp47mgfnyr.php on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdir2rb_h.php:37\nStack trace:\n#0 /tmp/tmpdir2rb_h.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdir2rb_h.php on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $unique_chars = array_unique($chars);\n        $count = count($unique_chars);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjxudt3w.php:33\n\
    Stack trace:\n#0 /tmp/tmpjjxudt3w.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjjxudt3w.php\
    \ on line 33\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = $words[0];\n\
    \t$max_unique_chars = count_unique_chars($max_word);\n\tforeach ($words as $word)\
    \ {\n\t\t$unique_chars = count_unique_chars($word);\n\t\tif ($unique_chars > $max_unique_chars)\
    \ {\n\t\t\t$max_word = $word;\n\t\t\t$max_unique_chars = $unique_chars;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpe54q05o0.php:14\nStack trace:\n#0 /tmp/tmpe54q05o0.php(26): find_max(Array)\n\
    #1 /tmp/tmpe54q05o0.php(30): candidate(Array)\n#2 /tmp/tmpe54q05o0.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe54q05o0.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_characters($max_word);\n    foreach ($words as\
    \ $word) {\n        $count = count_unique_characters($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmpgh5enhjv.php:14\nStack trace:\n#0 /tmp/tmpgh5enhjv.php(26): find_max(Array)\n\
    #1 /tmp/tmpgh5enhjv.php(30): candidate(Array)\n#2 /tmp/tmpgh5enhjv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpgh5enhjv.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        } else if ($count == $max_count) {\n            if ($words[$i] < $max_word)\
    \ {\n                $max_word = $words[$i];\n            }\n        }\n    }\n\
    \    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplzpou5dy.php:14\nStack trace:\n#0 /tmp/tmplzpou5dy.php(30): find_max(Array)\n\
    #1 /tmp/tmplzpou5dy.php(34): candidate(Array)\n#2 /tmp/tmplzpou5dy.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmplzpou5dy.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        } else if ($count == $max_count) {\n            if ($words[$i] < $max_word)\
    \ {\n                $max_word = $words[$i];\n            }\n        }\n    }\n\
    \    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplzpou5dy.php:14\nStack trace:\n#0 /tmp/tmplzpou5dy.php(30): find_max(Array)\n\
    #1 /tmp/tmplzpou5dy.php(34): candidate(Array)\n#2 /tmp/tmplzpou5dy.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmplzpou5dy.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = '';\n   \
    \ $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp3mc4jm1w.php:16\nStack trace:\n#0 /tmp/tmp3mc4jm1w.php(26): find_max(Array)\n\
    #1 /tmp/tmp3mc4jm1w.php(30): candidate(Array)\n#2 /tmp/tmp3mc4jm1w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3mc4jm1w.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = '';\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7tomiz5_.php:16\nStack trace:\n#0 /tmp/tmp7tomiz5_.php(26): find_max(Array)\n\
    #1 /tmp/tmp7tomiz5_.php(30): candidate(Array)\n#2 /tmp/tmp7tomiz5_.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7tomiz5_.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\n$words = array(\"\
    name\", \"of\", \"string\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm9z5ukep.php:37\nStack trace:\n#0 /tmp/tmpm9z5ukep.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm9z5ukep.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = $words[0];\n\
    \t$max_unique_chars = count_unique_chars($max_word);\n\tforeach ($words as $word)\
    \ {\n\t\t$unique_chars = count_unique_chars($word);\n\t\tif ($unique_chars > $max_unique_chars)\
    \ {\n\t\t\t$max_word = $word;\n\t\t\t$max_unique_chars = $unique_chars;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpe54q05o0.php:14\nStack trace:\n#0 /tmp/tmpe54q05o0.php(26): find_max(Array)\n\
    #1 /tmp/tmpe54q05o0.php(30): candidate(Array)\n#2 /tmp/tmpe54q05o0.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe54q05o0.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  foreach ($words as $word)\
    \ {\n    $unique_chars = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars)\
    \ {\n      $max_word = $word;\n      $max_unique_chars = $unique_chars;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl11nhrtl.php:14\nStack trace:\n#0 /tmp/tmpl11nhrtl.php(26): find_max(Array)\n\
    #1 /tmp/tmpl11nhrtl.php(30): candidate(Array)\n#2 /tmp/tmpl11nhrtl.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl11nhrtl.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    foreach ($words as $word)\
    \ {\n        $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpq2mrfkx_.php:14\nStack trace:\n#0 /tmp/tmpq2mrfkx_.php(26): find_max(Array)\n\
    #1 /tmp/tmpq2mrfkx_.php(30): candidate(Array)\n#2 /tmp/tmpq2mrfkx_.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq2mrfkx_.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdir2rb_h.php:37\nStack trace:\n#0 /tmp/tmpdir2rb_h.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdir2rb_h.php on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp901bjq.php:31\n\
    Stack trace:\n#0 /tmp/tmplp901bjq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp901bjq.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = \"\";\n\t$max_unique_chars\
    \ = 0;\n\tforeach ($words as $word) {\n\t\t$unique_chars = count_unique_chars($word);\n\
    \t\tif ($unique_chars > $max_unique_chars) {\n\t\t\t$max_unique_chars = $unique_chars;\n\
    \t\t\t$max_word = $word;\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpkmgx8wzc.php:16\nStack trace:\n#0 /tmp/tmpkmgx8wzc.php(26): find_max(Array)\n\
    #1 /tmp/tmpkmgx8wzc.php(30): candidate(Array)\n#2 /tmp/tmpkmgx8wzc.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkmgx8wzc.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = $words[0];\n\
    \t$max_unique_chars = count_unique_chars($max_word);\n\tforeach ($words as $word)\
    \ {\n\t\t$unique_chars = count_unique_chars($word);\n\t\tif ($unique_chars > $max_unique_chars)\
    \ {\n\t\t\t$max_word = $word;\n\t\t\t$max_unique_chars = $unique_chars;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpe54q05o0.php:14\nStack trace:\n#0 /tmp/tmpe54q05o0.php(26): find_max(Array)\n\
    #1 /tmp/tmpe54q05o0.php(30): candidate(Array)\n#2 /tmp/tmpe54q05o0.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe54q05o0.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_len = strlen(array_unique(str_split($max_word)));\n    foreach ($words\
    \ as $word) {\n        $len = strlen(array_unique(str_split($word)));\n      \
    \  if ($len > $max_len) {\n            $max_len = $len;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmpb4r3lyya.php\
    \ on line 14\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmpb4r3lyya.php on line 16\n\nWarning: strlen() expects parameter 1\
    \ to be string, array given in /tmp/tmpb4r3lyya.php on line 16\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmpb4r3lyya.php on line\
    \ 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4r3lyya.php:30\n\
    Stack trace:\n#0 /tmp/tmpb4r3lyya.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb4r3lyya.php\
    \ on line 30\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz26awq2.php:31\n\
    Stack trace:\n#0 /tmp/tmplz26awq2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplz26awq2.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = '';\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7tomiz5_.php:16\nStack trace:\n#0 /tmp/tmp7tomiz5_.php(26): find_max(Array)\n\
    #1 /tmp/tmp7tomiz5_.php(30): candidate(Array)\n#2 /tmp/tmp7tomiz5_.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7tomiz5_.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz26awq2.php:31\n\
    Stack trace:\n#0 /tmp/tmplz26awq2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplz26awq2.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  foreach ($words as $word)\
    \ {\n    $unique_chars = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars)\
    \ {\n      $max_word = $word;\n      $max_unique_chars = $unique_chars;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl11nhrtl.php:14\nStack trace:\n#0 /tmp/tmpl11nhrtl.php(26): find_max(Array)\n\
    #1 /tmp/tmpl11nhrtl.php(30): candidate(Array)\n#2 /tmp/tmpl11nhrtl.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl11nhrtl.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\n$words = array(\"\
    name\", \"of\", \"string\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm9z5ukep.php:37\nStack trace:\n#0 /tmp/tmpm9z5ukep.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm9z5ukep.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max = 0;\n\t$max_word\
    \ = \"\";\n\tforeach ($words as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\
    \t\tif (count($unique_chars) > $max) {\n\t\t\t$max = count($unique_chars);\n\t\
    \t\t$max_word = $word;\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs6_rb67.php:31\n\
    Stack trace:\n#0 /tmp/tmphs6_rb67.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphs6_rb67.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        } else if ($count == $max_count) {\n            if ($words[$i] < $max_word)\
    \ {\n                $max_word = $words[$i];\n            }\n        }\n    }\n\
    \    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplzpou5dy.php:14\nStack trace:\n#0 /tmp/tmplzpou5dy.php(30): find_max(Array)\n\
    #1 /tmp/tmplzpou5dy.php(34): candidate(Array)\n#2 /tmp/tmplzpou5dy.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmplzpou5dy.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp901bjq.php:31\n\
    Stack trace:\n#0 /tmp/tmplp901bjq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp901bjq.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_unique_chars = 0;\n\
    \  $max_word = '';\n  foreach ($words as $word) {\n    $unique_chars = count_unique_chars($word);\n\
    \    if ($unique_chars > $max_unique_chars) {\n      $max_unique_chars = $unique_chars;\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp89gh_ahq.php:16\nStack trace:\n#0 /tmp/tmp89gh_ahq.php(26): find_max(Array)\n\
    #1 /tmp/tmp89gh_ahq.php(30): candidate(Array)\n#2 /tmp/tmp89gh_ahq.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp89gh_ahq.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpc37pqdrg.php:37\nStack trace:\n#0 /tmp/tmpc37pqdrg.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc37pqdrg.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_characters($max_word);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $current_word = $words[$i];\n        $current_count = count_unique_characters($current_word);\n\
    \        if ($current_count > $max_count) {\n            $max_word = $current_word;\n\
    \            $max_count = $current_count;\n        } else if ($current_count ==\
    \ $max_count) {\n            if ($current_word < $max_word) {\n              \
    \  $max_word = $current_word;\n            }\n        }\n    }\n    return $max_word;\n\
    }\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmpy3kwxhw4.php:14\nStack trace:\n#0 /tmp/tmpy3kwxhw4.php(31): find_max(Array)\n\
    #1 /tmp/tmpy3kwxhw4.php(35): candidate(Array)\n#2 /tmp/tmpy3kwxhw4.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy3kwxhw4.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdir2rb_h.php:37\nStack trace:\n#0 /tmp/tmpdir2rb_h.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdir2rb_h.php on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = '';\n   \
    \ $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words) . \"\\n\";\n$words = array(\"name\", \"\
    enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpbqsilk8b.php:38\nStack trace:\n#0 /tmp/tmpbqsilk8b.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbqsilk8b.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpvnzb0tns.php:16\nStack trace:\n#0 /tmp/tmpvnzb0tns.php(25): find_max(Array)\n\
    #1 /tmp/tmpvnzb0tns.php(29): candidate(Array)\n#2 /tmp/tmpvnzb0tns.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvnzb0tns.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $word = $words[$i];\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_word = $word;\n      $max_count =\
    \ $count;\n    } else if ($count == $max_count) {\n      if ($word < $max_word)\
    \ {\n        $max_word = $word;\n      }\n    }\n  }\n  return $max_word;\n}\n\
    \nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp9j6e4d8v.php:14\nStack trace:\n#0 /tmp/tmp9j6e4d8v.php(31): find_max(Array)\n\
    #1 /tmp/tmp9j6e4d8v.php(35): candidate(Array)\n#2 /tmp/tmp9j6e4d8v.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9j6e4d8v.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = '';\n   \
    \ $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp3mc4jm1w.php:16\nStack trace:\n#0 /tmp/tmp3mc4jm1w.php(26): find_max(Array)\n\
    #1 /tmp/tmp3mc4jm1w.php(30): candidate(Array)\n#2 /tmp/tmp3mc4jm1w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3mc4jm1w.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  foreach ($words as $word)\
    \ {\n    $unique_chars = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars)\
    \ {\n      $max_word = $word;\n      $max_unique_chars = $unique_chars;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl11nhrtl.php:14\nStack trace:\n#0 /tmp/tmpl11nhrtl.php(26): find_max(Array)\n\
    #1 /tmp/tmpl11nhrtl.php(30): candidate(Array)\n#2 /tmp/tmpl11nhrtl.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl11nhrtl.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_num_unique_chars = 0;\n    foreach ($words as $word) {\n        $unique_chars\
    \ = array_unique(str_split($word));\n        $num_unique_chars = count($unique_chars);\n\
    \        if ($num_unique_chars > $max_num_unique_chars) {\n            $max_num_unique_chars\
    \ = $num_unique_chars;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm_ibmtw.php:32\n\
    Stack trace:\n#0 /tmp/tmphm_ibmtw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphm_ibmtw.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = $words[0];\n\
    \t$max_count = count_unique_chars($words[0]);\n\tfor ($i = 1; $i < count($words);\
    \ $i++) {\n\t\t$count = count_unique_chars($words[$i]);\n\t\tif ($count > $max_count)\
    \ {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $words[$i];\n\t\t}\n\t}\n\t\
    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpooyzh5ce.php:14\nStack trace:\n#0 /tmp/tmpooyzh5ce.php(26): find_max(Array)\n\
    #1 /tmp/tmpooyzh5ce.php(30): candidate(Array)\n#2 /tmp/tmpooyzh5ce.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpooyzh5ce.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\n$words = array(\"\
    name\", \"of\", \"string\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm9z5ukep.php:37\nStack trace:\n#0 /tmp/tmpm9z5ukep.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm9z5ukep.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco9ortpz.php:32\n\
    Stack trace:\n#0 /tmp/tmpco9ortpz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpco9ortpz.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_unique_chars = 0;\n\
    \    $max_unique_word = '';\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_unique_word\
    \ = $word;\n        }\n    }\n    return $max_unique_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwhm4zzrm.php:16\nStack trace:\n#0 /tmp/tmpwhm4zzrm.php(26): find_max(Array)\n\
    #1 /tmp/tmpwhm4zzrm.php(30): candidate(Array)\n#2 /tmp/tmpwhm4zzrm.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwhm4zzrm.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp901bjq.php:31\n\
    Stack trace:\n#0 /tmp/tmplp901bjq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp901bjq.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $chars = str_split($word);\n\
    \        $unique_chars = array_unique($chars);\n        $count = count($unique_chars);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\";\n$words\
    \ = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words\
    \ = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqs4rbep4.php:39\nStack trace:\n#0 /tmp/tmpqs4rbep4.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqs4rbep4.php on line 39\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_unique_chars = 0;\n\
    \    $max_word = '';\n    foreach ($words as $word) {\n        $unique_chars =\
    \ count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars) {\n\
    \            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpn37twmv5.php:16\nStack trace:\n#0 /tmp/tmpn37twmv5.php(26): find_max(Array)\n\
    #1 /tmp/tmpn37twmv5.php(30): candidate(Array)\n#2 /tmp/tmpn37twmv5.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn37twmv5.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_6c9nh3a.php:38\nStack trace:\n#0 /tmp/tmp_6c9nh3a.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_6c9nh3a.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_6c9nh3a.php:38\nStack trace:\n#0 /tmp/tmp_6c9nh3a.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_6c9nh3a.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpc37pqdrg.php:37\nStack trace:\n#0 /tmp/tmpc37pqdrg.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc37pqdrg.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_unique_chars\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = count_unique_chars($word);\n\
    \    if ($unique_chars > $max_unique_chars) {\n      $max_unique_chars = $unique_chars;\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpz380p6oc.php:16\nStack trace:\n#0 /tmp/tmpz380p6oc.php(26): find_max(Array)\n\
    #1 /tmp/tmpz380p6oc.php(30): candidate(Array)\n#2 /tmp/tmpz380p6oc.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz380p6oc.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp901bjq.php:31\n\
    Stack trace:\n#0 /tmp/tmplp901bjq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp901bjq.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_unique_chars = 0;\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpjy3eze3o.php:16\nStack trace:\n#0 /tmp/tmpjy3eze3o.php(26): find_max(Array)\n\
    #1 /tmp/tmpjy3eze3o.php(30): candidate(Array)\n#2 /tmp/tmpjy3eze3o.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjy3eze3o.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = \"\";\n\t$max_count\
    \ = 0;\n\tforeach ($words as $word) {\n\t\t$count = count_unique_chars($word);\n\
    \t\tif ($count > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word =\
    \ $word;\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpoez075im.php:16\nStack trace:\n#0 /tmp/tmpoez075im.php(26): find_max(Array)\n\
    #1 /tmp/tmpoez075im.php(30): candidate(Array)\n#2 /tmp/tmpoez075im.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoez075im.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $uniques = array_unique(str_split($word));\n\
    \    if (count($uniques) > $max) {\n      $max = count($uniques);\n      $max_word\
    \ = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ntqn09q.php:31\n\
    Stack trace:\n#0 /tmp/tmp1ntqn09q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1ntqn09q.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_count = 0;\n   \
    \ $max_word = \"\";\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpcdj7ybke.php:16\nStack trace:\n#0 /tmp/tmpcdj7ybke.php(26): find_max(Array)\n\
    #1 /tmp/tmpcdj7ybke.php(30): candidate(Array)\n#2 /tmp/tmpcdj7ybke.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcdj7ybke.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = '';\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7tomiz5_.php:16\nStack trace:\n#0 /tmp/tmp7tomiz5_.php(26): find_max(Array)\n\
    #1 /tmp/tmp7tomiz5_.php(30): candidate(Array)\n#2 /tmp/tmp7tomiz5_.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7tomiz5_.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_6c9nh3a.php:38\nStack trace:\n#0 /tmp/tmp_6c9nh3a.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_6c9nh3a.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_unique_chars = 0;\n\
    \  $max_unique_word = \"\";\n  foreach ($words as $word) {\n    $unique_chars\
    \ = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars) {\n\
    \      $max_unique_chars = $unique_chars;\n      $max_unique_word = $word;\n \
    \   }\n  }\n  return $max_unique_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu1anaaz8.php:16\nStack trace:\n#0 /tmp/tmpu1anaaz8.php(26): find_max(Array)\n\
    #1 /tmp/tmpu1anaaz8.php(30): candidate(Array)\n#2 /tmp/tmpu1anaaz8.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu1anaaz8.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $word = $words[$i];\n    $unique_chars = count_unique_chars($word);\n\
    \    if ($unique_chars > $max_unique_chars) {\n      $max_word = $word;\n    \
    \  $max_unique_chars = $unique_chars;\n    } else if ($unique_chars == $max_unique_chars)\
    \ {\n      if ($word < $max_word) {\n        $max_word = $word;\n      }\n   \
    \ }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6gf04xfr.php:14\nStack trace:\n#0 /tmp/tmp6gf04xfr.php(31): find_max(Array)\n\
    #1 /tmp/tmp6gf04xfr.php(35): candidate(Array)\n#2 /tmp/tmp6gf04xfr.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6gf04xfr.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max = 0;\n\t$max_word\
    \ = \"\";\n\tforeach ($words as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\
    \t\tif (count($unique_chars) > $max) {\n\t\t\t$max = count($unique_chars);\n\t\
    \t\t$max_word = $word;\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs6_rb67.php:31\n\
    Stack trace:\n#0 /tmp/tmphs6_rb67.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphs6_rb67.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpc37pqdrg.php:37\nStack trace:\n#0 /tmp/tmpc37pqdrg.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc37pqdrg.php on line 37\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  foreach ($words as $word)\
    \ {\n    $unique_chars = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars)\
    \ {\n      $max_word = $word;\n      $max_unique_chars = $unique_chars;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl11nhrtl.php:14\nStack trace:\n#0 /tmp/tmpl11nhrtl.php(26): find_max(Array)\n\
    #1 /tmp/tmpl11nhrtl.php(30): candidate(Array)\n#2 /tmp/tmpl11nhrtl.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl11nhrtl.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = '';\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7tomiz5_.php:16\nStack trace:\n#0 /tmp/tmp7tomiz5_.php(26): find_max(Array)\n\
    #1 /tmp/tmp7tomiz5_.php(30): candidate(Array)\n#2 /tmp/tmp7tomiz5_.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7tomiz5_.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_unique_chars = 0;\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpjy3eze3o.php:16\nStack trace:\n#0 /tmp/tmpjy3eze3o.php(26): find_max(Array)\n\
    #1 /tmp/tmpjy3eze3o.php(30): candidate(Array)\n#2 /tmp/tmpjy3eze3o.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjy3eze3o.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco9ortpz.php:32\n\
    Stack trace:\n#0 /tmp/tmpco9ortpz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpco9ortpz.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_unique_chars = 0;\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpqn4lnbqt.php:16\nStack trace:\n#0 /tmp/tmpqn4lnbqt.php(25): find_max(Array)\n\
    #1 /tmp/tmpqn4lnbqt.php(29): candidate(Array)\n#2 /tmp/tmpqn4lnbqt.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqn4lnbqt.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n\t$max_word = \"\";\n\t$max_count\
    \ = 0;\n\tforeach ($words as $word) {\n\t\t$count = count_unique_chars($word);\n\
    \t\tif ($count > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word =\
    \ $word;\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpoez075im.php:16\nStack trace:\n#0 /tmp/tmpoez075im.php(26): find_max(Array)\n\
    #1 /tmp/tmpoez075im.php(30): candidate(Array)\n#2 /tmp/tmpoez075im.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoez075im.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = '';\n   \
    \ $max_unique_chars = 0;\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6969nj8d.php:16\nStack trace:\n#0 /tmp/tmp6969nj8d.php(26): find_max(Array)\n\
    #1 /tmp/tmp6969nj8d.php(30): candidate(Array)\n#2 /tmp/tmp6969nj8d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6969nj8d.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_unique_chars = 0;\n\
    \    $max_unique_word = \"\";\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_unique_word\
    \ = $word;\n        }\n    }\n    return $max_unique_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpxz81wbnd.php:16\nStack trace:\n#0 /tmp/tmpxz81wbnd.php(26): find_max(Array)\n\
    #1 /tmp/tmpxz81wbnd.php(30): candidate(Array)\n#2 /tmp/tmpxz81wbnd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxz81wbnd.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    for ($i = 1; $i <\
    \ count($words); $i++) {\n        $word = $words[$i];\n        $unique_chars =\
    \ count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars) {\n\
    \            $max_word = $word;\n            $max_unique_chars = $unique_chars;\n\
    \        } else if ($unique_chars == $max_unique_chars) {\n            if ($word\
    \ < $max_word) {\n                $max_word = $word;\n            }\n        }\n\
    \    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6pbkk2xi.php:14\nStack trace:\n#0 /tmp/tmp6pbkk2xi.php(31): find_max(Array)\n\
    #1 /tmp/tmp6pbkk2xi.php(35): candidate(Array)\n#2 /tmp/tmp6pbkk2xi.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6pbkk2xi.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_unique_chars = count_unique_chars($max_word);\n  foreach ($words as $word)\
    \ {\n    $unique_chars = count_unique_chars($word);\n    if ($unique_chars > $max_unique_chars)\
    \ {\n      $max_word = $word;\n      $max_unique_chars = $unique_chars;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl11nhrtl.php:14\nStack trace:\n#0 /tmp/tmpl11nhrtl.php(26): find_max(Array)\n\
    #1 /tmp/tmpl11nhrtl.php(30): candidate(Array)\n#2 /tmp/tmpl11nhrtl.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl11nhrtl.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    } else if\
    \ ($count == $max_count) {\n      if ($words[$i] < $max_word) {\n        $max_word\
    \ = $words[$i];\n      }\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6kykixcp.php:14\nStack trace:\n#0 /tmp/tmp6kykixcp.php(30): find_max(Array)\n\
    #1 /tmp/tmp6kykixcp.php(34): candidate(Array)\n#2 /tmp/tmp6kykixcp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kykixcp.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppv717lcd.php:16\nStack trace:\n#0 /tmp/tmppv717lcd.php(26): find_max(Array)\n\
    #1 /tmp/tmppv717lcd.php(30): candidate(Array)\n#2 /tmp/tmppv717lcd.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmppv717lcd.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    for ($i = 1; $i <\
    \ count($words); $i++) {\n        $word = $words[$i];\n        $unique_chars =\
    \ count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars) {\n\
    \            $max_word = $word;\n            $max_unique_chars = $unique_chars;\n\
    \        } else if ($unique_chars == $max_unique_chars) {\n            if ($word\
    \ < $max_word) {\n                $max_word = $word;\n            }\n        }\n\
    \    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6pbkk2xi.php:14\nStack trace:\n#0 /tmp/tmp6pbkk2xi.php(31): find_max(Array)\n\
    #1 /tmp/tmp6pbkk2xi.php(35): candidate(Array)\n#2 /tmp/tmp6pbkk2xi.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6pbkk2xi.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = \"\";\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp901bjq.php:31\n\
    Stack trace:\n#0 /tmp/tmplp901bjq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp901bjq.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = $words[0];\n\
    \  $max_count = count_unique_chars($words[0]);\n  for ($i = 1; $i < count($words);\
    \ $i++) {\n    $count = count_unique_chars($words[$i]);\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $words[$i];\n    }\n  }\n \
    \ return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdt561j6e.php:14\nStack trace:\n#0 /tmp/tmpdt561j6e.php(26): find_max(Array)\n\
    #1 /tmp/tmpdt561j6e.php(30): candidate(Array)\n#2 /tmp/tmpdt561j6e.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdt561j6e.php on line 14\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_characters($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmpltykbrgc.php:16\nStack trace:\n#0 /tmp/tmpltykbrgc.php(26): find_max(Array)\n\
    #1 /tmp/tmpltykbrgc.php(30): candidate(Array)\n#2 /tmp/tmpltykbrgc.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpltykbrgc.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        } else if ($count == $max_count) {\n            if ($words[$i] < $max_word)\
    \ {\n                $max_word = $words[$i];\n            }\n        }\n    }\n\
    \    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplzpou5dy.php:14\nStack trace:\n#0 /tmp/tmplzpou5dy.php(30): find_max(Array)\n\
    #1 /tmp/tmplzpou5dy.php(34): candidate(Array)\n#2 /tmp/tmplzpou5dy.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmplzpou5dy.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $count = count($unique_chars);\n  \
    \      if ($count > $max_count) {\n            $max_count = $count;\n        \
    \    $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y58u6y7.php:32\n\
    Stack trace:\n#0 /tmp/tmp6y58u6y7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6y58u6y7.php\
    \ on line 32\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $unique_chars =\
    \ array_unique(str_split($word));\n        $unique_count = count($unique_chars);\n\
    \        if ($unique_count > $max_count) {\n            $max_count = $unique_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_6c9nh3a.php:38\nStack trace:\n#0 /tmp/tmp_6c9nh3a.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_6c9nh3a.php on line 38\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max = 0;\n    $max_word\
    \ = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwrxmpev.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwrxmpev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmwrxmpev.php\
    \ on line 31\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s40zmil.php:32\n\
    Stack trace:\n#0 /tmp/tmp6s40zmil.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6s40zmil.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count\
    \ = 0;\n  foreach ($words as $word) {\n    $count = count_unique_chars($word);\n\
    \    if ($count > $max_count) {\n      $max_count = $count;\n      $max_word =\
    \ $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps9i11h5d.php:16\nStack trace:\n#0 /tmp/tmps9i11h5d.php(26): find_max(Array)\n\
    #1 /tmp/tmps9i11h5d.php(30): candidate(Array)\n#2 /tmp/tmps9i11h5d.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmps9i11h5d.php on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = \"\";\n \
    \   $max_count = 0;\n    foreach ($words as $word) {\n        $count = count_unique_characters($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp242j4ith.php:16\nStack trace:\n#0 /tmp/tmp242j4ith.php(26): find_max(Array)\n\
    #1 /tmp/tmp242j4ith.php(30): candidate(Array)\n#2 /tmp/tmp242j4ith.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp242j4ith.php on line 16\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_count = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $count = count_unique_chars($words[$i]);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $words[$i];\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp69ano88w.php:14\nStack trace:\n#0 /tmp/tmp69ano88w.php(26): find_max(Array)\n\
    #1 /tmp/tmp69ano88w.php(30): candidate(Array)\n#2 /tmp/tmp69ano88w.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp69ano88w.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n    $max_word = $words[0];\n\
    \    $max_unique_chars = count_unique_chars($max_word);\n    foreach ($words as\
    \ $word) {\n        $unique_chars = count_unique_chars($word);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_word = $word;\n            $max_unique_chars\
    \ = $unique_chars;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpssiys2gk.php:14\nStack trace:\n#0 /tmp/tmpssiys2gk.php(26): find_max(Array)\n\
    #1 /tmp/tmpssiys2gk.php(30): candidate(Array)\n#2 /tmp/tmpssiys2gk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpssiys2gk.php on line 14\n"
  timestamp: 1659730627
- exit_code: 255
  program: "<?php\n// Write a function that accepts an array of strings.\n// The array\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// >>> find_max(array(\"\
    name\", \"of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"\
    enam\", \"game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\"))\n// \"aaaaaaa\"\nfunction find_max($words) {\n  $max = 0;\n  $max_word\
    \ = '';\n  foreach ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n\
    \    if (count($unique_chars) > $max) {\n      $max = count($unique_chars);\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrhqknyv.php:31\n\
    Stack trace:\n#0 /tmp/tmpvrhqknyv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvrhqknyv.php\
    \ on line 31\n"
  timestamp: 1659730627

name: HumanEval_58_common
language: php
prompt: "<?php\n// Return sorted unique common elements for two arrays.\n// >>> common(array(1,\
  \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1, 5, 653)\n//\
  \ >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction common($l1,\
  \ $l2) {\n"
tests: "function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1,\
  \ 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
  \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1\
    \ = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$result = common($l1,\
    \ $l2);\nprint_r($result);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$result\
    \ = common($l1, $l2);\nprint_r($result);", "    $l1 = array_unique($l1);\n   \
    \ $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $elem) {\n\
    \        if (in_array($elem, $l2)) {\n            $result[] = $elem;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = array();\n    while ($i < $l1_len &&\
    \ $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = array();\n    while ($i < $l1_len && $j < $l2_len) {\n        if\
    \ ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n\
    \            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n\
    \        } else {\n            $j++;\n        }\n    }\n    return $result;\n\
    }\n", "    $common = array();\n    foreach ($l1 as $e1) {\n        foreach ($l2\
    \ as $e2) {\n            if ($e1 == $e2) {\n                $common[] = $e1;\n\
    \            }\n        }\n    }\n    return array_unique($common);\n}\n", " \
    \   $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = array();\n    while ($i < $l1_len &&\
    \ $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n", "  $result = array();\n  foreach ($l1 as\
    \ $item) {\n    if (in_array($item, $l2)) {\n      $result[] = $item;\n    }\n\
    \  }\n  return array_unique($result);\n}\n", "    $result = [];\n    foreach ($l1\
    \ as $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    return array_unique($result);\n}\n",
  "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n  \
    \  return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j =\
    \ 0;\n    $result = array();\n    while ($i < count($l1) && $j < count($l2)) {\n\
    \        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n    \
    \        $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\nprint_r(common($l1,\
    \ $l2));\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\nprint_r(common($l1,\
    \ $l2));", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1\
    \ = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n", "    $result =\
    \ [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    sort($result);\n    return $result;\n}\n", " \
    \   $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $res = array();\n    while ($i < $l1_len && $j\
    \ < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $res[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $res;\n}\n\n$l1 = array(1, 4, 3, 34, 653, 2, 5);\n$l2 = array(5, 7,\
    \ 1, 5, 9, 653, 121);\n$res = common($l1, $l2);\nprint_r($res);\n\n$l1 = array(5,\
    \ 3, 2, 8);\n$l2 = array(3, 2);\n$res = common($l1, $l2);\nprint_r($res);", " \
    \   $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = array();\n    while ($i < $l1_len &&\
    \ $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $l3 = [];\n    while ($i < count($l1) && $j < count($l2))\
    \ {\n        if ($l1[$i] == $l2[$j]) {\n            $l3[] = $l1[$i];\n       \
    \     $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n     \
    \       $i++;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $l3;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n  \
    \  $result = [];\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2)) {\n\
    \            $result[] = $v;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 =\
    \ array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_26_remove_duplicates
results:
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurences[$number])) {\n            $occurences[$number]\
    \ = 0;\n        }\n        $occurences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $count = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($count[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurences[$number])) {\n            $occurences[$number]\
    \ = 0;\n        }\n        $occurences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $occurences = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!isset($occurences[$number])) {\n      $occurences[$number] = 0;\n\
    \    }\n    $occurences[$number]++;\n  }\n  foreach ($numbers as $number) {\n\
    \    if ($occurences[$number] == 1) {\n      $result[] = $number;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $occurrences = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!isset($occurrences[$number])) {\n      $occurrences[$number] = 0;\n\
    \    }\n    $occurrences[$number]++;\n  }\n  foreach ($numbers as $number) {\n\
    \    if ($occurrences[$number] == 1) {\n      $result[] = $number;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $count = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($count[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $seen = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $seen)) {\n      $result[] = $number;\n      $seen[]\
    \ = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tax42hp.php:25\n\
    Stack trace:\n#0 /tmp/tmp6tax42hp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6tax42hp.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $seen = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $seen)) {\n      $result[] = $number;\n      $seen[]\
    \ = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tax42hp.php:25\n\
    Stack trace:\n#0 /tmp/tmp6tax42hp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6tax42hp.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $numbers_count = array_count_values($numbers);\n\
    \    foreach ($numbers_count as $key => $value) {\n        if ($value == 1) {\n\
    \            $result[] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique)) {\n      $unique[] = $number;\n    }\n  }\n  return $unique;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppb8rk2c6.php:23\n\
    Stack trace:\n#0 /tmp/tmppb8rk2c6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppb8rk2c6.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d091gdh.php:18\n\
    Stack trace:\n#0 /tmp/tmp8d091gdh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8d091gdh.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d091gdh.php:18\n\
    Stack trace:\n#0 /tmp/tmp8d091gdh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8d091gdh.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$numbers = array_unique($numbers);\n\treturn $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9qtv0u1.php:18\n\
    Stack trace:\n#0 /tmp/tmpq9qtv0u1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq9qtv0u1.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers = array_unique($numbers);\n  return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobq_97rv.php:18\n\
    Stack trace:\n#0 /tmp/tmpobq_97rv.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpobq_97rv.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $uniques = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $uniques)) {\n            $uniques[] = $number;\n      \
    \  }\n    }\n    return $uniques;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bqns05b.php:23\n\
    Stack trace:\n#0 /tmp/tmp3bqns05b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3bqns05b.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $seen = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $seen)) {\n            $result[] = $number;\n\
    \            $seen[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexyayocr.php:25\n\
    Stack trace:\n#0 /tmp/tmpexyayocr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpexyayocr.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $uniques = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $uniques)) {\n      $uniques[] = $number;\n    }\n  }\n  return $uniques;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6i5cr0n.php:23\n\
    Stack trace:\n#0 /tmp/tmpj6i5cr0n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj6i5cr0n.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers = array_unique($numbers);\n  return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobq_97rv.php:18\n\
    Stack trace:\n#0 /tmp/tmpobq_97rv.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpobq_97rv.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\n$numbers = array(1,\
    \ 2, 3, 2, 4);\n$unique_numbers = remove_duplicates($numbers);\nprint_r($unique_numbers);\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsjhjoetd.php:26\nStack\
    \ trace:\n#0 /tmp/tmpsjhjoetd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsjhjoetd.php\
    \ on line 26\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasugbrk7.php:23\n\
    Stack trace:\n#0 /tmp/tmpasugbrk7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpasugbrk7.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique_numbers = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique_numbers)) {\n      $unique_numbers[] = $number;\n    }\n  }\n  return\
    \ $unique_numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop3p7d68.php:23\n\
    Stack trace:\n#0 /tmp/tmpop3p7d68.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpop3p7d68.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_flip($numbers);\n    $numbers = array_flip($numbers);\n\
    \    return $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cz2x8pi.php:19\n\
    Stack trace:\n#0 /tmp/tmp4cz2x8pi.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4cz2x8pi.php\
    \ on line 19\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique)) {\n      $unique[] = $number;\n    }\n  }\n  return $unique;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppb8rk2c6.php:23\n\
    Stack trace:\n#0 /tmp/tmppb8rk2c6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppb8rk2c6.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers = array_unique($numbers);\n  return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobq_97rv.php:18\n\
    Stack trace:\n#0 /tmp/tmpobq_97rv.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpobq_97rv.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $count = array_count_values($numbers);\n    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $seen = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $seen)) {\n      $result[] = $number;\n      $seen[]\
    \ = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tax42hp.php:25\n\
    Stack trace:\n#0 /tmp/tmp6tax42hp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6tax42hp.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurences[$number])) {\n            $occurences[$number]\
    \ = 0;\n        }\n        $occurences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $occurrences = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!isset($occurrences[$number])) {\n      $occurrences[$number] = 1;\n\
    \      $result[] = $number;\n    } else {\n      $occurrences[$number]++;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm0lt1ja.php:27\n\
    Stack trace:\n#0 /tmp/tmpwm0lt1ja.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwm0lt1ja.php\
    \ on line 27\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique_numbers = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique_numbers)) {\n      $unique_numbers[] = $number;\n    }\n  }\n  return\
    \ $unique_numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop3p7d68.php:23\n\
    Stack trace:\n#0 /tmp/tmpop3p7d68.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpop3p7d68.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers_count = array_count_values($numbers);\n  $result = array();\n\
    \  foreach ($numbers_count as $number => $count) {\n    if ($count == 1) {\n \
    \     $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    $duplicates = array();\n    foreach ($numbers\
    \ as $number) {\n        if (in_array($number, $unique)) {\n            $duplicates[]\
    \ = $number;\n        } else {\n            $unique[] = $number;\n        }\n\
    \    }\n    return array_diff($numbers, $duplicates);\n}\n\nprint_r(remove_duplicates(array(1,\
    \ 2, 3, 2, 4)));\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => 3\n    [4] => 4\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1cih5ysu.php:27\nStack trace:\n#0 /tmp/tmp1cih5ysu.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1cih5ysu.php on line 27\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique)) {\n      $unique[] = $number;\n    }\n  }\n  return $unique;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppb8rk2c6.php:23\n\
    Stack trace:\n#0 /tmp/tmppb8rk2c6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppb8rk2c6.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $duplicates = array();\n    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (in_array($number, $result)) {\n            $duplicates[]\
    \ = $number;\n        } else {\n            $result[] = $number;\n        }\n\
    \    }\n    return array_diff($result, $duplicates);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mbypibm.php:26\n\
    Stack trace:\n#0 /tmp/tmp9mbypibm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9mbypibm.php\
    \ on line 26\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $uniques = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $uniques)) {\n            $uniques[] = $number;\n      \
    \  }\n    }\n    return $uniques;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bqns05b.php:23\n\
    Stack trace:\n#0 /tmp/tmp3bqns05b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3bqns05b.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $count = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($count[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers = array_unique($numbers);\n  return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobq_97rv.php:18\n\
    Stack trace:\n#0 /tmp/tmpobq_97rv.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpobq_97rv.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $unique = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique)) {\n      $unique[] = $number;\n    }\n  }\n  return $unique;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppb8rk2c6.php:23\n\
    Stack trace:\n#0 /tmp/tmppb8rk2c6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppb8rk2c6.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers_count = array_count_values($numbers);\n    $result = array();\n\
    \    foreach ($numbers_count as $number => $count) {\n        if ($count == 1)\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!array_key_exists($number, $occurrences)) {\n   \
    \         $occurrences[$number] = 1;\n        } else {\n            $occurrences[$number]++;\n\
    \        }\n    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = array();\n\t$occurrences = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\tif (!isset($occurrences[$number])) {\n\t\t\t$occurrences[$number] = 0;\n\
    \t\t}\n\t\t$occurrences[$number]++;\n\t}\n\tforeach ($numbers as $number) {\n\t\
    \tif ($occurrences[$number] == 1) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d091gdh.php:18\n\
    Stack trace:\n#0 /tmp/tmp8d091gdh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8d091gdh.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurences[$number])) {\n            $occurences[$number]\
    \ = 0;\n        }\n        $occurences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $count = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($count[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!array_key_exists($number, $occurrences)) {\n   \
    \         $occurrences[$number] = 1;\n        } else {\n            $occurrences[$number]++;\n\
    \        }\n    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $occurrences = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!isset($occurrences[$number])) {\n      $occurrences[$number] = 0;\n\
    \    }\n    $occurrences[$number]++;\n  }\n  foreach ($numbers as $number) {\n\
    \    if ($occurrences[$number] == 1) {\n      $result[] = $number;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $duplicates = array();\n    foreach ($numbers\
    \ as $number) {\n        if (in_array($number, $result)) {\n            $duplicates[]\
    \ = $number;\n        } else {\n            $result[] = $number;\n        }\n\
    \    }\n    return array_diff($result, $duplicates);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43chtvg0.php:26\n\
    Stack trace:\n#0 /tmp/tmp43chtvg0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp43chtvg0.php\
    \ on line 26\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d091gdh.php:18\n\
    Stack trace:\n#0 /tmp/tmp8d091gdh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8d091gdh.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $duplicates = array();\n    foreach ($numbers\
    \ as $number) {\n        if (in_array($number, $result)) {\n            $duplicates[]\
    \ = $number;\n        } else {\n            $result[] = $number;\n        }\n\
    \    }\n    return array_diff($result, $duplicates);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43chtvg0.php:26\n\
    Stack trace:\n#0 /tmp/tmp43chtvg0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp43chtvg0.php\
    \ on line 26\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$numbers = array_unique($numbers);\n\treturn $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9qtv0u1.php:18\n\
    Stack trace:\n#0 /tmp/tmpq9qtv0u1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq9qtv0u1.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d091gdh.php:18\n\
    Stack trace:\n#0 /tmp/tmp8d091gdh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8d091gdh.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$numbers = array_unique($numbers);\n\treturn $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9qtv0u1.php:18\n\
    Stack trace:\n#0 /tmp/tmpq9qtv0u1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq9qtv0u1.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $count = count($numbers);\n    for ($i = 0; $i\
    \ < $count; $i++) {\n        $current = $numbers[$i];\n        $occurrences =\
    \ 0;\n        for ($j = 0; $j < $count; $j++) {\n            if ($current == $numbers[$j])\
    \ {\n                $occurrences++;\n            }\n        }\n        if ($occurrences\
    \ == 1) {\n            $result[] = $current;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = array(1, 2, 3, 2, 4);\n$result = remove_duplicates($numbers);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 4\n)\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $count = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($count[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$numbers = array_unique($numbers);\n\treturn $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9qtv0u1.php:18\n\
    Stack trace:\n#0 /tmp/tmpq9qtv0u1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq9qtv0u1.php\
    \ on line 18\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_mvxho.php:23\n\
    Stack trace:\n#0 /tmp/tmprp_mvxho.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprp_mvxho.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $counts = array_count_values($numbers);\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique_numbers)) {\n            $unique_numbers[]\
    \ = $number;\n        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7pnzwd.php:23\n\
    Stack trace:\n#0 /tmp/tmp5a7pnzwd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5a7pnzwd.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasugbrk7.php:23\n\
    Stack trace:\n#0 /tmp/tmpasugbrk7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpasugbrk7.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdix1yddb.php:23\n\
    Stack trace:\n#0 /tmp/tmpdix1yddb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdix1yddb.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp246x3_58.php:23\n\
    Stack trace:\n#0 /tmp/tmp246x3_58.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp246x3_58.php\
    \ on line 23\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $seen = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $seen)) {\n            $result[] = $number;\n\
    \            $seen[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexyayocr.php:25\n\
    Stack trace:\n#0 /tmp/tmpexyayocr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpexyayocr.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 255
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $seen = array();\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $seen)) {\n      $result[] = $number;\n      $seen[]\
    \ = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tax42hp.php:25\n\
    Stack trace:\n#0 /tmp/tmp6tax42hp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6tax42hp.php\
    \ on line 25\n"
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n  $result = array();\n  $counts = array_count_values($numbers);\n  foreach\
    \ ($numbers as $number) {\n    if ($counts[$number] == 1) {\n      $result[] =\
    \ $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442
- exit_code: 0
  program: "<?php\n// From an array of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers)\
    \ {\n    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730442

name: HumanEval_70_strange_sort_list
language: php
prompt: "<?php\n// Given array of integers, return array in strange order.\n// Strange\
  \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
  \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
  \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
  // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction strange_sort_list($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return strange_sort_list(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
  \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
  \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n     \
    \       $result[] = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n\
    \        } else {\n            $result[] = max($lst);\n            $lst = array_diff($lst,\
    \ [max($lst)]);\n        }\n        $i++;\n    }\n    return $result;\n}\n", " \
    \   $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i = 0;\n\
    \    $j = 0;\n    $k = 0;\n    while ($i < count($lst)) {\n        if ($k % 2\
    \ == 0) {\n            $result[$i] = $min;\n            $i++;\n            $k++;\n\
    \        } else {\n            $result[$i] = $max;\n            $i++;\n      \
    \      $k++;\n        }\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n  \
    \      return $lst;\n    }\n    $sorted = array();\n    $sorted[] = min($lst);\n\
    \    $lst = array_diff($lst, $sorted);\n    while (count($lst) > 0) {\n      \
    \  $sorted[] = max($lst);\n        $lst = array_diff($lst, $sorted);\n       \
    \ if (count($lst) > 0) {\n            $sorted[] = min($lst);\n            $lst\
    \ = array_diff($lst, $sorted);\n        }\n    }\n    return $sorted;\n}\n", " \
    \   $min = min($lst);\n    $max = max($lst);\n    $result = array();\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    $result = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst))\
    \ {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst)) {\n   \
    \     return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    if (empty($lst)) {\n   \
    \     return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    if (empty($lst)) {\n        return $result;\n    }\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $", "    if (count($lst) == 0) {\n  \
    \      return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n   \
    \ $res = array();\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n \
    \       $lst = array_diff($lst, array($min, $max));\n    }\n    return $res;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n         \
    \   $min = min($lst);\n        } else {\n            $result[] = $max;\n     \
    \       $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return array();\n    }\n    $lst = array_unique($lst);\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result = array();\n    $result[] =\
    \ $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $length = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst[$min_index] =\
    \ null;\n    $lst[$max_index] = null;\n    $lst = array_filter($lst);\n    $length\
    \ -= 2;\n    while ($length > 0) {\n        $min = min($lst);\n        $max =\
    \ max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        $lst[$min_index] = null;\n        $lst[$max_index] = null;\n\
    \        $lst = array_filter($lst);\n        $length -= 2;\n    }\n    return\
    \ $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $result = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i\
    \ <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j)\
    \ {\n            $result[] = $lst[$j];\n            $j--;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(strange_sort_list([1,\
    \ 2, 3, 4]));\nprint_r(strange_sort_list([5, 5, 5, 5]));\nprint_r(strange_sort_list([]));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $lst_len = count($lst);\n \
    \   if ($lst_len == 0) {\n        return $result;\n    }\n    sort($lst);\n  \
    \  $i = 0;\n    $j = $lst_len - 1;\n    while ($i < $j) {\n        $result[] =\
    \ $lst[$i];\n        $result[] = $lst[$j];\n        $i++;\n        $j--;\n   \
    \ }\n    if ($i == $j) {\n        $result[] = $lst[$i];\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $min = array_shift($lst);\n    $max = array_pop($lst);\n    $res = array($min,\
    \ $max);\n    while (!empty($lst)) {\n        $min = array_shift($lst);\n    \
    \    $max = array_pop($lst);\n        $res[] = $min;\n        $res[] = $max;\n\
    \    }\n    return $res;\n}\n", "    $result = [];\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    $result =\
    \ [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    if (count($lst) > 0) {\n        $result =\
    \ array_merge($result, strange_sort_list($lst));\n    }\n    return $result;\n\
    }\n\nprint_r(strange_sort_list([1, 2, 3, 4]));\nprint_r(strange_sort_list([5,\
    \ 5, 5, 5]));\nprint_r(strange_sort_list([]));", "  $result = [];\n  $min = min($lst);\n\
    \  $max = max($lst);\n  $min_index = array_search($min, $lst);\n  $max_index =\
    \ array_search($max, $lst);\n  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n\
    \  unset($lst[$max_index]);\n  $lst = array_values($lst);\n  if (count($lst) >\
    \ 0) {\n    $result = array_merge($result, strange_sort_list($lst));\n  }\n  return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $i += 2;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n", "    $new_lst = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $new_lst[] = $min;\n       \
    \     $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n      \
    \  } else {\n            $new_lst[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $new_lst;\n}\n", "    $result = [];\n    $len = count($lst);\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $len -= 2;\n    while ($len\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $len -= 2;\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $min = min($lst);\n\
    \            $result[] = $min;\n            $key = array_search($min, $lst);\n\
    \            unset($lst[$key]);\n        } else {\n            $max = max($lst);\n\
    \            $result[] = $max;\n            $key = array_search($max, $lst);\n\
    \            unset($lst[$key]);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $min = min($lst);\n        } else {\n      \
    \      $result[] = $max;\n            $max = max($lst);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    if (count($lst) == 0) {\n\
    \        return $result;\n    }\n    sort($lst);\n    $min = $lst[0];\n    $max\
    \ = $lst[count($lst) - 1];\n    $result[] = $min;\n    $result[] = $max;\n   \
    \ $lst = array_slice($lst, 1, count($lst) - 2);\n    while (count($lst) > 0) {\n\
    \        $min = $lst[0];\n        $max = $lst[count($lst) - 1];\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_slice($lst, 1, count($lst)\
    \ - 2);\n    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "  if (count($lst) == 0) {\n    return $lst;\n  }\n\
    \  $min = min($lst);\n  $max = max($lst);\n  $result = array($min);\n  $lst =\
    \ array_diff($lst, array($min));\n  $lst = array_values($lst);\n  while (count($lst)\
    \ > 0) {\n    $max = max($lst);\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ array($max));\n    $lst = array_values($lst);\n    if (count($lst) == 0) {\n\
    \      break;\n    }\n    $min = min($lst);\n    $result[] = $min;\n    $lst =\
    \ array_diff($lst, array($min));\n    $lst = array_values($lst);\n  }\n  return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n   \
    \         $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    sort($lst);\n    $length = count($lst);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        if ($i % 2 == 0) {\n        \
    \    $result[] = array_shift($lst);\n        } else {\n            $result[] =\
    \ array_pop($lst);\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n    $result =\
    \ array_merge($result, strange_sort_list($lst));\n    return $result;\n}\n\n$lst\
    \ = [1, 2, 3, 4];\necho implode(', ', strange_sort_list($lst));", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while ($i < count($lst)) {\n        if ($i % 2 == 0) {\n   \
    \         $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n  \
    \          $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    $res = array();\n    $len = count($lst);\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $i = 0;\n    while ($i < $len) {\n        if ($i % 2 == 0) {\n\
    \            $res[] = $min;\n            unset($lst[array_search($min, $lst)]);\n\
    \            $min = min($lst);\n        } else {\n            $res[] = $max;\n\
    \            unset($lst[array_search($max, $lst)]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $res;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    sort($lst);\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    $result =\
    \ [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $res[] = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n\
    \        } else {\n            $res[] = max($lst);\n            $lst = array_diff($lst,\
    \ [max($lst)]);\n        }\n        $i++;\n    }\n    return $res;\n}\n", "  \
    \  $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $len = count($lst);\n    if ($len == 0) {\n    \
    \    return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $len--;\n    $i\
    \ = 0;\n    while ($len > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n        } else\
    \ {\n            $result[] = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n\
    \        }\n        $i++;\n        $len--;\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while ($i < count($lst)) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n   \
    \ }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n \
    \       return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array($min);\n    $lst = array_diff($lst, array($min));\n    $lst\
    \ = array_values($lst);\n    while (count($lst) > 0) {\n        $max = max($lst);\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($max));\n  \
    \      $lst = array_values($lst);\n        if (count($lst) == 0) {\n         \
    \   break;\n        }\n        $min = min($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, array($min));\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $min = min($lst);\n        } else {\n            $result[] = $max;\n    \
    \        $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "  if (empty($lst)) {\n    return array();\n  }\n  $min = min($lst);\n \
    \ $max = max($lst);\n  $min_index = array_search($min, $lst);\n  $max_index =\
    \ array_search($max, $lst);\n  $lst[$min_index] = $max;\n  $lst[$max_index] =\
    \ $min;\n  $lst = array_values($lst);\n  $lst = array_slice($lst, 2);\n  return\
    \ array_merge(array($min, $max), strange_sort_list($lst));\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $result[]\
    \ = $min;\n        $i++;\n        if ($i < $count) {\n            $result[] =\
    \ $max;\n            $i++;\n        }\n    }\n    return $result;\n}\n\n$lst =\
    \ [1, 2, 3, 4];\n$lst = [5, 5, 5, 5];\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($lst);\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst[$min_index] = null;\n    $lst[$max_index] = null;\n    $lst = array_filter($lst);\n\
    \    $count = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst[$min_index] = null;\n       \
    \ $lst[$max_index] = null;\n        $lst = array_filter($lst);\n        $i +=\
    \ 2;\n    }\n    return $result;\n}\n\n$a = [1, 2, 3, 4];\n$b = [5, 5, 5, 5];\n\
    $c = [];\n\nvar_dump(strange_sort_list($a));\nvar_dump(strange_sort_list($b));\n\
    var_dump(strange_sort_list($c));", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "  if (empty($lst)) {\n    return\
    \ $lst;\n  }\n  sort($lst);\n  $result = array();\n  $i = 0;\n  $j = count($lst)\
    \ - 1;\n  while ($i <= $j) {\n    $result[] = $lst[$i];\n    if ($i != $j) {\n\
    \      $result[] = $lst[$j];\n    }\n    $i++;\n    $j--;\n  }\n  return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst = array_diff($lst, array($min, $max));\n    return\
    \ array_merge(array($min, $max), strange_sort_list($lst));\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $count = count($lst);\n    $i = 0;\n    while\
    \ ($i < $count) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  return $result;\n}\n", "    $result = [];\n\
    \    $lst_len = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst[$min_index] =\
    \ $lst[$max_index] = null;\n    $lst = array_filter($lst);\n    $lst_len = count($lst);\n\
    \    $i = 0;\n    while ($i < $lst_len) {\n        $min = min($lst);\n       \
    \ $max = max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        $lst[$min_index] = $lst[$max_index] = null;\n        $lst = array_filter($lst);\n\
    \        $lst_len = count($lst);\n        $i += 2;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $max = max($lst);\n    $min = min($lst);\n    $i\
    \ = 0;\n    while ($i < count($lst)) {\n        if ($i % 2 == 0) {\n         \
    \   $result[] = $min;\n            $min = min(array_diff($lst, $result));\n  \
    \      } else {\n            $result[] = $max;\n            $max = max(array_diff($lst,\
    \ $result));\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  $sorted\
    \ = $lst;\n  sort($sorted);\n  $result = [];\n  $i = 0;\n  $j = count($sorted)\
    \ - 1;\n  while ($i <= $j) {\n    $result[] = $sorted[$i];\n    if ($i != $j)\
    \ {\n      $result[] = $sorted[$j];\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $res = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <=\
    \ $j) {\n        $res[] = $lst[$i];\n        if ($i != $j) {\n            $res[]\
    \ = $lst[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return $res;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_values(array_diff($lst, $result));\n\
    \    if (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n", "    $count = count($lst);\n    if ($count\
    \ == 0) {\n        return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    $max_index = array_search($max, $lst);\n\
    \    unset($lst[$max_index]);\n    $count -= 2;\n    while ($count > 0) {\n  \
    \      $min = min($lst);\n        $max = max($lst);\n        $result[] = $max;\n\
    \        $result[] = $min;\n        $min_index = array_search($min, $lst);\n \
    \       unset($lst[$min_index]);\n        $max_index = array_search($max, $lst);\n\
    \        unset($lst[$max_index]);\n        $count -= 2;\n    }\n    return $result;\n\
    }\n\n$lst = array(1, 2, 3, 4);\nvar_dump(strange_sort_list($lst));\n\n$lst = array(5,\
    \ 5, 5, 5);\nvar_dump(strange_sort_list($lst));\n\n$lst = array();\nvar_dump(strange_sort_list($lst));",
  "    $result = [];\n    $len = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while ($i < $len) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n         \
    \   $min = min($lst);\n        } else {\n            $result[] = $max;\n     \
    \       $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result = array($min);\n    $lst = array_diff($lst,\
    \ array($min));\n    while (!empty($lst)) {\n        $max = max($lst);\n     \
    \   $result[] = $max;\n        $lst = array_diff($lst, array($max));\n       \
    \ if (empty($lst)) {\n            break;\n        }\n        $min = min($lst);\n\
    \        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n  \
    \  }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index]\
    \ = $min;\n    $lst = array_slice($lst, 1, $lst_len - 2);\n    $lst = strange_sort_list($lst);\n\
    \    array_unshift($lst, $max);\n    array_push($lst, $min);\n    return $lst;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $key = array_search($min, $lst);\n         \
    \   unset($lst[$key]);\n            $min = min($lst);\n        } else {\n    \
    \        $result[] = $max;\n            $key = array_search($max, $lst);\n   \
    \         unset($lst[$key]);\n            $max = max($lst);\n        }\n     \
    \   $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "  if (empty($lst)) {\n    return $lst;\n  }\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $result = array();\n  $result[] = $min;\n  $result[] = $max;\n  $lst = array_diff($lst,\
    \ array($min, $max));\n  $lst = array_values($lst);\n  while (!empty($lst)) {\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \  }\n  return $result;\n}\n", "    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n", "    $result = [];\n    $count\
    \ = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    $lst[$min_index] = null;\n  \
    \  $lst[$max_index] = null;\n    $lst = array_filter($lst);\n    $count = count($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        $lst[$min_index] = null;\n        $lst[$max_index] = null;\n\
    \        $lst = array_filter($lst);\n        $i += 2;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = min($lst);\n            $key = array_search(min($lst), $lst);\n\
    \            unset($lst[$key]);\n        } else {\n            $result[] = max($lst);\n\
    \            $key = array_search(max($lst), $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = array();\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n   \
    \ $lst = array_merge($result, $lst);\n    return $lst;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    $lst_length = count($lst);\n    $i = 0;\n\
    \    while ($i < $lst_length) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n      \
    \  $lst_length = count($lst);\n        $i++;\n    }\n    return $result;\n}\n",
  "\t$sorted = array();\n\t$min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\
    \t$sorted[] = $max;\n\t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\
    \t$min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst = array_values($lst);\n\t\
    $min = min($lst);\n\t$max = max($lst);\n\t$sorted[] = $min;\n\t$sorted[] = $max;\n\
    \t$lst = array_diff($lst, array($min, $max));\n\t$lst =", "    $result = [];\n\
    \    $lst = array_values($lst);\n    $len = count($lst);\n    $i = 0;\n    $j\
    \ = $len - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n       \
    \ if ($i != $j) {\n            $result[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $result;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0)\
    \ {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n            $key\
    \ = array_search($min, $lst);\n            unset($lst[$key]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            $key\
    \ = array_search($max, $lst);\n            unset($lst[$key]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n", " \
    \   if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n\
    \        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n     \
    \       $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $result[] = $min;\n            $min_key = array_search($min, $lst);\n\
    \            unset($lst[$min_key]);\n            $min = min($lst);\n        }\
    \ else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $res = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $res[] = min($lst);\n      \
    \      $lst = array_diff($lst, array(min($lst)));\n        } else {\n        \
    \    $res[] = max($lst);\n            $lst = array_diff($lst, array(max($lst)));\n\
    \        }\n        $i++;\n    }\n    return $res;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_unique($lst);\n\
    \    $lst = array_values($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = $min;\n            $min =\
    \ min($lst);\n        } else {\n            $result[] = $max;\n            $max\
    \ = max($lst);\n        }\n        $i++;\n        $key = array_search($result[$i\
    \ - 1], $lst);\n        unset($lst[$key]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (!empty($lst)) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n", "    $result = [];\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] =\
    \ $max;\n    $lst = array_diff($lst, [$min, $max]);\n    while (count($lst) >\
    \ 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \    }\n    return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "  if (count($lst) ==\
    \ 0) {\n    return $lst;\n  }\n  $min = min($lst);\n  $max = max($lst);\n  $strange_lst\
    \ = array();\n  $strange_lst[] = $min;\n  $strange_lst[] = $max;\n  $lst = array_diff($lst,\
    \ array($min, $max));\n  while (count($lst) > 0) {\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $strange_lst[] = $min;\n    $strange_lst[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n  }\n  return $strange_lst;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n      \
    \  return $lst;\n    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            $result[] = $lst[$j];\n \
    \           $j--;\n        }\n    }\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = array();\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $res[]\
    \ = $min;\n        $res[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n        $lst = array_values($lst);\n    }\n    return $res;\n}\n",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n        return\
    \ $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n    $result = array($min,\
    \ $max);\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $lst = array_diff($lst, array($min, $max));\n        $lst\
    \ = array_values($lst);\n        $result = array_merge($result, array($min, $max));\n\
    \    }\n    return $result;\n}\n", "    $res = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res[] = $min;\n    $res[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n \
    \       $lst = array_diff($lst, array($min, $max));\n    }\n    return $res;\n\
    }\n", "  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  while (count($lst) > 0) {\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \  }\n  return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n       \
    \ } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n  \
    \      $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $result;\n}\n", "    if (empty($lst)) {\n \
    \       return $lst;\n    }\n    sort($lst);\n    $res = array();\n    $i = 0;\n\
    \    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n", "  if (count($lst) == 0) {\n  \
    \  return $lst;\n  }\n  sort($lst);\n  $result = array();\n  $i = 0;\n  $j = count($lst)\
    \ - 1;\n  while ($i <= $j) {\n    $result[] = $lst[$i];\n    $i++;\n    if ($i\
    \ <= $j) {\n      $result[] = $lst[$j];\n      $j--;\n    }\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $lst_len = count($lst);\n    $lst_len_half = floor($lst_len\
    \ / 2);\n    $lst_len_half_plus = $lst_len_half + 1;\n    $lst_len_half_minus\
    \ = $lst_len_half - 1;\n    $lst_len_half_plus_minus = $lst_len_half_plus - 1;\n\
    \    $lst_len_half_minus_plus = $lst_len_half_minus + 1;\n    $lst_len_half_plus_minus_plus\
    \ = $lst_len_half_plus_minus + 1;\n    $lst_len_half_minus_plus_minus = $lst_len_half_minus_plus\
    \ - 1;\n    $lst_len_half_plus_minus_plus_minus = $lst_len_half_plus_minus_plus\
    \ - 1;\n    $lst_len_half_minus_plus_minus_plus = $lst_len_half_minus_plus_minus\
    \ + 1;\n    $lst_len_half_plus_minus_plus_minus_plus = $lst_len_half_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_minus_plus_minus_plus_minus = $lst_len_half_minus_plus_minus_plus\
    \ - 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus = $lst_len_half_plus_minus_plus_minus_plus\
    \ - 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus = $lst_len_half_minus_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus_plus = $lst_len_half_plus_minus_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus_minus = $lst_len_half_minus_plus_minus_plus_minus_plus\
    \ -", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    while (count($lst) > 0) {\n        $result[] = $lst[$i];\n   \
    \     unset($lst[$i]);\n        $lst = array_values($lst);\n        if (count($lst)\
    \ > 0) {\n            $result[] = $lst[count($lst) - 1];\n            unset($lst[count($lst)\
    \ - 1]);\n            $lst = array_values($lst);\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $len = count($lst);\n    $i = 0;\n \
    \   while ($i < $len) {\n        $min = min($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, [$min]);\n        if (count($lst) == 0) {\n \
    \           break;\n        }\n        $max = max($lst);\n        $result[] =\
    \ $max;\n        $lst = array_diff($lst, [$max]);\n        $i += 2;\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \ if (count($lst) == 0) {\n    return $lst;\n  }\n  sort($lst);\n  $min = $lst[0];\n\
    \  $max = $lst[count($lst) - 1];\n  $result = array($min);\n  $i = 1;\n  while\
    \ (count($lst) > 0) {\n    if ($i % 2 == 0) {\n      $result[] = array_shift($lst);\n\
    \    } else {\n      $result[] = array_pop($lst);\n    }\n    $i++;\n  }\n  return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n    \
    \        $result[] = $min;\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $max = max($lst);\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n", "    $sorted = [];\n    $max =\
    \ max($lst);\n    $min = min($lst);\n    $lst = array_diff($lst, [$max, $min]);\n\
    \    $sorted[] = $min;\n    $sorted[] = $max;\n    while (!empty($lst)) {\n  \
    \      $max = max($lst);\n        $min = min($lst);\n        $lst = array_diff($lst,\
    \ [$max, $min]);\n        $sorted[] = $min;\n        $sorted[] = $max;\n    }\n\
    \    return $sorted;\n}\n", "    $res = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    while (count($lst) > 0) {\n        $res[] = $min;\n        $lst\
    \ = array_diff($lst, [$min]);\n        if (count($lst) > 0) {\n            $res[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n        }\n        $min\
    \ = min($lst);\n        $max = max($lst);\n    }\n    return $res;\n}\n", "  \
    \  if (empty($lst)) {\n        return $lst;\n    }\n\n    sort($lst);\n    $min\
    \ = array_shift($lst);\n    $max = array_pop($lst);\n    $res = array($min, $max);\n\
    \n    while (!empty($lst)) {\n        $min = array_shift($lst);\n        $max\
    \ = array_pop($lst);\n        $res[] = $min;\n        $res[] = $max;\n    }\n\n\
    \    return $res;\n}\n", "    if (empty($lst)) {\n        return $lst;\n    }\n\
    \    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst) -\
    \ 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result = array();\n    $i = 0;\n    while (count($lst) >\
    \ 0) {\n        if ($i % 2 == 0) {\n            $result[] = min($lst);\n     \
    \       $lst = array_diff($lst, array(min($lst)));\n        } else {\n       \
    \     $result[] = max($lst);\n            $lst = array_diff($lst, array(max($lst)));\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $result[] = $min;\n    $result[] = $max;\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $lst =\
    \ array_diff($lst, [$min, $max]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result = [];\n    $i = 0;\n    while (count($lst) > 0) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = $min;\n            $lst =\
    \ array_diff($lst, [$min]);\n            $min = min($lst);\n        } else {\n\
    \            $result[] = $max;\n            $lst = array_diff($lst, [$max]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array($min);\n    $lst = array_diff($lst,\
    \ array($min));\n    $lst = array_values($lst);\n    while (count($lst) > 0) {\n\
    \        $max = max($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        $lst = array_values($lst);\n        if (count($lst) ==\
    \ 0) {\n            break;\n        }\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $lst = array_diff($lst, array($min));\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n        return\
    \ $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result = array($min);\n\
    \    $lst = array_diff($lst, array($min));\n    $lst = array_values($lst);\n \
    \   while (count($lst) > 0) {\n        $max = max($lst);\n        $result[] =\
    \ $max;\n        $lst = array_diff($lst, array($max));\n        $lst = array_values($lst);\n\
    \        if (count($lst) == 0) {\n            break;\n        }\n        $min\
    \ = min($lst);\n        $result[] = $min;\n        $lst = array_diff($lst, array($min));\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n", "  if (empty($lst))\
    \ {\n    return $lst;\n  }\n  sort($lst);\n  $result = array();\n  $i = 0;\n \
    \ $j = count($lst) - 1;\n  while ($i <= $j) {\n    $result[] = $lst[$i];\n   \
    \ if ($i != $j) {\n      $result[] = $lst[$j];\n    }\n    $i++;\n    $j--;\n\
    \  }\n  return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n\
    \    }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    $lst_len = count($lst);\n \
    \   if ($lst_len == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $lst_sorted = array();\n    $lst_sorted[] = $min;\n\
    \    $lst_sorted[] = $max;\n    $lst_sorted = array_merge($lst_sorted, strange_sort_list(array_diff($lst,\
    \ array($min, $max))));\n    return $lst_sorted;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n\n$lst\
    \ = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\necho \"\\n\";\n$lst\
    \ = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\necho \"\\n\";\n$lst\
    \ = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\";", "    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array();\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $lst = array_diff($lst, array($min));\n            $min = min($lst);\n  \
    \      } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ array($max));\n            $max = max($lst);\n        }\n        $i++;\n   \
    \ }\n    return $result;\n}\n", "    if (count($lst) < 2) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    return array_merge(array($min, $max), strange_sort_list($lst));\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_idx = array_search($min, $lst);\n    $max_idx\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_idx]);\n    unset($lst[$max_idx]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_idx = array_search($min, $lst);\n        $max_idx = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_idx]);\n\
    \        unset($lst[$max_idx]);\n        $lst = array_values($lst);\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = min($lst);\n            $lst = array_diff($lst,\
    \ [min($lst)]);\n        } else {\n            $result[] = max($lst);\n      \
    \      $lst = array_diff($lst, [max($lst)]);\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while ($i < $count)\
    \ {\n        $result[] = $min;\n        $result[] = $max;\n        $i++;\n   \
    \ }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $key = array_search($min, $lst);\n            unset($lst[$key]);\n      \
    \      $min = min($lst);\n        } else {\n            $result[] = $max;\n  \
    \          $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $min = min($lst);\n        } else {\n      \
    \      $result[] = $max;\n            $max = max($lst);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $key = array_search($min, $lst);\n            unset($lst[$key]);\n      \
    \      $min = min($lst);\n        } else {\n            $result[] = $max;\n  \
    \          $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $result = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i\
    \ <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j)\
    \ {\n            $result[] = $lst[$j];\n            $j--;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = array($min);\n    $lst = array_diff($lst, array($min));\n    while\
    \ (count($lst) > 0) {\n        $max = max($lst);\n        $res[] = $max;\n   \
    \     $lst = array_diff($lst, array($max));\n        if (count($lst) == 0) {\n\
    \            break;\n        }\n        $min = min($lst);\n        $res[] = $min;\n\
    \        $lst = array_diff($lst, array($min));\n    }\n    return $res;\n}\n",
  "    if (empty($lst)) {\n        return array();\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n\
    \        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n     \
    \       $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $new_lst = array($min);\n \
    \   $lst = array_diff($lst, array($min));\n    while (count($lst) > 0) {\n   \
    \     $max = max($lst);\n        $new_lst[] = $max;\n        $lst = array_diff($lst,\
    \ array($max));\n        if (count($lst) == 0) {\n            break;\n       \
    \ }\n        $min = min($lst);\n        $new_lst[] = $min;\n        $lst = array_diff($lst,\
    \ array($min));\n    }\n    return $new_lst;\n}\n", "    if (count($lst) == 0)\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, array($min, $max));\n    $result = array($min, $max);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, array($min, $max));\n        $result = array_merge($result,\
    \ array($min, $max));\n    }\n    return $result;\n}\n", "  $result = [];\n  $min\
    \ = min($lst);\n  $max = max($lst);\n  $i = 0;\n  while (count($lst) > 0) {\n\
    \    if ($i % 2 == 0) {\n      $result[] = min($lst);\n      $lst = array_diff($lst,\
    \ [min($lst)]);\n    } else {\n      $result[] = max($lst);\n      $lst = array_diff($lst,\
    \ [max($lst)]);\n    }\n    $i++;\n  }\n  return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    $lst_length = count($lst);\n    for ($i =\
    \ 0; $i < $lst_length; $i++) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst_len = count($lst);\n    if ($lst_len == 0) {\n        return $result;\n\
    \    }\n    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $lst_len\
    \ = count($lst);\n    if ($lst_len == 0) {\n        return $result;\n    }\n \
    \   $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n    if ($lst_len ==\
    \ 0) {\n        return $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst_len = count($lst);\n    if ($lst_len == 0) {\n        return\
    \ $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_len = count($lst);\n\
    \    if ($lst_len == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_len = count($lst);\n    if ($lst_len\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_", "  \
    \  if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $min = $lst[0];\n    $max = $lst[count($lst) - 1];\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_slice($lst, 1, count($lst)\
    \ - 2);\n    $lst = array_reverse($lst);\n    $result = array_merge($result, $lst);\n\
    \    return $result;\n}\n", "    $sorted = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $sorted[] = $min;\n    $sorted[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ > 0) {\n        $sorted = array_merge($sorted, strange_sort_list($lst));\n \
    \   }\n    return $sorted;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n       \
    \ } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n   \
    \ }\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return $lst;\n    }\n    $sorted = array();\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $sorted[] = $min;\n    $sorted[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    $lst = array_merge($lst, $sorted);\n    return $lst;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = array();\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while (count($lst) > 0) {\n    \
    \    $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_values(array_filter($lst, function($value) use ($min, $max)\
    \ {\n        return $value != $min && $value != $max;\n    }));\n    if (count($lst)\
    \ > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    sort($lst);\n    $result = array();\n  \
    \  $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[]\
    \ = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n            $result[] =\
    \ $lst[$j];\n            $j--;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n", "    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    $lst = array_values($lst);\n    $result = array($min,\
    \ $max);\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $lst = array_diff($lst, array($min, $max));\n        $lst\
    \ = array_values($lst);\n        $result = array_merge($result, array($min, $max));\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $key = array_search($min,\
    \ $lst);\n            unset($lst[$key]);\n            $min = min($lst);\n    \
    \    } else {\n            $result[] = $max;\n            $key = array_search($max,\
    \ $lst);\n            unset($lst[$key]);\n            $max = max($lst);\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}\n", "    if (count($lst)\
    \ == 0) {\n        return $lst;\n    }\n    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_", "    $result = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $lst = array_values($lst);\n    $min = min($lst", "    $result\
    \ = [];\n    $count = count($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 == 0) {\n        \
    \    $result[] = $min;\n            $min = min(array_diff($lst, $result));\n \
    \       } else {\n            $result[] = $max;\n            $max = max(array_diff($lst,\
    \ $result));\n        }\n        $i++;\n    }\n    return $result;\n}\n", "  \
    \  $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count = count($lst);\n\
    \    $i = 0;\n    while ($i < $count) {\n        $result[] = $min;\n        $min\
    \ = min(array_diff($lst, $result));\n        $result[] = $max;\n        $max =\
    \ max(array_diff($lst, $result));\n        $i += 2;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i\
    \ = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n          \
    \  $result[] = $min;\n            $min = min($lst);\n        } else {\n      \
    \      $result[] = $max;\n            $max = max($lst);\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "  $result = [];\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  $min_index = array_search($min, $lst);\n  $max_index = array_search($max,\
    \ $lst);\n  $lst[$min_index] = $max;\n  $lst[$max_index] = $min;\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  $lst = array_diff($lst, $result);\n  $lst =\
    \ array_values($lst);\n  if (count($lst) > 0) {\n    $result = array_merge($result,\
    \ strange_sort_list($lst));\n  }\n  return $result;\n}\n", "    if (empty($lst))\
    \ {\n        return $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result = array($min);\n    $lst = array_diff($lst, array($min));\n    while\
    \ (!empty($lst)) {\n        $max = max($lst);\n        $result[] = $max;\n   \
    \     $lst = array_diff($lst, array($max));\n        if (empty($lst)) {\n    \
    \        break;\n        }\n        $min = min($lst);\n        $result[] = $min;\n\
    \        $lst = array_diff($lst, array($min));\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n    $result\
    \ = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n\
    \        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n     \
    \       $result[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $lst = array_diff($lst, [$min, $max]);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n    while\
    \ (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n\
    \            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $min = min(array_diff($lst,\
    \ $result));\n        } else {\n            $result[] = $max;\n            $max\
    \ = max(array_diff($lst, $result));\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result = array();\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min, $max));\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n    }\n    return $result;\n}\n", "  $min = min($lst);\n\
    \  $max = max($lst);\n  $result = array();\n  $min_max = array($min, $max);\n\
    \  $i = 0;\n  while (count($lst) > 0) {\n    $result[] = $min_max[$i % 2];\n \
    \   $lst = array_diff($lst, array($min_max[$i % 2]));\n    $i++;\n  }\n  return\
    \ $result;\n}\n", "  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n\
    \  $min_index = array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n\
    \  $result[] = $min;\n  $result[] = $max;\n  unset($lst[$min_index]);\n  unset($lst[$max_index]);\n\
    \  $lst = array_values($lst);\n  while (count($lst) > 0) {\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \  }\n  return $result;\n}\n", "    if (count($lst) <= 1) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    return array_merge(array($min, $max), strange_sort_list($lst));\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $new_lst[]\
    \ = $min;\n        $new_lst[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $new_lst;\n}\n", "    $result = [];\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $length = count($lst);\n    $i = 0;\n    while ($i\
    \ < $length) {\n        $result[] = $min;\n        $lst = array_diff($lst, [$min]);\n\
    \        $min = min($lst);\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        $max = max($lst);\n        $i += 2;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($lst);\n    if ($count == 0) {\n\
    \        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $count--;\n\
    \    while ($count > 0) {\n        $max = max($lst);\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$max]);\n        $count--;\n        if ($count\
    \ == 0) {\n            break;\n        }\n        $min = min($lst);\n        $result[]\
    \ = $min;\n        $lst = array_diff($lst, [$min]);\n        $count--;\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $count = count($lst);\n  \
    \  $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $count -= 2;\n    while\
    \ ($count > 0) {\n        $min = min($lst);\n        $max = max($lst);\n     \
    \   $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n        $count -= 2;\n    }\n    return $result;\n}\n", "  \
    \  $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $result = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n\
    \        }\n    }\n    return $result;\n}\n", "    $res = array();\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    $res[] = $min;\n    $res[] =\
    \ $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst\
    \ = array_values($lst);\n    $lst_len = count($lst);\n    for ($i = 0; $i < $lst_len;\
    \ $i++) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $res;\n}\n", "    $result = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $min = min($lst);\n       \
    \ } else {\n            $result[] = $max;\n            $max = max($lst);\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $lst_length = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $lst = array_diff($lst, [$min]);\n    $lst_length = count($lst);\n    if\
    \ ($lst_length == 0) {\n        return $result;\n    }\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$max]);\n    $lst_length = count($lst);\n    if\
    \ ($lst_length == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n\
    \    $lst_length = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n\
    \    }\n    $result[] = $max;\n    $lst = array_diff($lst, [$max]);\n    $lst_length\
    \ = count($lst);\n    if ($lst_length == 0) {\n        return $result;\n    }\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $lst\
    \ = array_diff($lst, [$min]);\n    $lst_length = count($lst);\n    if ($lst_length\
    \ == 0) {\n        return $result;\n    }\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$max]);\n    $lst_length = count($lst);\n    if ($lst_length == 0) {\n    \
    \    return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result[] = $min;\n    $lst = array_diff($lst, [$min]);\n    $lst_", "    $result\
    \ = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [5, 5, 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4];\nprint_r(strange_sort_list($lst));\n\n$lst = [5, 5,\
    \ 5, 5];\nprint_r(strange_sort_list($lst));\n\n$lst = [];\nprint_r(strange_sort_list($lst));",
  "    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $key = array_search($min, $lst);\n            unset($lst[$key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $key = array_search($max, $lst);\n            unset($lst[$key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (empty($lst)) {\n        return array();\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $res = array($min);\n    $lst = array_diff($lst, array($min));\n\
    \    while (!empty($lst)) {\n        $max = max($lst);\n        $res[] = $max;\n\
    \        $lst = array_diff($lst, array($max));\n        if (empty($lst)) {\n \
    \           break;\n        }\n        $min = min($lst);\n        $res[] = $min;\n\
    \        $lst = array_diff($lst, array($min));\n    }\n    return $res;\n}\n",
  "    if (count($lst) < 2) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $lst[$min_index] = $max;\n    $lst[$max_index]\
    \ = $min;\n    $lst = array_values($lst);\n    $lst = array_slice($lst, 2);\n\
    \    $lst = array_merge(array($min, $max), $lst);\n    return $lst;\n}\n", " \
    \   $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min_index = array_search($min, $lst);\n            unset($lst[$min_index]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_index = array_search($max, $lst);\n            unset($lst[$max_index]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return array();\n    }\n    sort($lst);\n\
    \    $result = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i\
    \ <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n        if ($i <= $j)\
    \ {\n            $result[] = $lst[$j];\n            $j--;\n        }\n    }\n\
    \    return $result;\n}\n", "    $lst_len = count($lst);\n    $result = array();\n\
    \    $i = 0;\n    while ($i < $lst_len) {\n        $min = min($lst);\n       \
    \ $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n  \
    \      $lst = array_diff($lst, array($min, $max));\n        $i += 2;\n    }\n\
    \    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

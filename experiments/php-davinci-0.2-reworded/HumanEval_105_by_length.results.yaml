language: php
name: HumanEval_105_by_length
results:
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($num) {\n    return\
    \ $num >= 1 && $num <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($num) {\n    switch ($num) {\n      case 1:\n   \
    \     return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $words\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $words[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr3cp_q3.php:30\n\
    Stack trace:\n#0 /tmp/tmppr3cp_q3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppr3cp_q3.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v > 0 && $v < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($n) {\n\t\treturn $n\
    \ >= 1 && $n <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\treturn\
    \ \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\t\
    return \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\
    \treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\
    \t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item]))\
    \ {\n            $result[] = $numbers[$item];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh97wo41.php:41\n\
    Stack trace:\n#0 /tmp/tmpmh97wo41.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmh97wo41.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($item) {\n    return\
    \ $item > 0 && $item < 10;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($item) {\n    switch ($item) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzrziw5s.php:41\n\
    Stack trace:\n#0 /tmp/tmpbzrziw5s.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbzrziw5s.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return [\n      1 => \"One\",\n      2 => \"\
    Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\",\n  \
    \    6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9 => \"\
    Nine\"\n    ][$n];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n        if (isset($numbers[$number]))\
    \ {\n            $result[] = $numbers[$number];\n        }\n    }\n    sort($result);\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_nxi4uk.php:41\n\
    Stack trace:\n#0 /tmp/tmpj_nxi4uk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpj_nxi4uk.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($item) {\n\t\treturn\
    \ $item >= 1 && $item <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($item) {\n\t\treturn $GLOBALS['numbers'][$item];\n\
    \t}, $arr);\n\treturn $arr;\n}\n\n$numbers = array(\n\t1 => \"One\",\n\t2 => \"\
    Two\",\n\t3 => \"Three\",\n\t4 => \"Four\",\n\t5 => \"Five\",\n\t6 => \"Six\"\
    ,\n\t7 => \"Seven\",\n\t8 => \"Eight\",\n\t9 => \"Nine\"\n);\n\n$arr = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\nprint_r(by_length($arr));\necho \"\\n\";\n\n$arr = array();\n\
    print_r(by_length($arr));\necho \"\\n\";\n\n$arr = array(1, -1, 55);\nprint_r(by_length($arr));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => Eight\n    [1] => Five\n    [2] => Four\n    [3] =>\
    \ Three\n    [4] => Two\n    [5] => Two\n    [6] => One\n    [7] => One\n)\n\n\
    Array\n(\n)\n\nArray\n(\n    [0] => One\n)\n\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value > 0 && $value < 10) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $num) {\n        if (isset($numbers[$num]))\
    \ {\n            $result[] = $numbers[$num];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplao45bbf.php:41\n\
    Stack trace:\n#0 /tmp/tmplao45bbf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmplao45bbf.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n  \
    \      if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n  \
    \      }\n    }\n    sort($result);\n    $result = array_reverse($result);\n \
    \   foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxh517b2.php:40\n\
    Stack trace:\n#0 /tmp/tmpcxh517b2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcxh517b2.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $words\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $new_arr = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $nums)) {\n            $new_arr[] = $value;\n\
    \        }\n    }\n    sort($new_arr);\n    $new_arr = array_reverse($new_arr);\n\
    \    foreach ($new_arr as $key => $value) {\n        $new_arr[$key] = $words[$value\
    \ - 1];\n    }\n    return $new_arr;\n}\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    $arr = array_filter($arr, function($item) {\n\
    \        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    foreach ($arr as $item) {\n        $result[] = $numbers[$item];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][$n - 1];\n  }, $arr);\n \
    \ return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $nums)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($n) {\n\t\treturn $n\
    \ > 0 && $n < 10;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\treturn\
    \ \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\t\
    return \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\
    \treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\
    \t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        $map = array(\n            1 =>\
    \ 'One',\n            2 => 'Two',\n            3 => 'Three',\n            4 =>\
    \ 'Four',\n            5 => 'Five',\n            6 => 'Six',\n            7 =>\
    \ 'Seven',\n            8 => 'Eight',\n            9 => 'Nine',\n        );\n\
    \        return $map[$v];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n\
    \  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach ($result\
    \ as $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        switch ($x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($el) {\n\t\treturn $el\
    \ > 0 && $el < 10;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($el) {\n\t\tswitch ($el) {\n\t\t\tcase 1:\n\t\t\t\treturn\
    \ \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\t\
    return \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\
    \treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\
    \t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr3cp_q3.php:30\n\
    Stack trace:\n#0 /tmp/tmppr3cp_q3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppr3cp_q3.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v > 0 && $v < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n  \
    \      if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n  \
    \      }\n    }\n    sort($result);\n    $result = array_reverse($result);\n \
    \   foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return array(\n      1 => \"One\",\n      2\
    \ => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\"\
    ,\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9\
    \ => \"Nine\"\n    )[$n];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x > 0 && $x < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        return [\n            1 => \"One\"\
    ,\n            2 => \"Two\",\n            3 => \"Three\",\n            4 => \"\
    Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n            7\
    \ => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\"\n    \
    \    ][$x];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$result = array();\n\t$numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\tforeach ($arr as $value) {\n\t\
    \tif ($value >= 1 && $value <= 9) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\t\
    sort($result);\n\t$result = array_reverse($result);\n\tforeach ($result as $key\
    \ => $value) {\n\t\t$result[$key] = $numbers[$value];\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($n) {\n\t\treturn $n\
    \ > 0 && $n < 10;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\treturn\
    \ \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\t\
    return \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\
    \treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\
    \t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp7bjb90.php:40\n\
    Stack trace:\n#0 /tmp/tmpjp7bjb90.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjp7bjb90.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return $GLOBALS['numbers'][$n];\n  }, $arr);\n\
    \  return $arr;\n}\n\n$numbers = array(\n  1 => \"One\",\n  2 => \"Two\",\n  3\
    \ => \"Three\",\n  4 => \"Four\",\n  5 => \"Five\",\n  6 => \"Six\",\n  7 => \"\
    Seven\",\n  8 => \"Eight\",\n  9 => \"Nine\"\n);\n\n$arr = array(2, 1, 1, 4, 5,\
    \ 8, 2, 3);\n$arr = by_length($arr);\nprint_r($arr);\n\n$arr = array();\n$arr\
    \ = by_length($arr);\nprint_r($arr);\n\n$arr = array(1, -1, 55);\n$arr = by_length($arr);\n\
    print_r($arr);\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => Eight\n    [1] => Five\n    [2] => Four\n    [3] =>\
    \ Three\n    [4] => Two\n    [5] => Two\n    [6] => One\n    [7] => One\n)\nArray\n\
    (\n)\nArray\n(\n    [0] => One\n)\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$result = array();\n\t$numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\tforeach ($arr as $value) {\n\t\
    \tif ($value >= 1 && $value <= 9) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\t\
    rsort($result);\n\tforeach ($result as $key => $value) {\n\t\t$result[$key] =\
    \ $numbers[$value];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $words\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $words[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (isset($numbers[$value]))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    sort($result);\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs9yofdn.php:41\n\
    Stack trace:\n#0 /tmp/tmpcs9yofdn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcs9yofdn.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($x) {\n    return $x\
    \ >= 1 && $x <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($x) {\n    switch ($x) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($item) {\n    return\
    \ $item >= 1 && $item <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($item) {\n    switch ($item) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($val) {\n        return\
    \ $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = [];\n  $numbers = [\n    1 => \"One\",\n    2\
    \ => \"Two\",\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n \
    \   6 => \"Six\",\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\
    \n  ];\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu2jxs0a.php:40\n\
    Stack trace:\n#0 /tmp/tmppu2jxs0a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppu2jxs0a.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr5m2qo3.php:41\n\
    Stack trace:\n#0 /tmp/tmpnr5m2qo3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnr5m2qo3.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        switch ($x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return array(\n      1 => \"One\",\n      2\
    \ => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\"\
    ,\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9\
    \ => \"Nine\"\n    )[$n];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        return [\n            1 => 'One',\n\
    \            2 => 'Two',\n            3 => 'Three',\n            4 => 'Four',\n\
    \            5 => 'Five',\n            6 => 'Six',\n            7 => 'Seven',\n\
    \            8 => 'Eight',\n            9 => 'Nine',\n        ][$v];\n    }, $arr);\n\
    \    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $key => $value) {\n       \
    \ if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n       \
    \ }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n > 0 && $n < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        return [\n            1 => \"One\"\
    ,\n            2 => \"Two\",\n            3 => \"Three\",\n            4 => \"\
    Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n            7\
    \ => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n   \
    \     ][$n];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $num) {\n\
    \        if (in_array($num, $nums)) {\n            $result[] = $num;\n       \
    \ }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $num) {\n        $result[$key] = $names[$num - 1];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    $numbers = array(\n      1 => \"One\",\n   \
    \   2 => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"\
    Five\",\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n \
    \     9 => \"Nine\"\n    );\n    return $numbers[$n];\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  $result = array_reverse($result);\n  foreach ($result as $key => $value) {\n\
    \    switch ($value) {\n      case 1:\n        $result[$key] = \"One\";\n    \
    \    break;\n      case 2:\n        $result[$key] = \"Two\";\n        break;\n\
    \      case 3:\n        $result[$key] = \"Three\";\n        break;\n      case\
    \ 4:\n        $result[$key] = \"Four\";\n        break;\n      case 5:\n     \
    \   $result[$key] = \"Five\";\n        break;\n      case 6:\n        $result[$key]\
    \ = \"Six\";\n        break;\n      case 7:\n        $result[$key] = \"Seven\"\
    ;\n        break;\n      case 8:\n        $result[$key] = \"Eight\";\n       \
    \ break;\n      case 9:\n        $result[$key] = \"Nine\";\n        break;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($item) {\n    return\
    \ $item >= 1 && $item <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($item) {\n    switch ($item) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $sorted = array();\n  $numbers = array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9);\n  foreach ($arr as $value) {\n    if (in_array($value, $numbers))\
    \ {\n      array_push($sorted, $value);\n    }\n  }\n  sort($sorted);\n  $sorted\
    \ = array_reverse($sorted);\n  $result = array();\n  foreach ($sorted as $value)\
    \ {\n    switch ($value) {\n      case 1:\n        array_push($result, \"One\"\
    );\n        break;\n      case 2:\n        array_push($result, \"Two\");\n   \
    \     break;\n      case 3:\n        array_push($result, \"Three\");\n       \
    \ break;\n      case 4:\n        array_push($result, \"Four\");\n        break;\n\
    \      case 5:\n        array_push($result, \"Five\");\n        break;\n     \
    \ case 6:\n        array_push($result, \"Six\");\n        break;\n      case 7:\n\
    \        array_push($result, \"Seven\");\n        break;\n      case 8:\n    \
    \    array_push($result, \"Eight\");\n        break;\n      case 9:\n        array_push($result,\
    \ \"Nine\");\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    $result = array_map(function($value) {\n        switch ($value) {\n     \
    \       case 1:\n                return \"One\";\n            case 2:\n      \
    \          return \"Two\";\n            case 3:\n                return \"Three\"\
    ;\n            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v > 0 && $v < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (array_key_exists($item,\
    \ $numbers)) {\n            $result[] = $numbers[$item];\n        }\n    }\n \
    \   return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jdcfnlc.php:40\n\
    Stack trace:\n#0 /tmp/tmp9jdcfnlc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9jdcfnlc.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $num) {\n   \
    \ if ($num >= 1 && $num <= 9) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n\
    \  $result = array_reverse($result);\n  foreach ($result as $key => $num) {\n\
    \    $result[$key] = $numbers[$num];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  $result = array_reverse($result);\n  foreach ($result as $key => $value) {\n\
    \    $result[$key] = $numbers[$value];\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(\n        1\
    \ => \"One\",\n        2 => \"Two\",\n        3 => \"Three\",\n        4 => \"\
    Four\",\n        5 => \"Five\",\n        6 => \"Six\",\n        7 => \"Seven\"\
    ,\n        8 => \"Eight\",\n        9 => \"Nine\"\n    );\n    foreach ($arr as\
    \ $value) {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqa9x0cj.php:41\n\
    Stack trace:\n#0 /tmp/tmpcqa9x0cj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcqa9x0cj.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $item) {\n\
    \        if (array_key_exists($item, $numbers)) {\n            $result[] = $numbers[$item];\n\
    \        }\n    }\n    return array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ltcri5.php:30\n\
    Stack trace:\n#0 /tmp/tmp66ltcri5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66ltcri5.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4m5w90zd.php:41\n\
    Stack trace:\n#0 /tmp/tmp4m5w90zd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4m5w90zd.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$result = array();\n\t$numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\tforeach ($arr as $value) {\n\t\
    \tif ($value >= 1 && $value <= 9) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\t\
    sort($result);\n\t$result = array_reverse($result);\n\tforeach ($result as $key\
    \ => $value) {\n\t\t$result[$key] = $numbers[$value];\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $sort = array();\n  foreach ($arr as $value) {\n    if\
    \ ($value >= 1 && $value <= 9) {\n      $sort[] = $value;\n    }\n  }\n  sort($sort);\n\
    \  $reverse = array_reverse($sort);\n  $result = array();\n  foreach ($reverse\
    \ as $value) {\n    switch ($value) {\n      case 1:\n        $result[] = \"One\"\
    ;\n        break;\n      case 2:\n        $result[] = \"Two\";\n        break;\n\
    \      case 3:\n        $result[] = \"Three\";\n        break;\n      case 4:\n\
    \        $result[] = \"Four\";\n        break;\n      case 5:\n        $result[]\
    \ = \"Five\";\n        break;\n      case 6:\n        $result[] = \"Six\";\n \
    \       break;\n      case 7:\n        $result[] = \"Seven\";\n        break;\n\
    \      case 8:\n        $result[] = \"Eight\";\n        break;\n      case 9:\n\
    \        $result[] = \"Nine\";\n        break;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n > 0 && $n < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        switch ($x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($val) {\n        return\
    \ $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\"\
    ,\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\"\
    ,\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result\
    \ = array();\n  foreach ($arr as $number) {\n    if (array_key_exists($number,\
    \ $numbers)) {\n      $result[] = $numbers[$number];\n    }\n  }\n  sort($result);\n\
    \  return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbaplbcb5.php:41\n\
    Stack trace:\n#0 /tmp/tmpbaplbcb5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbaplbcb5.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n  \
    \      if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n  \
    \      }\n    }\n    sort($result);\n    $result = array_reverse($result);\n \
    \   foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($num) {\n    return\
    \ $num >= 1 && $num <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($num) {\n    switch ($num) {\n      case 1:\n   \
    \     return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if (array_key_exists($value, $numbers)) {\n      $result[] = $numbers[$value];\n\
    \    }\n  }\n  return array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps11tiany.php:30\n\
    Stack trace:\n#0 /tmp/tmps11tiany.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps11tiany.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4m5w90zd.php:41\n\
    Stack trace:\n#0 /tmp/tmp4m5w90zd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4m5w90zd.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        switch ($x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (array_key_exists($item,\
    \ $numbers)) {\n            $result[] = $numbers[$item];\n        }\n    }\n \
    \   return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jdcfnlc.php:40\n\
    Stack trace:\n#0 /tmp/tmp9jdcfnlc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9jdcfnlc.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value > 0 && $value < 10) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    $names = array(\n      1 => \"One\",\n     \
    \ 2 => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\"\
    ,\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9\
    \ => \"Nine\"\n    );\n    return $names[$n];\n  }, $arr);\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($x) {\n\t\treturn $x\
    \ >= 1 && $x <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($x) {\n\t\treturn [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][$x - 1];\n\t}, $arr);\n\t\
    return $arr;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($x) {\n    return $x\
    \ >= 1 && $x <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($x) {\n    return [\n      1 => \"One\",\n      2 => \"\
    Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\",\n  \
    \    6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9 => \"\
    Nine\"\n    ][$x];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxh517b2.php:40\n\
    Stack trace:\n#0 /tmp/tmpcxh517b2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcxh517b2.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($x) {\n    return $x\
    \ >= 1 && $x <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($x) {\n    return [\n      1 => \"One\",\n      2 => \"\
    Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 => \"Five\",\n  \
    \    6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\",\n      9 => \"\
    Nine\"\n    ][$x];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $new_arr = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $new_arr[] = $value;\n\
    \        }\n    }\n    sort($new_arr);\n    $new_arr = array_reverse($new_arr);\n\
    \    foreach ($new_arr as $key => $value) {\n        $new_arr[$key] = $numbers[$value];\n\
    \    }\n    return $new_arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ (array_key_exists($value, $numbers)) {\n      $result[] = $numbers[$value];\n\
    \    }\n  }\n  return array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmy_f4735.php:30\n\
    Stack trace:\n#0 /tmp/tmpmy_f4735.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmy_f4735.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr3cp_q3.php:30\n\
    Stack trace:\n#0 /tmp/tmppr3cp_q3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppr3cp_q3.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $nums = [\n        1 => 'One',\n \
    \       2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $num) {\n        if (isset($nums[$num]))\
    \ {\n            $result[] = $nums[$num];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8elq9w_.php:41\n\
    Stack trace:\n#0 /tmp/tmpc8elq9w_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpc8elq9w_.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    sort($result);\n    return array_reverse($result);\n}\n\
    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2sy33w.php:31\n\
    Stack trace:\n#0 /tmp/tmpmf2sy33w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmf2sy33w.php\
    \ on line 31\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($num) {\n    return\
    \ $num >= 1 && $num <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($num) {\n    $names = array(\n      1 => \"One\"\
    ,\n      2 => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 =>\
    \ \"Five\",\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\"\
    ,\n      9 => \"Nine\"\n    );\n    return $names[$num];\n  }, $arr);\n  return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($x) {\n\t\treturn $x\
    \ > 0 && $x < 10;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr\
    \ = array_map(function($x) {\n\t\tswitch ($x) {\n\t\t\tcase 1:\n\t\t\t\treturn\
    \ \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\t\
    return \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\
    \treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\
    \t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($val) {\n        return\
    \ $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  $result = array_reverse($result);\n  foreach ($result as $key => $value) {\n\
    \    switch ($value) {\n      case 1:\n        $result[$key] = \"One\";\n    \
    \    break;\n      case 2:\n        $result[$key] = \"Two\";\n        break;\n\
    \      case 3:\n        $result[$key] = \"Three\";\n        break;\n      case\
    \ 4:\n        $result[$key] = \"Four\";\n        break;\n      case 5:\n     \
    \   $result[$key] = \"Five\";\n        break;\n      case 6:\n        $result[$key]\
    \ = \"Six\";\n        break;\n      case 7:\n        $result[$key] = \"Seven\"\
    ;\n        break;\n      case 8:\n        $result[$key] = \"Eight\";\n       \
    \ break;\n      case 9:\n        $result[$key] = \"Nine\";\n        break;\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item]))\
    \ {\n            $result[] = $numbers[$item];\n        }\n    }\n    sort($result);\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kwidsfe.php:41\n\
    Stack trace:\n#0 /tmp/tmp1kwidsfe.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1kwidsfe.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n  \
    \      if (array_key_exists($value, $numbers)) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjpfb7l6.php:31\n\
    Stack trace:\n#0 /tmp/tmpbjpfb7l6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbjpfb7l6.php\
    \ on line 31\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp7bjb90.php:40\n\
    Stack trace:\n#0 /tmp/tmpjp7bjb90.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjp7bjb90.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) { return $n >\
    \ 0 && $n < 10; });\n    $arr = array_unique($arr);\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($n) {\n        switch\
    \ ($n) {\n            case 1: return \"One\";\n            case 2: return \"Two\"\
    ;\n            case 3: return \"Three\";\n            case 4: return \"Four\"\
    ;\n            case 5: return \"Five\";\n            case 6: return \"Six\";\n\
    \            case 7: return \"Seven\";\n            case 8: return \"Eight\";\n\
    \            case 9: return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1d_v5ax.php:40\n\
    Stack trace:\n#0 /tmp/tmpe1d_v5ax.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpe1d_v5ax.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\"\
    ,\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\"\
    ,\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result\
    \ = array();\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwvurk4r.php:41\n\
    Stack trace:\n#0 /tmp/tmphwvurk4r.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphwvurk4r.php\
    \ on line 41\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item]))\
    \ {\n            $result[] = $numbers[$item];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh97wo41.php:41\n\
    Stack trace:\n#0 /tmp/tmpmh97wo41.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmh97wo41.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp7bjb90.php:40\n\
    Stack trace:\n#0 /tmp/tmpjp7bjb90.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjp7bjb90.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($val) {\n        return\
    \ $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    $names = array(\"One\", \"Two\", \"Three\",\
    \ \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    return $names[$n\
    \ - 1];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n  \
    \  return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($value) {\n      \
    \  return $value >= 1 && $value <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($value) {\n        switch ($value) {\n        \
    \    case 1:\n                return \"One\";\n            case 2:\n         \
    \       return \"Two\";\n            case 3:\n                return \"Three\"\
    ;\n            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    return $GLOBALS['numbers'][$n];\n  }, $arr);\n\
    \  return $arr;\n}\n\n$numbers = array(\n  1 => \"One\",\n  2 => \"Two\",\n  3\
    \ => \"Three\",\n  4 => \"Four\",\n  5 => \"Five\",\n  6 => \"Six\",\n  7 => \"\
    Seven\",\n  8 => \"Eight\",\n  9 => \"Nine\"\n);\n\n$arr = array(2, 1, 1, 4, 5,\
    \ 8, 2, 3);\nprint_r(by_length($arr));\n\n$arr = array();\nprint_r(by_length($arr));\n\
    \n$arr = array(1, -1, 55);\nprint_r(by_length($arr));\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => Eight\n    [1] => Five\n    [2] => Four\n    [3] =>\
    \ Three\n    [4] => Two\n    [5] => Two\n    [6] => One\n    [7] => One\n)\nArray\n\
    (\n)\nArray\n(\n    [0] => One\n)\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item]))\
    \ {\n            $result[] = $numbers[$item];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh97wo41.php:41\n\
    Stack trace:\n#0 /tmp/tmpmh97wo41.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmh97wo41.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr3cp_q3.php:30\n\
    Stack trace:\n#0 /tmp/tmppr3cp_q3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppr3cp_q3.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if ($value > 0 && $value < 10) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n\t$arr = array_filter($arr, function($num) {\n\t\treturn\
    \ $num >= 1 && $num <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($num) {\n\t\tswitch ($num) {\n\t\t\tcase 1:\n\t\t\t\
    \treturn \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\
    \t\treturn \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\
    \t\t\t\treturn \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\
    \t\t\t\treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase\
    \ 9:\n\t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\"\
    ,\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\"\
    ,\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result\
    \ = array();\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  sort($result);\n  return\
    \ array_reverse($result);\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxztkcimc.php:41\n\
    Stack trace:\n#0 /tmp/tmpxztkcimc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxztkcimc.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\"\
    ,\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\"\
    ,\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result\
    \ = array();\n  foreach ($arr as $value) {\n    if (isset($numbers[$value])) {\n\
    \      $result[] = $numbers[$value];\n    }\n  }\n  rsort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qy82blt.php:41\n\
    Stack trace:\n#0 /tmp/tmp5qy82blt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5qy82blt.php\
    \ on line 41\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) {\n        return\
    \ $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        $n = (string)$n;\n        switch\
    \ ($n) {\n            case '1':\n                return 'One';\n            case\
    \ '2':\n                return 'Two';\n            case '3':\n               \
    \ return 'Three';\n            case '4':\n                return 'Four';\n   \
    \         case '5':\n                return 'Five';\n            case '6':\n \
    \               return 'Six';\n            case '7':\n                return 'Seven';\n\
    \            case '8':\n                return 'Eight';\n            case '9':\n\
    \                return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return \"One\";\n            case 2:\n           \
    \     return \"Two\";\n            case 3:\n                return \"Three\";\n\
    \            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($n) { return $n >\
    \ 0 && $n < 10; });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1: return\
    \ \"One\";\n            case 2: return \"Two\";\n            case 3: return \"\
    Three\";\n            case 4: return \"Four\";\n            case 5: return \"\
    Five\";\n            case 6: return \"Six\";\n            case 7: return \"Seven\"\
    ;\n            case 8: return \"Eight\";\n            case 9: return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = [];\n  $numbers = [\n    1 => \"One\",\n    2\
    \ => \"Two\",\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n \
    \   6 => \"Six\",\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\
    \n  ];\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu2jxs0a.php:40\n\
    Stack trace:\n#0 /tmp/tmppu2jxs0a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppu2jxs0a.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return \"One\";\n            case 2:\n           \
    \     return \"Two\";\n            case 3:\n                return \"Three\";\n\
    \            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $nums = array(\n        1 => \"One\",\n        2 => \"\
    Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $new_arr = array();\n    foreach ($arr as $num)\
    \ {\n        if (array_key_exists($num, $nums)) {\n            $new_arr[] = $nums[$num];\n\
    \        }\n    }\n    rsort($new_arr);\n    return $new_arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqa82tka7.php:41\n\
    Stack trace:\n#0 /tmp/tmpqa82tka7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqa82tka7.php\
    \ on line 41\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $item) {\n\
    \        if (in_array($item, $numbers)) {\n            $result[] = $item;\n  \
    \      }\n    }\n    sort($result);\n    $result = array_reverse($result);\n \
    \   foreach ($result as $key => $item) {\n        $result[$key] = $names[$item\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $number)\
    \ {\n        if ($number >= 1 && $number <= 9) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $number) {\n        $result[$key] = $numbers[$number];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $nums)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return \"One\";\n            case 2:\n           \
    \     return \"Two\";\n            case 3:\n                return \"Three\";\n\
    \            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item]))\
    \ {\n            $result[] = $numbers[$item];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh97wo41.php:41\n\
    Stack trace:\n#0 /tmp/tmpmh97wo41.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmh97wo41.php\
    \ on line 41\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return \"One\";\n            case 2:\n           \
    \     return \"Two\";\n            case 3:\n                return \"Three\";\n\
    \            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr3cp_q3.php:30\n\
    Stack trace:\n#0 /tmp/tmppr3cp_q3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppr3cp_q3.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ (array_key_exists($value, $numbers)) {\n      $result[] = $numbers[$value];\n\
    \    }\n  }\n  return array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmy_f4735.php:30\n\
    Stack trace:\n#0 /tmp/tmpmy_f4735.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmy_f4735.php\
    \ on line 30\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        switch ($value) {\n      \
    \      case 1:\n                $result[$key] = \"One\";\n                break;\n\
    \            case 2:\n                $result[$key] = \"Two\";\n             \
    \   break;\n            case 3:\n                $result[$key] = \"Three\";\n\
    \                break;\n            case 4:\n                $result[$key] =\
    \ \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\");\n  $new_arr = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $nums)) {\n      array_push($new_arr, $value);\n    }\n  }\n  sort($new_arr);\n\
    \  $new_arr = array_reverse($new_arr);\n  foreach ($new_arr as $key => $value)\
    \ {\n    $new_arr[$key] = $names[$value - 1];\n  }\n  return $new_arr;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        $map = array(\n            1 =>\
    \ 'One',\n            2 => 'Two',\n            3 => 'Three',\n            4 =>\
    \ 'Four',\n            5 => 'Five',\n            6 => 'Six',\n            7 =>\
    \ 'Seven',\n            8 => 'Eight',\n            9 => 'Nine',\n        );\n\
    \        return $map[$v];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxh517b2.php:40\n\
    Stack trace:\n#0 /tmp/tmpcxh517b2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcxh517b2.php\
    \ on line 40\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($item) {\n    return\
    \ $item >= 1 && $item <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($item) {\n    switch ($item) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1 => \"One\", 2\
    \ => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 =>\
    \ \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n \
    \   if (array_key_exists($value, $numbers)) {\n      $result[] = $numbers[$value];\n\
    \    }\n  }\n  rsort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgzfyig9.php:31\n\
    Stack trace:\n#0 /tmp/tmprgzfyig9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprgzfyig9.php\
    \ on line 31\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($n) {\n    return $n\
    \ >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($item) {\n       \
    \ return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return \"One\";\n            case 2:\n           \
    \     return \"Two\";\n            case 3:\n                return \"Three\";\n\
    \            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    sort($result);\n    return array_reverse($result);\n\
    }\n\nprint_r(by_length(array(2, 1, 1, 4, 5, 8, 2, 3)));\nprint_r(by_length(array()));\n\
    print_r(by_length(array(1, -1, 55)));\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Two\n    [1] => Two\n    [2] => Three\n    [3] =>\
    \ One\n    [4] => One\n    [5] => Four\n    [6] => Five\n    [7] => Eight\n)\n\
    Array\n(\n)\nArray\n(\n    [0] => One\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpu8n4746f.php:44\nStack trace:\n#0 /tmp/tmpu8n4746f.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu8n4746f.php on line 44\n"
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        switch ($value) {\n      \
    \      case 1:\n                $result[$key] = \"One\";\n                break;\n\
    \            case 2:\n                $result[$key] = \"Two\";\n             \
    \   break;\n            case 3:\n                $result[$key] = \"Three\";\n\
    \                break;\n            case 4:\n                $result[$key] =\
    \ \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    if (empty($arr)) {\n        return\
    \ $result;\n    }\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    sort($result);\n    return array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn__m14r0.php:44\n\
    Stack trace:\n#0 /tmp/tmpn__m14r0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpn__m14r0.php\
    \ on line 44\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) { return $x >\
    \ 0 && $x < 10; });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($x) {\n        switch ($x) {\n            case 1: return\
    \ \"One\";\n            case 2: return \"Two\";\n            case 3: return \"\
    Three\";\n            case 4: return \"Four\";\n            case 5: return \"\
    Five\";\n            case 6: return \"Six\";\n            case 7: return \"Seven\"\
    ;\n            case 8: return \"Eight\";\n            case 9: return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n  \
    \      if (array_key_exists($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $numbers = array(\n        1 => \"One\",\n        2 =>\
    \ \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\"\
    ,\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n \
    \       9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $key\
    \ => $value) {\n        if (array_key_exists($value, $numbers)) {\n          \
    \  $result[] = $numbers[$value];\n        }\n    }\n    sort($result);\n    return\
    \ array_reverse($result);\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9zl59tx.php:41\n\
    Stack trace:\n#0 /tmp/tmpi9zl59tx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi9zl59tx.php\
    \ on line 41\n"
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $arr = array_filter($arr, function($x) { return $x >= 1\
    \ && $x <= 9; });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($x)\
    \ {\n    switch ($x) {\n      case 1: return \"One\";\n      case 2: return \"\
    Two\";\n      case 3: return \"Three\";\n      case 4: return \"Four\";\n    \
    \  case 5: return \"Five\";\n      case 6: return \"Six\";\n      case 7: return\
    \ \"Seven\";\n      case 8: return \"Eight\";\n      case 9: return \"Nine\";\n\
    \    }\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($x) {\n        return\
    \ $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        switch ($x) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  $numbers = array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  foreach ($arr as $value) {\n  \
    \  if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730872
- exit_code: 0
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $arr = array_filter($arr, function($v) {\n        return\
    \ $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730871
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n    $result = array();\n    if (empty($arr)) {\n        return\
    \ $result;\n    }\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgp59dady.php:34\n\
    Stack trace:\n#0 /tmp/tmpgp59dady.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgp59dady.php\
    \ on line 34\n"
  timestamp: 1659730872

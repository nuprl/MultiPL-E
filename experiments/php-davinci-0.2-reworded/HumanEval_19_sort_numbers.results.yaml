language: php
name: HumanEval_19_sort_numbers
results:
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return number_to_digit($num);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return digit_to_number($num);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpiat5t96b.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpiat5t96b.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpiat5t96b.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpiat5t96b.php(24): candidate('')\n#4 /tmp/tmpiat5t96b.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpiat5t96b.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $num_array = explode(\" \"\
    , $numbers);\n  $num_array = array_map(function($num) {\n    switch ($num) {\n\
    \      case 'zero':\n        return 0;\n      case 'one':\n        return 1;\n\
    \      case 'two':\n        return 2;\n      case 'three':\n        return 3;\n\
    \      case 'four':\n        return 4;\n      case 'five':\n        return 5;\n\
    \      case 'six':\n        return 6;\n      case 'seven':\n        return 7;\n\
    \      case 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n\
    \    }\n  }, $num_array);\n  sort($num_array);\n  $num_array = array_map(function($num)\
    \ {\n    switch ($num) {\n      case 0:\n        return 'zero';\n      case 1:\n\
    \        return 'one';\n      case 2:\n        return 'two';\n      case 3:\n\
    \        return 'three';\n      case 4:\n        return 'four';\n      case 5:\n\
    \        return 'five';\n      case 6:\n        return 'six';\n      case 7:\n\
    \        return 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n\
    \        return 'nine';\n    }\n  }, $num_array);\n  return implode(\" \", $num_array);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kua7uxs.php:66\n\
    Stack trace:\n#0 /tmp/tmp6kua7uxs.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp6kua7uxs.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_digit($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return digit_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpn377trlz.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpn377trlz.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpn377trlz.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpn377trlz.php(24): candidate('')\n#4 /tmp/tmpn377trlz.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpn377trlz.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi37p32u.php:66\n\
    Stack trace:\n#0 /tmp/tmpgi37p32u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgi37p32u.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmp98mvoxj0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp98mvoxj0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp98mvoxj0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp98mvoxj0.php(24): candidate('')\n#4 /tmp/tmp98mvoxj0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp98mvoxj0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($n) {\n\t\treturn number_to_numeral($n);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($n) {\n\t\t\
    return numeral_to_number($n);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpiq25xkfb.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpiq25xkfb.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpiq25xkfb.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpiq25xkfb.php(24): candidate('')\n#4 /tmp/tmpiq25xkfb.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpiq25xkfb.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx89_n4qo.php:24\n\
    Stack trace:\n#0 /tmp/tmpx89_n4qo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx89_n4qo.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($n) {\n\t\treturn array_search($n,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($n)\
    \ {\n\t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$n];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmo91hc9.php:24\n\
    Stack trace:\n#0 /tmp/tmpqmo91hc9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqmo91hc9.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers_map = array(\n        'zero' => 0,\n        'one' =>\
    \ 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n     \
    \   'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9\n    );\n    $numbers_map_reverse = array_flip($numbers_map);\n\
    \    $numbers_map_reverse[0] = 'zero';\n    $numbers_map_reverse[1] = 'one';\n\
    \    $numbers_map_reverse[2] = 'two';\n    $numbers_map_reverse[3] = 'three';\n\
    \    $numbers_map_reverse[4] = 'four';\n    $numbers_map_reverse[5] = 'five';\n\
    \    $numbers_map_reverse[6] = 'six';\n    $numbers_map_reverse[7] = 'seven';\n\
    \    $numbers_map_reverse[8] = 'eight';\n    $numbers_map_reverse[9] = 'nine';\n\
    \    $numbers_int = array();\n    foreach ($numbers as $number) {\n        $numbers_int[]\
    \ = $numbers_map[$number];\n    }\n    sort($numbers_int);\n    $numbers_sorted\
    \ = array();\n    foreach ($numbers_int as $number) {\n        $numbers_sorted[]\
    \ = $numbers_map_reverse[$number];\n    }\n    return implode(\" \", $numbers_sorted);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi37p32u.php:66\n\
    Stack trace:\n#0 /tmp/tmpgi37p32u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgi37p32u.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch($number)\
    \ {\n            case 0:\n                return 'zero';\n            case 1:\n\
    \                return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n        }\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhxdzzp3.php:66\n\
    Stack trace:\n#0 /tmp/tmpuhxdzzp3.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpuhxdzzp3.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7knid_h.php:24\n\
    Stack trace:\n#0 /tmp/tmpk7knid_h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7knid_h.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map('convert_to_number', $numbers);\n\tsort($numbers);\n\
    \t$numbers = array_map('convert_to_string', $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'convert_to_number' not found or invalid function name in /tmp/tmp2q1qd5p9.php\
    \ on line 9\n\nWarning: sort() expects parameter 1 to be array, null given in\
    \ /tmp/tmp2q1qd5p9.php on line 10\n\nWarning: array_map() expects parameter 1\
    \ to be a valid callback, function 'convert_to_string' not found or invalid function\
    \ name in /tmp/tmp2q1qd5p9.php on line 11\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp2q1qd5p9.php on line 12\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp2q1qd5p9.php:20\nStack trace:\n#0 /tmp/tmp2q1qd5p9.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2q1qd5p9.php on line 20\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_to_word($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmpr7tu4os2.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpr7tu4os2.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpr7tu4os2.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpr7tu4os2.php(24): candidate('')\n#4 /tmp/tmpr7tu4os2.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpr7tu4os2.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero': return 0;\n      case 'one': return 1;\n      case 'two':\
    \ return 2;\n      case 'three': return 3;\n      case 'four': return 4;\n   \
    \   case 'five': return 5;\n      case 'six': return 6;\n      case 'seven': return\
    \ 7;\n      case 'eight': return 8;\n      case 'nine': return 9;\n    }\n  },\
    \ $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number) {\n\
    \    switch ($number) {\n      case 0: return 'zero';\n      case 1: return 'one';\n\
    \      case 2: return 'two';\n      case 3: return 'three';\n      case 4: return\
    \ 'four';\n      case 5: return 'five';\n      case 6: return 'six';\n      case\
    \ 7: return 'seven';\n      case 8: return 'eight';\n      case 9: return 'nine';\n\
    \    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xjo0d1x.php:46\n\
    Stack trace:\n#0 /tmp/tmp4xjo0d1x.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp4xjo0d1x.php\
    \ on line 46\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($n) {\n        return [\n    \
    \        'zero' => 0,\n            'one' => 1,\n            'two' => 2,\n    \
    \        'three' => 3,\n            'four' => 4,\n            'five' => 5,\n \
    \           'six' => 6,\n            'seven' => 7,\n            'eight' => 8,\n\
    \            'nine' => 9,\n        ][$n];\n    }, $numbers);\n    sort($numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0d1i67jq.php:33\n\
    Stack trace:\n#0 /tmp/tmp0d1i67jq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0d1i67jq.php\
    \ on line 33\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    $number = str_replace(\"\
    zero\", \"0\", $number);\n    $number = str_replace(\"one\", \"1\", $number);\n\
    \    $number = str_replace(\"two\", \"2\", $number);\n    $number = str_replace(\"\
    three\", \"3\", $number);\n    $number = str_replace(\"four\", \"4\", $number);\n\
    \    $number = str_replace(\"five\", \"5\", $number);\n    $number = str_replace(\"\
    six\", \"6\", $number);\n    $number = str_replace(\"seven\", \"7\", $number);\n\
    \    $number = str_replace(\"eight\", \"8\", $number);\n    $number = str_replace(\"\
    nine\", \"9\", $number);\n    return $number;\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    $number = str_replace(\"0\",\
    \ \"zero\", $number);\n    $number = str_replace(\"1\", \"one\", $number);\n \
    \   $number = str_replace(\"2\", \"two\", $number);\n    $number = str_replace(\"\
    3\", \"three\", $number);\n    $number = str_replace(\"4\", \"four\", $number);\n\
    \    $number = str_replace(\"5\", \"five\", $number);\n    $number = str_replace(\"\
    6\", \"six\", $number);\n    $number = str_replace(\"7\", \"seven\", $number);\n\
    \    $number = str_replace(\"8\", \"eight\", $number);\n    $number = str_replace(\"\
    9\", \"nine\", $number);\n    return $number;\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return number_to_numeral($numeral_to_number($num));\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpagq2pyd3.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpagq2pyd3.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpagq2pyd3.php(17):\
    \ sort_numbers(Array)\n#3 /tmp/tmpagq2pyd3.php(21): candidate('')\n#4 /tmp/tmpagq2pyd3.php(28):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpagq2pyd3.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return convert_to_number($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return convert_to_word($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmp9ah8mpsw.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp9ah8mpsw.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp9ah8mpsw.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp9ah8mpsw.php(24): candidate('')\n#4 /tmp/tmp9ah8mpsw.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp9ah8mpsw.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7knid_h.php:24\n\
    Stack trace:\n#0 /tmp/tmpk7knid_h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7knid_h.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $number_map = array(\n    'zero' => 0,\n    'one' => 1,\n    'two'\
    \ => 2,\n    'three' => 3,\n    'four' => 4,\n    'five' => 5,\n    'six' => 6,\n\
    \    'seven' => 7,\n    'eight' => 8,\n    'nine' => 9\n  );\n  $numbers = array_map(function($number)\
    \ use ($number_map) {\n    return $number_map[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return array_search($number,\
    \ $number_map);\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfxgxg_e.php:36\n\
    Stack trace:\n#0 /tmp/tmpjfxgxg_e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjfxgxg_e.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map('strtolower', $numbers);\n\t$numbers = array_map('number_to_digit',\
    \ $numbers);\n\tsort($numbers);\n\t$numbers = array_map('digit_to_number', $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'number_to_digit' not found or invalid function name in /tmp/tmp_0961ayf.php\
    \ on line 10\n\nWarning: sort() expects parameter 1 to be array, null given in\
    \ /tmp/tmp_0961ayf.php on line 11\n\nWarning: array_map() expects parameter 1\
    \ to be a valid callback, function 'digit_to_number' not found or invalid function\
    \ name in /tmp/tmp_0961ayf.php on line 12\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp_0961ayf.php on line 13\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_0961ayf.php:21\nStack trace:\n#0 /tmp/tmp_0961ayf.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_0961ayf.php on line 21\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(\"\
    \ \", $numbers);\n  $numbers_array = array_map(function($number) {\n    return\
    \ number_to_int($number);\n  }, $numbers_array);\n  sort($numbers_array);\n  $numbers_array\
    \ = array_map(function($number) {\n    return int_to_number($number);\n  }, $numbers_array);\n\
    \  return implode(\" \", $numbers_array);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpfuh79eel.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpfuh79eel.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpfuh79eel.php(20):\
    \ sort_numbers('')\n#3 /tmp/tmpfuh79eel.php(24): candidate('')\n#4 /tmp/tmpfuh79eel.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpfuh79eel.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7knid_h.php:24\n\
    Stack trace:\n#0 /tmp/tmpk7knid_h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7knid_h.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map('number_to_int', $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map('int_to_number', $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'number_to_int' not found or invalid function name in /tmp/tmpv87tquh1.php on\
    \ line 9\n\nWarning: sort() expects parameter 1 to be array, null given in /tmp/tmpv87tquh1.php\
    \ on line 10\n\nWarning: array_map() expects parameter 1 to be a valid callback,\
    \ function 'int_to_number' not found or invalid function name in /tmp/tmpv87tquh1.php\
    \ on line 11\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpv87tquh1.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv87tquh1.php:20\n\
    Stack trace:\n#0 /tmp/tmpv87tquh1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv87tquh1.php\
    \ on line 20\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return $number\
    \ === 'zero' ? 0 : $number === 'one' ? 1 : $number === 'two' ? 2 : $number ===\
    \ 'three' ? 3 : $number === 'four' ? 4 : $number === 'five' ? 5 : $number ===\
    \ 'six' ? 6 : $number === 'seven' ? 7 : $number === 'eight' ? 8 : $number ===\
    \ 'nine' ? 9 : $number;\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $number === 0 ? 'zero' : $number\
    \ === 1 ? 'one' : $number === 2 ? 'two' : $number === 3 ? 'three' : $number ===\
    \ 4 ? 'four' : $number === 5 ? 'five' : $number === 6 ? 'six' : $number === 7\
    \ ? 'seven' : $number === 8 ? 'eight' : $number === 9 ? 'nine' : $number;\n  \
    \  }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrlsbkf2.php:25\n\
    Stack trace:\n#0 /tmp/tmpyrlsbkf2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyrlsbkf2.php\
    \ on line 25\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xiya72i.php:24\n\
    Stack trace:\n#0 /tmp/tmp9xiya72i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9xiya72i.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfut60a03.php:24\n\
    Stack trace:\n#0 /tmp/tmpfut60a03.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfut60a03.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return $GLOBALS['numbers'][$num];\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return array_search($num, $GLOBALS['numbers']);\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\n$numbers = [\n    'zero' => 0,\n \
    \   'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n    'five'\
    \ => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n    'nine' =>\
    \ 9\n];\n\necho sort_numbers(\"three one five\") . \"\\n\";\necho sort_numbers(\"\
    five six four\") . \"\\n\";\necho sort_numbers(\"nine zero one\") . \"\\n\";\n\
    echo sort_numbers(\"eight two seven\") . \"\\n\";\necho sort_numbers(\"three three\
    \ three\") . \"\\n\";\necho sort_numbers(\"\") . \"\\n\";\necho sort_numbers(\"\
    one\") . \"\\n\";\necho sort_numbers(\"one two\") . \"\\n\";\necho sort_numbers(\"\
    one two three\") . \"\\n\";\necho sort_numbers(\"one two three four\") . \"\\\
    n\";\necho sort_numbers(\"one two three four five\") . \"\\n\";\necho sort_numbers(\"\
    one two three four five six\") . \"\\n\";\necho sort_numbers(\"one two three four\
    \ five six seven\") . \"\\n\";\necho sort_numbers(\"one two three four five six\
    \ seven eight\") . \"\\n\";\necho sort_numbers(\"one two three four five six seven\
    \ eight nine\") . \"\\n\";\necho sort_numbers(\"one two three four five six seven\
    \ eight nine zero\") . \"\\n\";\necho sort_numbers(\"one two three four five six\
    \ seven eight nine zero one\") . \"\\n\";\necho sort_numbers(\"one two three four\
    \ five six seven eight nine zero one two\") . \"\\n\";\necho sort_\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphr_gshto.php on line 51

    '
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        switch($num)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($num) {\n        switch($num)\
    \ {\n            case 0:\n                return 'zero';\n            case 1:\n\
    \                return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n        }\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4z7fvwu.php:66\n\
    Stack trace:\n#0 /tmp/tmpw4z7fvwu.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpw4z7fvwu.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $number_map = array(\n  \
    \  'zero' => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four'\
    \ => 4,\n    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' =>\
    \ 8,\n    'nine' => 9\n  );\n  $numbers = explode(' ', $numbers);\n  $numbers\
    \ = array_map(function($number) use ($number_map) {\n    return $number_map[$number];\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ use ($number_map) {\n    return array_search($number, $number_map);\n  }, $numbers);\n\
    \  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk09z31a_.php:36\n\
    Stack trace:\n#0 /tmp/tmpk09z31a_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk09z31a_.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($num) {\n    switch($num) {\n  \
    \    case 'zero':\n        return 0;\n      case 'one':\n        return 1;\n \
    \     case 'two':\n        return 2;\n      case 'three':\n        return 3;\n\
    \      case 'four':\n        return 4;\n      case 'five':\n        return 5;\n\
    \      case 'six':\n        return 6;\n      case 'seven':\n        return 7;\n\
    \      case 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n\
    \    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($num)\
    \ {\n    switch($num) {\n      case 0:\n        return 'zero';\n      case 1:\n\
    \        return 'one';\n      case 2:\n        return 'two';\n      case 3:\n\
    \        return 'three';\n      case 4:\n        return 'four';\n      case 5:\n\
    \        return 'five';\n      case 6:\n        return 'six';\n      case 7:\n\
    \        return 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n\
    \        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xtdjnl6.php:66\n\
    Stack trace:\n#0 /tmp/tmp9xtdjnl6.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp9xtdjnl6.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return array_search($num,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$num];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjum_aycl.php:24\n\
    Stack trace:\n#0 /tmp/tmpjum_aycl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjum_aycl.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_numeral($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return numeral_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp73miy1_o.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp73miy1_o.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp73miy1_o.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp73miy1_o.php(24): candidate('')\n#4 /tmp/tmp73miy1_o.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp73miy1_o.php on line 10\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        $number =\
    \ str_replace(\"zero\", \"0\", $number);\n        $number = str_replace(\"one\"\
    , \"1\", $number);\n        $number = str_replace(\"two\", \"2\", $number);\n\
    \        $number = str_replace(\"three\", \"3\", $number);\n        $number =\
    \ str_replace(\"four\", \"4\", $number);\n        $number = str_replace(\"five\"\
    , \"5\", $number);\n        $number = str_replace(\"six\", \"6\", $number);\n\
    \        $number = str_replace(\"seven\", \"7\", $number);\n        $number =\
    \ str_replace(\"eight\", \"8\", $number);\n        $number = str_replace(\"nine\"\
    , \"9\", $number);\n        return $number;\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = str_replace(\"\
    0\", \"zero\", $number);\n        $number = str_replace(\"1\", \"one\", $number);\n\
    \        $number = str_replace(\"2\", \"two\", $number);\n        $number = str_replace(\"\
    3\", \"three\", $number);\n        $number = str_replace(\"4\", \"four\", $number);\n\
    \        $number = str_replace(\"5\", \"five\", $number);\n        $number = str_replace(\"\
    6\", \"six\", $number);\n        $number = str_replace(\"7\", \"seven\", $number);\n\
    \        $number = str_replace(\"8\", \"eight\", $number);\n        $number =\
    \ str_replace(\"9\", \"nine\", $number);\n        return $number;\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi37p32u.php:66\n\
    Stack trace:\n#0 /tmp/tmpgi37p32u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgi37p32u.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xiya72i.php:24\n\
    Stack trace:\n#0 /tmp/tmp9xiya72i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9xiya72i.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi37p32u.php:66\n\
    Stack trace:\n#0 /tmp/tmpgi37p32u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgi37p32u.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $number_map = array(\n\
    \        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three'\
    \ => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n   \
    \     'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numbers\
    \ = explode(' ', $numbers);\n    $numbers = array_map(function($number) use ($number_map)\
    \ {\n        return $number_map[$number];\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) use ($number_map) {\n        return\
    \ array_search($number, $number_map);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc3e8lyj.php:36\n\
    Stack trace:\n#0 /tmp/tmpuc3e8lyj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuc3e8lyj.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return [\n     \
    \ 'number' => $number,\n      'value' => array_search($number, ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n\
    \  }, $numbers);\n  usort($numbers, function($a, $b) {\n    return $a['value']\
    \ - $b['value'];\n  });\n  $numbers = array_map(function($number) {\n    return\
    \ $number['number'];\n  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return $number ==\
    \ \"zero\" ? 0 : $number == \"one\" ? 1 : $number == \"two\" ? 2 : $number ==\
    \ \"three\" ? 3 : $number == \"four\" ? 4 : $number == \"five\" ? 5 : $number\
    \ == \"six\" ? 6 : $number == \"seven\" ? 7 : $number == \"eight\" ? 8 : $number\
    \ == \"nine\" ? 9 : $number;\n  }, $numbers);\n  sort($numbers);\n  $numbers =\
    \ array_map(function($number) {\n    return $number == 0 ? \"zero\" : $number\
    \ == 1 ? \"one\" : $number == 2 ? \"two\" : $number == 3 ? \"three\" : $number\
    \ == 4 ? \"four\" : $number == 5 ? \"five\" : $number == 6 ? \"six\" : $number\
    \ == 7 ? \"seven\" : $number == 8 ? \"eight\" : $number == 9 ? \"nine\" : $number;\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphssun07.php:24\n\
    Stack trace:\n#0 /tmp/tmpphssun07.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpphssun07.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return number_to_numeral($numeral_to_number($num));\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpagq2pyd3.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpagq2pyd3.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpagq2pyd3.php(17):\
    \ sort_numbers(Array)\n#3 /tmp/tmpagq2pyd3.php(21): candidate('')\n#4 /tmp/tmpagq2pyd3.php(28):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpagq2pyd3.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_to_word($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmpr7tu4os2.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpr7tu4os2.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpr7tu4os2.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpr7tu4os2.php(24): candidate('')\n#4 /tmp/tmpr7tu4os2.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpr7tu4os2.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch($number)\
    \ {\n            case 0:\n                return 'zero';\n            case 1:\n\
    \                return 'one';\n            case 2:\n                return 'two';\n\
    \            case 3:\n                return 'three';\n            case 4:\n \
    \               return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n        }\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhxdzzp3.php:66\n\
    Stack trace:\n#0 /tmp/tmpuhxdzzp3.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpuhxdzzp3.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_word($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return word_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_word()\
    \ in /tmp/tmpb5c5s_y7.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpb5c5s_y7.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpb5c5s_y7.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpb5c5s_y7.php(24): candidate('')\n#4 /tmp/tmpb5c5s_y7.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpb5c5s_y7.php on line 10\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return [\n     \
    \ 'zero' => 0,\n      'one' => 1,\n      'two' => 2,\n      'three' => 3,\n  \
    \    'four' => 4,\n      'five' => 5,\n      'six' => 6,\n      'seven' => 7,\n\
    \      'eight' => 8,\n      'nine' => 9,\n    ][$number];\n  }, $numbers);\n \
    \ sort($numbers);\n  $numbers = array_map(function($number) {\n    return [\n\
    \      0 => 'zero',\n      1 => 'one',\n      2 => 'two',\n      3 => 'three',\n\
    \      4 => 'four',\n      5 => 'five',\n      6 => 'six',\n      7 => 'seven',\n\
    \      8 => 'eight',\n      9 => 'nine',\n    ][$number];\n  }, $numbers);\n \
    \ return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return str_replace(['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map('strtolower', $numbers);\n\t$numbers = array_map('number_to_digit',\
    \ $numbers);\n\tsort($numbers);\n\t$numbers = array_map('digit_to_number', $numbers);\n\
    \treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'number_to_digit' not found or invalid function name in /tmp/tmp_0961ayf.php\
    \ on line 10\n\nWarning: sort() expects parameter 1 to be array, null given in\
    \ /tmp/tmp_0961ayf.php on line 11\n\nWarning: array_map() expects parameter 1\
    \ to be a valid callback, function 'digit_to_number' not found or invalid function\
    \ name in /tmp/tmp_0961ayf.php on line 12\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp_0961ayf.php on line 13\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_0961ayf.php:21\nStack trace:\n#0 /tmp/tmp_0961ayf.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_0961ayf.php on line 21\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41lgim9z.php:24\n\
    Stack trace:\n#0 /tmp/tmp41lgim9z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp41lgim9z.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(\"\
    \ \", $numbers);\n    $numbers_array = array_map(function($number) {\n       \
    \ return convert_number_to_int($number);\n    }, $numbers_array);\n    sort($numbers_array);\n\
    \    $numbers_array = array_map(function($number) {\n        return convert_int_to_number($number);\n\
    \    }, $numbers_array);\n    return implode(\" \", $numbers_array);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_number_to_int()\
    \ in /tmp/tmpbzby7aej.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpbzby7aej.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpbzby7aej.php(20):\
    \ sort_numbers('')\n#3 /tmp/tmpbzby7aej.php(24): candidate('')\n#4 /tmp/tmpbzby7aej.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpbzby7aej.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return $number\
    \ == \"zero\" ? 0 : $number == \"one\" ? 1 : $number == \"two\" ? 2 : $number\
    \ == \"three\" ? 3 : $number == \"four\" ? 4 : $number == \"five\" ? 5 : $number\
    \ == \"six\" ? 6 : $number == \"seven\" ? 7 : $number == \"eight\" ? 8 : $number\
    \ == \"nine\" ? 9 : null;\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return $number == 0 ? \"zero\" : $number\
    \ == 1 ? \"one\" : $number == 2 ? \"two\" : $number == 3 ? \"three\" : $number\
    \ == 4 ? \"four\" : $number == 5 ? \"five\" : $number == 6 ? \"six\" : $number\
    \ == 7 ? \"seven\" : $number == 8 ? \"eight\" : $number == 9 ? \"nine\" : null;\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzcd4chq.php:24\n\
    Stack trace:\n#0 /tmp/tmpjzcd4chq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjzcd4chq.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return [\n     \
    \ 'zero' => 0,\n      'one' => 1,\n      'two' => 2,\n      'three' => 3,\n  \
    \    'four' => 4,\n      'five' => 5,\n      'six' => 6,\n      'seven' => 7,\n\
    \      'eight' => 8,\n      'nine' => 9,\n    ][$number];\n  }, $numbers);\n \
    \ sort($numbers);\n  $numbers = array_map(function($number) {\n    return [\n\
    \      0 => 'zero',\n      1 => 'one',\n      2 => 'two',\n      3 => 'three',\n\
    \      4 => 'four',\n      5 => 'five',\n      6 => 'six',\n      7 => 'seven',\n\
    \      8 => 'eight',\n      9 => 'nine',\n    ][$number];\n  }, $numbers);\n \
    \ return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(\"\
    \ \", $numbers);\n    $numbers_array = array_map('number_to_int', $numbers_array);\n\
    \    sort($numbers_array);\n    $numbers_array = array_map('int_to_number', $numbers_array);\n\
    \    return implode(\" \", $numbers_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'number_to_int' not found or invalid function name in /tmp/tmpow_mg8fx.php on\
    \ line 9\n\nWarning: sort() expects parameter 1 to be array, null given in /tmp/tmpow_mg8fx.php\
    \ on line 10\n\nWarning: array_map() expects parameter 1 to be a valid callback,\
    \ function 'int_to_number' not found or invalid function name in /tmp/tmpow_mg8fx.php\
    \ on line 11\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpow_mg8fx.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow_mg8fx.php:20\n\
    Stack trace:\n#0 /tmp/tmpow_mg8fx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpow_mg8fx.php\
    \ on line 20\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"][$number];\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfut60a03.php:24\n\
    Stack trace:\n#0 /tmp/tmpfut60a03.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfut60a03.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi37p32u.php:66\n\
    Stack trace:\n#0 /tmp/tmpgi37p32u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgi37p32u.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7knid_h.php:24\n\
    Stack trace:\n#0 /tmp/tmpk7knid_h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7knid_h.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return $num ==\
    \ 'zero' ? 0 :\n               $num == 'one' ? 1 :\n               $num == 'two'\
    \ ? 2 :\n               $num == 'three' ? 3 :\n               $num == 'four' ?\
    \ 4 :\n               $num == 'five' ? 5 :\n               $num == 'six' ? 6 :\n\
    \               $num == 'seven' ? 7 :\n               $num == 'eight' ? 8 :\n\
    \               $num == 'nine' ? 9 :\n               null;\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($num) {\n        return\
    \ $num == 0 ? 'zero' :\n               $num == 1 ? 'one' :\n               $num\
    \ == 2 ? 'two' :\n               $num == 3 ? 'three' :\n               $num ==\
    \ 4 ? 'four' :\n               $num == 5 ? 'five' :\n               $num == 6\
    \ ? 'six' :\n               $num == 7 ? 'seven' :\n               $num == 8 ?\
    \ 'eight' :\n               $num == 9 ? 'nine' :\n               null;\n    },\
    \ $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2u80_nx.php:44\n\
    Stack trace:\n#0 /tmp/tmpw2u80_nx.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw2u80_nx.php\
    \ on line 44\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return array(\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    )[$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd79pnqd.php:24\n\
    Stack trace:\n#0 /tmp/tmprd79pnqd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprd79pnqd.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers\
    \ = array_map(function($number) {\n\t\treturn array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \t}, $numbers);\n\treturn implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpheaowpqt.php:24\n\
    Stack trace:\n#0 /tmp/tmpheaowpqt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpheaowpqt.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return get_number_value($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return get_number_name($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_number_value()\
    \ in /tmp/tmp11ms1pyf.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp11ms1pyf.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp11ms1pyf.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp11ms1pyf.php(24): candidate('')\n#4 /tmp/tmp11ms1pyf.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp11ms1pyf.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($num) {\n        return convert_to_number($num);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($num)\
    \ {\n        return convert_to_string($num);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmprul7dgeg.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmprul7dgeg.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmprul7dgeg.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmprul7dgeg.php(24): candidate('')\n#4 /tmp/tmprul7dgeg.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmprul7dgeg.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $number_map = array(\n        'zero' => 0,\n        'one' =>\
    \ 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n     \
    \   'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9\n    );\n    $numbers = array_map(function($number)\
    \ use ($number_map) {\n        return $number_map[$number];\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) use ($number_map)\
    \ {\n        return array_search($number, $number_map);\n    }, $numbers);\n \
    \   return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n  \
    \  return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7epl07p.php:36\n\
    Stack trace:\n#0 /tmp/tmp_7epl07p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_7epl07p.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return $number ==\
    \ \"zero\" ? 0 :\n           $number == \"one\" ? 1 :\n           $number == \"\
    two\" ? 2 :\n           $number == \"three\" ? 3 :\n           $number == \"four\"\
    \ ? 4 :\n           $number == \"five\" ? 5 :\n           $number == \"six\" ?\
    \ 6 :\n           $number == \"seven\" ? 7 :\n           $number == \"eight\"\
    \ ? 8 :\n           $number == \"nine\" ? 9 :\n           $number;\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    return $number\
    \ == 0 ? \"zero\" :\n           $number == 1 ? \"one\" :\n           $number ==\
    \ 2 ? \"two\" :\n           $number == 3 ? \"three\" :\n           $number ==\
    \ 4 ? \"four\" :\n           $number == 5 ? \"five\" :\n           $number ==\
    \ 6 ? \"six\" :\n           $number == 7 ? \"seven\" :\n           $number ==\
    \ 8 ? \"eight\" :\n           $number == 9 ? \"nine\" :\n           $number;\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnzw7fy0.php:44\n\
    Stack trace:\n#0 /tmp/tmpnnzw7fy0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnnzw7fy0.php\
    \ on line 44\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($num) {\n    return number_to_int($num);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($num) {\n\
    \    return int_to_number($num);\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmn8sqj92.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmn8sqj92.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmn8sqj92.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmn8sqj92.php(24): candidate('')\n#4 /tmp/tmpmn8sqj92.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmn8sqj92.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_string($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_number()\
    \ in /tmp/tmpu71oaefl.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpu71oaefl.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpu71oaefl.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpu71oaefl.php(24): candidate('')\n#4 /tmp/tmpu71oaefl.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpu71oaefl.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl8i2de7.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl8i2de7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsl8i2de7.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        $number =\
    \ strtolower($number);\n        switch ($number) {\n            case 'zero':\n\
    \                return 0;\n            case 'one':\n                return 1;\n\
    \            case 'two':\n                return 2;\n            case 'three':\n\
    \                return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n            default:\n                return 0;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return 'zero';\n        }\n    }, $numbers);\n\
    \    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps431wpbc.php:71\n\
    Stack trace:\n#0 /tmp/tmps431wpbc.php(78): test()\n#1 {main}\n  thrown in /tmp/tmps431wpbc.php\
    \ on line 71\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_to_word($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmpr7tu4os2.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpr7tu4os2.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpr7tu4os2.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpr7tu4os2.php(24): candidate('')\n#4 /tmp/tmpr7tu4os2.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpr7tu4os2.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  // Your code here\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_1dgmut.php:16\n\
    Stack trace:\n#0 /tmp/tmpq_1dgmut.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq_1dgmut.php\
    \ on line 16\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn number_to_int($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn int_to_number($number);\n\t}, $numbers);\n\treturn implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp0sn_k49h.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp0sn_k49h.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp0sn_k49h.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp0sn_k49h.php(24): candidate('')\n#4 /tmp/tmp0sn_k49h.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp0sn_k49h.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$numbers = explode(\" \"\
    , $numbers);\n\t$numbers = array_map(function($number) {\n\t\treturn number_to_digit($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn digit_to_number($number);\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpm4rxaq3r.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpm4rxaq3r.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpm4rxaq3r.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpm4rxaq3r.php(24): candidate('')\n#4 /tmp/tmpm4rxaq3r.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpm4rxaq3r.php on line 10\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers_map = array(\n        'zero' => 0,\n        'one' =>\
    \ 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n     \
    \   'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9\n    );\n    $numbers_map_rev = array_flip($numbers_map);\n\
    \    $numbers_int = array();\n    foreach ($numbers as $number) {\n        $numbers_int[]\
    \ = $numbers_map[$number];\n    }\n    sort($numbers_int);\n    $numbers_str =\
    \ array();\n    foreach ($numbers_int as $number) {\n        $numbers_str[] =\
    \ $numbers_map_rev[$number];\n    }\n    return implode(\" \", $numbers_str);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array(\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array(\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\")[$number];\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7knid_h.php:24\n\
    Stack trace:\n#0 /tmp/tmpk7knid_h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7knid_h.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $number_map = array(\n\
    \        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three'\
    \ => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n   \
    \     'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numbers\
    \ = explode(' ', $numbers);\n    $numbers = array_map(function($number) use ($number_map)\
    \ {\n        return $number_map[$number];\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) use ($number_map) {\n        return\
    \ array_search($number, $number_map);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc3e8lyj.php:36\n\
    Stack trace:\n#0 /tmp/tmpuc3e8lyj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuc3e8lyj.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xiya72i.php:24\n\
    Stack trace:\n#0 /tmp/tmp9xiya72i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9xiya72i.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_to_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_to_word($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_to_number()\
    \ in /tmp/tmpr7tu4os2.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpr7tu4os2.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpr7tu4os2.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpr7tu4os2.php(24): candidate('')\n#4 /tmp/tmpr7tu4os2.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpr7tu4os2.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_digit($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return digit_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpn377trlz.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpn377trlz.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpn377trlz.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpn377trlz.php(24): candidate('')\n#4 /tmp/tmpn377trlz.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpn377trlz.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        return 0;\n      case 'one':\n        return\
    \ 1;\n      case 'two':\n        return 2;\n      case 'three':\n        return\
    \ 3;\n      case 'four':\n        return 4;\n      case 'five':\n        return\
    \ 5;\n      case 'six':\n        return 6;\n      case 'seven':\n        return\
    \ 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n        return\
    \ 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(\" \",\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfwzb_sd.php:66\n\
    Stack trace:\n#0 /tmp/tmpwfwzb_sd.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwfwzb_sd.php\
    \ on line 66\n"
  timestamp: 1659730626

name: HumanEval_19_sort_numbers
language: php
prompt: "<?php\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\nfunction\
  \ sort_numbers($numbers) {\n"
tests: "function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
  \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
  \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\");\
  \ }\n}\n\ntest();"
completions: ["  $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array_search($number, array('zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'));\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array('zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n  }, $numbers);\n\
    \  return implode(\" \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_digit($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return digit_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($num) {\n   \
    \     return number_to_digit($num);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($num) {\n        return digit_to_number($num);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "  $num_array\
    \ = explode(\" \", $numbers);\n  $num_array = array_map(function($num) {\n   \
    \ switch ($num) {\n      case 'zero':\n        return 0;\n      case 'one':\n\
    \        return 1;\n      case 'two':\n        return 2;\n      case 'three':\n\
    \        return 3;\n      case 'four':\n        return 4;\n      case 'five':\n\
    \        return 5;\n      case 'six':\n        return 6;\n      case 'seven':\n\
    \        return 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n\
    \        return 9;\n    }\n  }, $num_array);\n  sort($num_array);\n  $num_array\
    \ = array_map(function($num) {\n    switch ($num) {\n      case 0:\n        return\
    \ 'zero';\n      case 1:\n        return 'one';\n      case 2:\n        return\
    \ 'two';\n      case 3:\n        return 'three';\n      case 4:\n        return\
    \ 'four';\n      case 5:\n        return 'five';\n      case 6:\n        return\
    \ 'six';\n      case 7:\n        return 'seven';\n      case 8:\n        return\
    \ 'eight';\n      case 9:\n        return 'nine';\n    }\n  }, $num_array);\n\
    \  return implode(\" \", $num_array);\n}\n", "  $numbers = explode(\" \", $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \ $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return number_to_digit($number);\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    return digit_to_number($number);\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n", "\t$numbers = explode(\"\
    \ \", $numbers);\n\t$numbers = array_map(function($number) {\n\t\tswitch ($number)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number)\
    \ {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase\
    \ 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase\
    \ 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase\
    \ 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase\
    \ 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\t\
    case 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(\" \"\
    , $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers =\
    \ array_map(function($number) {\n        return number_to_int($number);\n    },\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "  $numbers = explode(\" \", $numbers);\n  $numbers =\
    \ array_map(function($number) {\n    return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return int_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \ $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return number_to_int($number);\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    return int_to_number($number);\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ number_to_numeral($number);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "  $numbers =\
    \ explode(\" \", $numbers);\n  $numbers = array_map(function($number) {\n    return\
    \ array_search($number, array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array('zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine')[$number];\n  }, $numbers);\n\
    \  return implode(\" \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n", "  $numbers = explode(\" \", $numbers);\n  $numbers =\
    \ array_map(function($number) {\n    return number_to_int($number);\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    return int_to_number($number);\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

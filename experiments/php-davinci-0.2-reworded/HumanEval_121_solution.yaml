name: HumanEval_121_solution
language: php
prompt: "<?php\n// Given a non-empty array of integers, return the sum of all of the\
  \ odd elements that are in even positions.\n// Examples\n// >>> solution(array(5,\
  \ 8, 7, 1))\n// 12\n// >>> solution(array(3, 3, 3, 3, 3))\n// 9\n// >>> solution(array(30,\
  \ 13, 24, 321))\n// 0\nfunction solution($lst) {\n"
tests: "function candidate(...$args) {\n    return solution(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(5, 8, 7, 1)) !== 12) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(3, 3, 3, 3, 3)) !== 9) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(30, 13, 24, 321)) !== 0) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 9)) !== 5) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8)) !== 0) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(30, 13, 23,\
  \ 32)) !== 23) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 13, 2, 9)) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n       \
    \ if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n   \
    \     }\n    }\n    return $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    if ($i % 2 == 0 && $lst[$i] % 2 == 1) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum +=\
    \ $lst[$i];\n        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    for\
    \ ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2\
    \ == 1) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i\
    \ % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n        }\n\
    \    }\n    return $sum;\n}\n\necho solution(array(5, 8, 7, 1));\necho solution(array(3,\
    \ 3, 3, 3, 3));\necho solution(array(30, 13, 24, 321));", "    $sum = 0;\n   \
    \ for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i]\
    \ % 2 != 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($i % 2 ==\
    \ 0 && $lst[$i] % 2 == 1) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i\
    \ % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n        }\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum +=\
    \ $lst[$i];\n        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    for\
    \ ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2\
    \ != 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i\
    \ % 2 == 0 && $lst[$i] % 2 == 1) {\n            $sum += $lst[$i];\n        }\n\
    \    }\n    return $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n      $sum += $lst[$i];\n  \
    \  }\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i += 2) {\n        if ($lst[$i] % 2 == 1) {\n            $sum += $lst[$i];\n\
    \        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n    \
    \        $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 &&\
    \ $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n  \
    \      if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n\
    \        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i <\
    \ count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n    \
    \        $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 &&\
    \ $lst[$i] % 2 == 1) {\n            $sum += $lst[$i];\n        }\n    }\n    return\
    \ $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n    \
    \    if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n            $sum += $lst[$i];\n\
    \        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2 != 0) {\n  \
    \          $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

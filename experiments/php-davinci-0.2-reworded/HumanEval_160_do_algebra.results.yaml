language: php
name: HumanEval_160_do_algebra
results:
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx6a3bjk.php:51\n\
    Stack trace:\n#0 /tmp/tmprx6a3bjk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprx6a3bjk.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx6a3bjk.php:51\n\
    Stack trace:\n#0 /tmp/tmprx6a3bjk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprx6a3bjk.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7y9smmcj.php:50\n\
    Stack trace:\n#0 /tmp/tmp7y9smmcj.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7y9smmcj.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = (int) ($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphec0a5kh.php:50\n\
    Stack trace:\n#0 /tmp/tmphec0a5kh.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphec0a5kh.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx6a3bjk.php:51\n\
    Stack trace:\n#0 /tmp/tmprx6a3bjk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprx6a3bjk.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]) . \"\\n\";\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5, 6]) . \"\\n\";\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6, 7]) . \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6,\
    \ 7, 8]) . \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9])\
    \ . \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10]) .\
    \ \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\
    \ . \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12]) . \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe8ia7nk1.php on line 53

    '
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    if ($operator[$i] == '+') {\n      $result\
    \ += $operand[$i + 1];\n    } else if ($operator[$i] == '-') {\n      $result\
    \ -= $operand[$i + 1];\n    } else if ($operator[$i] == '*') {\n      $result\
    \ *= $operand[$i + 1];\n    } else if ($operator[$i] == '//') {\n      $result\
    \ = floor($result / $operand[$i + 1]);\n    } else if ($operator[$i] == '**')\
    \ {\n      $result = pow($result, $operand[$i + 1]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccozta1h.php:44\n\
    Stack trace:\n#0 /tmp/tmpccozta1h.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpccozta1h.php\
    \ on line 44\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = array_shift($operand);\n  \
    \  for ($i = 0; $i < count($operator); $i++) {\n        switch ($operator[$i])\
    \ {\n            case '+':\n                $result += $operand[$i];\n       \
    \         break;\n            case '-':\n                $result -= $operand[$i];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i];\n\
    \                break;\n            case '//':\n                $result = floor($result\
    \ / $operand[$i]);\n                break;\n            case '**':\n         \
    \       $result = pow($result, $operand[$i]);\n                break;\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoaqilbez.php:50\n\
    Stack trace:\n#0 /tmp/tmpoaqilbez.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpoaqilbez.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'],\
    \ [2, 3, 4, 5]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3,\
    \ 4, 5, 6]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4,\
    \ 5, 6, 7]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4,\
    \ 5, 6, 7, 8]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3,\
    \ 4, 5, 6, 7, 8, 9]);\necho \"\\n\";\necho do_algebra(['+', '*', '//', '**'],\
    \ [2, 3, 4, 5, 6, 7, 8, 9, 10]);\necho \"\\n\";\necho do_algebra(['+', '*', '//',\
    \ '**'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\necho \"\\n\";\necho do_algebra(['+',\
    \ '*', '//', '**\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuz7wc7of.php on line 60

    '
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx6a3bjk.php:51\n\
    Stack trace:\n#0 /tmp/tmprx6a3bjk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprx6a3bjk.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5,\
    \ 6, 7]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7,\
    \ 8]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8,\
    \ 9]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12]);\necho \"\\n\";\necho do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5, 6, 7, 8, 9\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_5mt1zpc.php on line 61

    '
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  // Write your code here\n  $result = $operand[0];\n\
    \  for($i = 0; $i < count($operator); $i++){\n    switch($operator[$i]){\n   \
    \   case '+':\n        $result += $operand[$i+1];\n        break;\n      case\
    \ '-':\n        $result -= $operand[$i+1];\n        break;\n      case '*':\n\
    \        $result *= $operand[$i+1];\n        break;\n      case '//':\n      \
    \  $result = floor($result / $operand[$i+1]);\n        break;\n      case '**':\n\
    \        $result = pow($result, $operand[$i+1]);\n        break;\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdggx9dn8.php:51\n\
    Stack trace:\n#0 /tmp/tmpdggx9dn8.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpdggx9dn8.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\necho do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) . \"\\n\";\necho do_algebra(['+', '*', '//', '**'],\
    \ [2, 3, 4, 5]) . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4,\
    \ 5, 6]) . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7])\
    \ . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7, 8]) .\
    \ \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9])\
    \ . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]) . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) . \"\\n\";\necho do_algebra(['+', '*', '//', '**'], [2, 3, 4\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu7jb9z16.php on line 53

    '
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\necho\
    \ do_algebra(['+', '*', '-'], [2, 3, 4, 5]);\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx6a3bjk.php:51\n\
    Stack trace:\n#0 /tmp/tmprx6a3bjk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprx6a3bjk.php\
    \ on line 51\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    if ($operator[$i] == '+') {\n      $result\
    \ += $operand[$i + 1];\n    } else if ($operator[$i] == '-') {\n      $result\
    \ -= $operand[$i + 1];\n    } else if ($operator[$i] == '*') {\n      $result\
    \ *= $operand[$i + 1];\n    } else if ($operator[$i] == '//') {\n      $result\
    \ = floor($result / $operand[$i + 1]);\n    } else if ($operator[$i] == '**')\
    \ {\n      $result = pow($result, $operand[$i + 1]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccozta1h.php:44\n\
    Stack trace:\n#0 /tmp/tmpccozta1h.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpccozta1h.php\
    \ on line 44\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ /= $operand[$i + 1];\n                break;\n            case '**':\n     \
    \           $result = pow($result, $operand[$i + 1]);\n                break;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsuc6e5_g.php:50\n\
    Stack trace:\n#0 /tmp/tmpsuc6e5_g.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpsuc6e5_g.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\n$operator\
    \ = ['+', '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp014i_k1q.php:53\n\
    Stack trace:\n#0 /tmp/tmp014i_k1q.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp014i_k1q.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\n$operator = ['+',\
    \ '*', '-'];\n$operand = [2, 3, 4, 5];\necho do_algebra($operator, $operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs7r_gsx.php:53\n\
    Stack trace:\n#0 /tmp/tmpjs7r_gsx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjs7r_gsx.php\
    \ on line 53\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n    $result = $operand[0];\n    for ($i =\
    \ 0; $i < count($operator); $i++) {\n        switch ($operator[$i]) {\n      \
    \      case '+':\n                $result += $operand[$i + 1];\n             \
    \   break;\n            case '-':\n                $result -= $operand[$i + 1];\n\
    \                break;\n            case '*':\n                $result *= $operand[$i\
    \ + 1];\n                break;\n            case '//':\n                $result\
    \ = floor($result / $operand[$i + 1]);\n                break;\n            case\
    \ '**':\n                $result = pow($result, $operand[$i + 1]);\n         \
    \       break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpponvcfix.php:50\n\
    Stack trace:\n#0 /tmp/tmpponvcfix.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpponvcfix.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887
- exit_code: 255
  program: "<?php\n// Given two arrays operator, and operand. The first array has\
    \ basic algebra operations, and \n// the second array is an array of integers.\
    \ Use the two given arrays to build the algebric \n// expression and return the\
    \ evaluation of this expression.\n// The basic algebra operations:\n// Addition\
    \ ( + ) \n// Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division (\
    \ // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n\
    // array = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n\
    // The length of operator array is equal to the length of operand array minus\
    \ one.\n// Operand is an array of of non-negative integers.\n// Operator array\
    \ has at least one operator, and operand array has at least two operands.\nfunction\
    \ do_algebra($operator, $operand) {\n  $result = $operand[0];\n  for ($i = 0;\
    \ $i < count($operator); $i++) {\n    switch ($operator[$i]) {\n      case '+':\n\
    \        $result += $operand[$i + 1];\n        break;\n      case '-':\n     \
    \   $result -= $operand[$i + 1];\n        break;\n      case '*':\n        $result\
    \ *= $operand[$i + 1];\n        break;\n      case '//':\n        $result = floor($result\
    \ / $operand[$i + 1]);\n        break;\n      case '**':\n        $result = pow($result,\
    \ $operand[$i + 1]);\n        break;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9incd9_.php:50\n\
    Stack trace:\n#0 /tmp/tmpc9incd9_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpc9incd9_.php\
    \ on line 50\n"
  timestamp: 1659729887

name: HumanEval_34_unique
language: php
prompt: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
  \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
  \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $u)) {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return\
    \ $u;\n}\n", "    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $u)) {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return\
    \ $u;\n}\n", "    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $u)) {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return\
    \ $u;\n}\n", "\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u))\
    \ {\n\t\t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n", "    $u =\
    \ array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u)) {\n     \
    \       $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n}\n", " \
    \   $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u)) {\n\
    \            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n}\n",
  "    $s = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $s)) {\n\
    \            $s[] = $v;\n        }\n    }\n    sort($s);\n    return $s;\n}\n",
  "    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u)) {\n\
    \            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n}\n",
  "    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u)) {\n\
    \            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n}\n",
  "    return array_values(array_unique($l));\n}\n", "\t$l = array_unique($l);\n\t\
    sort($l);\n\treturn $l;\n}\n", "    $u = array();\n    foreach ($l as $e) {\n\
    \        if (!in_array($e, $u)) {\n            $u[] = $e;\n        }\n    }\n\
    \    sort($u);\n    return $u;\n}\n", "    return array_values(array_unique($l));\n\
    }\n", "    return array_values(array_unique($l));\n}\n", "    $u = array();\n\
    \    foreach ($l as $e) {\n        if (!in_array($e, $u)) {\n            $u[]\
    \ = $e;\n        }\n    }\n    sort($u);\n    return $u;\n}\n", "\t$u = array();\n\
    \tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\t\t$u[] = $v;\n\t\t}\n\
    \t}\n\tsort($u);\n\treturn $u;\n}\n", "    return array_values(array_unique($l));\n\
    }\n", "    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v,\
    \ $u)) {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return\
    \ $u;\n}\n", "    return array_values(array_unique($l));\n}\n", "    return array_values(array_unique($l));\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"
